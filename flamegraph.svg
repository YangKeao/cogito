<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1158" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1141.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1141.00"> </text><svg id="frames" x="10" width="1180"><g><title>alloc::vec::Vec&lt;T&gt;::push::h3944fd884ea9bef2 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="933" width="5.7660%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="943.50">alloc::..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="917" width="5.7660%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="927.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="901" width="5.7660%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="911.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="885" width="5.7660%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="895.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (2,052 samples, 5.77%)</title><rect x="0.0000%" y="869" width="5.7660%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="879.50">&lt;alloc:..</text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="853" width="5.7660%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="863.50">alloc::..</text></g><g><title>__rg_realloc (2,052 samples, 5.77%)</title><rect x="0.0000%" y="837" width="5.7660%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="847.50">__rg_re..</text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="821" width="5.7660%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="831.50">core::a..</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (2,052 samples, 5.77%)</title><rect x="0.0000%" y="805" width="5.7660%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="815.50">&lt;cogito..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="789" width="5.7660%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="799.50">cogito:..</text></g><g><title>Unknown (2,052 samples, 5.77%)</title><rect x="0.0000%" y="773" width="5.7660%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="783.50">Unknown</text></g><g><title>_start (2,052 samples, 5.77%)</title><rect x="0.0000%" y="757" width="5.7660%" height="15" fill="rgb(240,193,28)"/><text x="0.2500%" y="767.50">_start</text></g><g><title>__libc_start_main (2,052 samples, 5.77%)</title><rect x="0.0000%" y="741" width="5.7660%" height="15" fill="rgb(216,20,37)"/><text x="0.2500%" y="751.50">__libc_..</text></g><g><title>main (2,052 samples, 5.77%)</title><rect x="0.0000%" y="725" width="5.7660%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="735.50">main</text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="709" width="5.7660%" height="15" fill="rgb(217,207,13)"/><text x="0.2500%" y="719.50">std::rt..</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (2,052 samples, 5.77%)</title><rect x="0.0000%" y="693" width="5.7660%" height="15" fill="rgb(231,73,38)"/><text x="0.2500%" y="703.50">std::rt..</text></g><g><title>__rust_maybe_catch_panic (2,052 samples, 5.77%)</title><rect x="0.0000%" y="677" width="5.7660%" height="15" fill="rgb(225,20,46)"/><text x="0.2500%" y="687.50">__rust_..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="661" width="5.7660%" height="15" fill="rgb(210,31,41)"/><text x="0.2500%" y="671.50">std::pa..</text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (2,052 samples, 5.77%)</title><rect x="0.0000%" y="645" width="5.7660%" height="15" fill="rgb(221,200,47)"/><text x="0.2500%" y="655.50">std::rt..</text></g><g><title>alloc_free::main::h77183791c68e94c3 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="629" width="5.7660%" height="15" fill="rgb(226,26,5)"/><text x="0.2500%" y="639.50">alloc_f..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::push::h3944fd884ea9bef2 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="613" width="5.7660%" height="15" fill="rgb(249,33,26)"/><text x="0.2500%" y="623.50">alloc::..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="597" width="5.7660%" height="15" fill="rgb(235,183,28)"/><text x="0.2500%" y="607.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="581" width="5.7660%" height="15" fill="rgb(221,5,38)"/><text x="0.2500%" y="591.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (2,052 samples, 5.77%)</title><rect x="0.0000%" y="565" width="5.7660%" height="15" fill="rgb(247,18,42)"/><text x="0.2500%" y="575.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (2,048 samples, 5.75%)</title><rect x="0.0112%" y="549" width="5.7547%" height="15" fill="rgb(241,131,45)"/><text x="0.2612%" y="559.50">&lt;alloc:..</text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (2,048 samples, 5.75%)</title><rect x="0.0112%" y="533" width="5.7547%" height="15" fill="rgb(249,31,29)"/><text x="0.2612%" y="543.50">alloc::..</text></g><g><title>__rg_realloc (2,048 samples, 5.75%)</title><rect x="0.0112%" y="517" width="5.7547%" height="15" fill="rgb(225,111,53)"/><text x="0.2612%" y="527.50">__rg_re..</text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (2,048 samples, 5.75%)</title><rect x="0.0112%" y="501" width="5.7547%" height="15" fill="rgb(238,160,17)"/><text x="0.2612%" y="511.50">core::a..</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (2,048 samples, 5.75%)</title><rect x="0.0112%" y="485" width="5.7547%" height="15" fill="rgb(214,148,48)"/><text x="0.2612%" y="495.50">&lt;cogito..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (2,048 samples, 5.75%)</title><rect x="0.0112%" y="469" width="5.7547%" height="15" fill="rgb(232,36,49)"/><text x="0.2612%" y="479.50">cogito:..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (76 samples, 0.21%)</title><rect x="5.7660%" y="645" width="0.2136%" height="15" fill="rgb(209,103,24)"/><text x="6.0160%" y="655.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (156 samples, 0.44%)</title><rect x="5.7660%" y="661" width="0.4384%" height="15" fill="rgb(229,88,8)"/><text x="6.0160%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (36 samples, 0.10%)</title><rect x="6.2493%" y="661" width="0.1012%" height="15" fill="rgb(213,181,19)"/><text x="6.4993%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (36 samples, 0.10%)</title><rect x="6.2493%" y="645" width="0.1012%" height="15" fill="rgb(254,191,54)"/><text x="6.4993%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (36 samples, 0.10%)</title><rect x="6.2493%" y="629" width="0.1012%" height="15" fill="rgb(241,83,37)"/><text x="6.4993%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (36 samples, 0.10%)</title><rect x="6.2493%" y="613" width="0.1012%" height="15" fill="rgb(233,36,39)"/><text x="6.4993%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (36 samples, 0.10%)</title><rect x="6.2493%" y="597" width="0.1012%" height="15" fill="rgb(226,3,54)"/><text x="6.4993%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (36 samples, 0.10%)</title><rect x="6.2493%" y="581" width="0.1012%" height="15" fill="rgb(245,192,40)"/><text x="6.4993%" y="591.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (240 samples, 0.67%)</title><rect x="5.7660%" y="677" width="0.6744%" height="15" fill="rgb(238,167,29)"/><text x="6.0160%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (344 samples, 0.97%)</title><rect x="5.7660%" y="693" width="0.9666%" height="15" fill="rgb(232,182,51)"/><text x="6.0160%" y="703.50"></text></g><g><title>core::ptr::real_drop_in_place::h065749e7cfc69f30 (40 samples, 0.11%)</title><rect x="6.6202%" y="677" width="0.1124%" height="15" fill="rgb(231,60,39)"/><text x="6.8702%" y="687.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (40 samples, 0.11%)</title><rect x="6.6202%" y="661" width="0.1124%" height="15" fill="rgb(208,69,12)"/><text x="6.8702%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (40 samples, 0.11%)</title><rect x="6.6202%" y="645" width="0.1124%" height="15" fill="rgb(235,93,37)"/><text x="6.8702%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (40 samples, 0.11%)</title><rect x="6.6202%" y="629" width="0.1124%" height="15" fill="rgb(213,116,39)"/><text x="6.8702%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (40 samples, 0.11%)</title><rect x="6.6202%" y="613" width="0.1124%" height="15" fill="rgb(222,207,29)"/><text x="6.8702%" y="623.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (40 samples, 0.11%)</title><rect x="6.6202%" y="597" width="0.1124%" height="15" fill="rgb(206,96,30)"/><text x="6.8702%" y="607.50"></text></g><g><title>__rg_dealloc (40 samples, 0.11%)</title><rect x="6.6202%" y="581" width="0.1124%" height="15" fill="rgb(218,138,4)"/><text x="6.8702%" y="591.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (40 samples, 0.11%)</title><rect x="6.6202%" y="565" width="0.1124%" height="15" fill="rgb(250,191,14)"/><text x="6.8702%" y="575.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (40 samples, 0.11%)</title><rect x="6.6202%" y="549" width="0.1124%" height="15" fill="rgb(239,60,40)"/><text x="6.8702%" y="559.50"></text></g><g><title>Unknown (40 samples, 0.11%)</title><rect x="6.6202%" y="533" width="0.1124%" height="15" fill="rgb(206,27,48)"/><text x="6.8702%" y="543.50"></text></g><g><title>_start (40 samples, 0.11%)</title><rect x="6.6202%" y="517" width="0.1124%" height="15" fill="rgb(225,35,8)"/><text x="6.8702%" y="527.50"></text></g><g><title>__libc_start_main (40 samples, 0.11%)</title><rect x="6.6202%" y="501" width="0.1124%" height="15" fill="rgb(250,213,24)"/><text x="6.8702%" y="511.50"></text></g><g><title>main (40 samples, 0.11%)</title><rect x="6.6202%" y="485" width="0.1124%" height="15" fill="rgb(247,123,22)"/><text x="6.8702%" y="495.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (40 samples, 0.11%)</title><rect x="6.6202%" y="469" width="0.1124%" height="15" fill="rgb(231,138,38)"/><text x="6.8702%" y="479.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (40 samples, 0.11%)</title><rect x="6.6202%" y="453" width="0.1124%" height="15" fill="rgb(231,145,46)"/><text x="6.8702%" y="463.50"></text></g><g><title>__rust_maybe_catch_panic (40 samples, 0.11%)</title><rect x="6.6202%" y="437" width="0.1124%" height="15" fill="rgb(251,118,11)"/><text x="6.8702%" y="447.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (40 samples, 0.11%)</title><rect x="6.6202%" y="421" width="0.1124%" height="15" fill="rgb(217,147,25)"/><text x="6.8702%" y="431.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (40 samples, 0.11%)</title><rect x="6.6202%" y="405" width="0.1124%" height="15" fill="rgb(247,81,37)"/><text x="6.8702%" y="415.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (40 samples, 0.11%)</title><rect x="6.6202%" y="389" width="0.1124%" height="15" fill="rgb(209,12,38)"/><text x="6.8702%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="373" width="0.1124%" height="15" fill="rgb(227,1,9)"/><text x="6.8702%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="357" width="0.1124%" height="15" fill="rgb(248,47,43)"/><text x="6.8702%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="341" width="0.1124%" height="15" fill="rgb(221,10,30)"/><text x="6.8702%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="325" width="0.1124%" height="15" fill="rgb(210,229,1)"/><text x="6.8702%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="309" width="0.1124%" height="15" fill="rgb(222,148,37)"/><text x="6.8702%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="293" width="0.1124%" height="15" fill="rgb(234,67,33)"/><text x="6.8702%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="277" width="0.1124%" height="15" fill="rgb(247,98,35)"/><text x="6.8702%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="261" width="0.1124%" height="15" fill="rgb(247,138,52)"/><text x="6.8702%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="245" width="0.1124%" height="15" fill="rgb(213,79,30)"/><text x="6.8702%" y="255.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="229" width="0.1124%" height="15" fill="rgb(246,177,23)"/><text x="6.8702%" y="239.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="213" width="0.1124%" height="15" fill="rgb(230,62,27)"/><text x="6.8702%" y="223.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="197" width="0.1124%" height="15" fill="rgb(216,154,8)"/><text x="6.8702%" y="207.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="181" width="0.1124%" height="15" fill="rgb(244,35,45)"/><text x="6.8702%" y="191.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="165" width="0.1124%" height="15" fill="rgb(251,115,12)"/><text x="6.8702%" y="175.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="6.6202%" y="149" width="0.1124%" height="15" fill="rgb(240,54,50)"/><text x="6.8702%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (40 samples, 0.11%)</title><rect x="6.8000%" y="693" width="0.1124%" height="15" fill="rgb(233,84,52)"/><text x="7.0500%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (40 samples, 0.11%)</title><rect x="6.8000%" y="677" width="0.1124%" height="15" fill="rgb(207,117,47)"/><text x="7.0500%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (40 samples, 0.11%)</title><rect x="6.8000%" y="661" width="0.1124%" height="15" fill="rgb(249,43,39)"/><text x="7.0500%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (40 samples, 0.11%)</title><rect x="6.8000%" y="645" width="0.1124%" height="15" fill="rgb(209,38,44)"/><text x="7.0500%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (40 samples, 0.11%)</title><rect x="6.8000%" y="629" width="0.1124%" height="15" fill="rgb(236,212,23)"/><text x="7.0500%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (40 samples, 0.11%)</title><rect x="6.8000%" y="613" width="0.1124%" height="15" fill="rgb(242,79,21)"/><text x="7.0500%" y="623.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (440 samples, 1.24%)</title><rect x="5.7660%" y="709" width="1.2364%" height="15" fill="rgb(211,96,35)"/><text x="6.0160%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (36 samples, 0.10%)</title><rect x="7.0923%" y="709" width="0.1012%" height="15" fill="rgb(253,215,40)"/><text x="7.3423%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (36 samples, 0.10%)</title><rect x="7.0923%" y="693" width="0.1012%" height="15" fill="rgb(211,81,21)"/><text x="7.3423%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (36 samples, 0.10%)</title><rect x="7.0923%" y="677" width="0.1012%" height="15" fill="rgb(208,190,38)"/><text x="7.3423%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (36 samples, 0.10%)</title><rect x="7.0923%" y="661" width="0.1012%" height="15" fill="rgb(235,213,38)"/><text x="7.3423%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (36 samples, 0.10%)</title><rect x="7.0923%" y="645" width="0.1012%" height="15" fill="rgb(237,122,38)"/><text x="7.3423%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (36 samples, 0.10%)</title><rect x="7.0923%" y="629" width="0.1012%" height="15" fill="rgb(244,218,35)"/><text x="7.3423%" y="639.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (540 samples, 1.52%)</title><rect x="5.7660%" y="725" width="1.5174%" height="15" fill="rgb(240,68,47)"/><text x="6.0160%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (36 samples, 0.10%)</title><rect x="7.2834%" y="677" width="0.1012%" height="15" fill="rgb(210,16,53)"/><text x="7.5334%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (36 samples, 0.10%)</title><rect x="7.2834%" y="661" width="0.1012%" height="15" fill="rgb(235,124,12)"/><text x="7.5334%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (36 samples, 0.10%)</title><rect x="7.2834%" y="645" width="0.1012%" height="15" fill="rgb(224,169,11)"/><text x="7.5334%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (36 samples, 0.10%)</title><rect x="7.2834%" y="629" width="0.1012%" height="15" fill="rgb(250,166,2)"/><text x="7.5334%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (36 samples, 0.10%)</title><rect x="7.2834%" y="613" width="0.1012%" height="15" fill="rgb(242,216,29)"/><text x="7.5334%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (36 samples, 0.10%)</title><rect x="7.2834%" y="597" width="0.1012%" height="15" fill="rgb(230,116,27)"/><text x="7.5334%" y="607.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (36 samples, 0.10%)</title><rect x="7.2834%" y="581" width="0.1012%" height="15" fill="rgb(228,99,48)"/><text x="7.5334%" y="591.50"></text></g><g><title>__rg_realloc (36 samples, 0.10%)</title><rect x="7.2834%" y="565" width="0.1012%" height="15" fill="rgb(253,11,6)"/><text x="7.5334%" y="575.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (36 samples, 0.10%)</title><rect x="7.2834%" y="549" width="0.1012%" height="15" fill="rgb(247,143,39)"/><text x="7.5334%" y="559.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (36 samples, 0.10%)</title><rect x="7.2834%" y="533" width="0.1012%" height="15" fill="rgb(236,97,10)"/><text x="7.5334%" y="543.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (36 samples, 0.10%)</title><rect x="7.2834%" y="517" width="0.1012%" height="15" fill="rgb(233,208,19)"/><text x="7.5334%" y="527.50"></text></g><g><title>Unknown (36 samples, 0.10%)</title><rect x="7.2834%" y="501" width="0.1012%" height="15" fill="rgb(216,164,2)"/><text x="7.5334%" y="511.50"></text></g><g><title>_start (36 samples, 0.10%)</title><rect x="7.2834%" y="485" width="0.1012%" height="15" fill="rgb(220,129,5)"/><text x="7.5334%" y="495.50"></text></g><g><title>__libc_start_main (36 samples, 0.10%)</title><rect x="7.2834%" y="469" width="0.1012%" height="15" fill="rgb(242,17,10)"/><text x="7.5334%" y="479.50"></text></g><g><title>main (36 samples, 0.10%)</title><rect x="7.2834%" y="453" width="0.1012%" height="15" fill="rgb(242,107,0)"/><text x="7.5334%" y="463.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (36 samples, 0.10%)</title><rect x="7.2834%" y="437" width="0.1012%" height="15" fill="rgb(251,28,31)"/><text x="7.5334%" y="447.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (36 samples, 0.10%)</title><rect x="7.2834%" y="421" width="0.1012%" height="15" fill="rgb(233,223,10)"/><text x="7.5334%" y="431.50"></text></g><g><title>__rust_maybe_catch_panic (36 samples, 0.10%)</title><rect x="7.2834%" y="405" width="0.1012%" height="15" fill="rgb(215,21,27)"/><text x="7.5334%" y="415.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (36 samples, 0.10%)</title><rect x="7.2834%" y="389" width="0.1012%" height="15" fill="rgb(232,23,21)"/><text x="7.5334%" y="399.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (36 samples, 0.10%)</title><rect x="7.2834%" y="373" width="0.1012%" height="15" fill="rgb(244,5,23)"/><text x="7.5334%" y="383.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (36 samples, 0.10%)</title><rect x="7.2834%" y="357" width="0.1012%" height="15" fill="rgb(226,81,46)"/><text x="7.5334%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="7.2834%" y="341" width="0.1012%" height="15" fill="rgb(247,70,30)"/><text x="7.5334%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="7.2834%" y="325" width="0.1012%" height="15" fill="rgb(212,68,19)"/><text x="7.5334%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="7.2834%" y="309" width="0.1012%" height="15" fill="rgb(240,187,13)"/><text x="7.5334%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="7.2834%" y="293" width="0.1012%" height="15" fill="rgb(223,113,26)"/><text x="7.5334%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="7.2834%" y="277" width="0.1012%" height="15" fill="rgb(206,192,2)"/><text x="7.5334%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="7.2834%" y="261" width="0.1012%" height="15" fill="rgb(241,108,4)"/><text x="7.5334%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="7.2834%" y="245" width="0.1012%" height="15" fill="rgb(247,173,49)"/><text x="7.5334%" y="255.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="7.2834%" y="229" width="0.1012%" height="15" fill="rgb(224,114,35)"/><text x="7.5334%" y="239.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="7.2834%" y="213" width="0.1012%" height="15" fill="rgb(245,159,27)"/><text x="7.5334%" y="223.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="7.2834%" y="197" width="0.1012%" height="15" fill="rgb(245,172,44)"/><text x="7.5334%" y="207.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="7.2834%" y="181" width="0.1012%" height="15" fill="rgb(236,23,11)"/><text x="7.5334%" y="191.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="7.2834%" y="165" width="0.1012%" height="15" fill="rgb(205,117,38)"/><text x="7.5334%" y="175.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="7.2834%" y="149" width="0.1012%" height="15" fill="rgb(237,72,25)"/><text x="7.5334%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (36 samples, 0.10%)</title><rect x="7.2834%" y="133" width="0.1012%" height="15" fill="rgb(244,70,9)"/><text x="7.5334%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (36 samples, 0.10%)</title><rect x="7.2834%" y="117" width="0.1012%" height="15" fill="rgb(217,125,39)"/><text x="7.5334%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (36 samples, 0.10%)</title><rect x="7.2834%" y="101" width="0.1012%" height="15" fill="rgb(235,36,10)"/><text x="7.5334%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (36 samples, 0.10%)</title><rect x="7.2834%" y="725" width="0.1012%" height="15" fill="rgb(251,123,47)"/><text x="7.5334%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (36 samples, 0.10%)</title><rect x="7.2834%" y="709" width="0.1012%" height="15" fill="rgb(221,13,13)"/><text x="7.5334%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (36 samples, 0.10%)</title><rect x="7.2834%" y="693" width="0.1012%" height="15" fill="rgb(238,131,9)"/><text x="7.5334%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (36 samples, 0.10%)</title><rect x="7.4182%" y="725" width="0.1012%" height="15" fill="rgb(211,50,8)"/><text x="7.6682%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (36 samples, 0.10%)</title><rect x="7.4182%" y="709" width="0.1012%" height="15" fill="rgb(245,182,24)"/><text x="7.6682%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (36 samples, 0.10%)</title><rect x="7.4182%" y="693" width="0.1012%" height="15" fill="rgb(242,14,37)"/><text x="7.6682%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (36 samples, 0.10%)</title><rect x="7.4182%" y="677" width="0.1012%" height="15" fill="rgb(246,228,12)"/><text x="7.6682%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (36 samples, 0.10%)</title><rect x="7.4182%" y="661" width="0.1012%" height="15" fill="rgb(213,55,15)"/><text x="7.6682%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (36 samples, 0.10%)</title><rect x="7.4182%" y="645" width="0.1012%" height="15" fill="rgb(209,9,3)"/><text x="7.6682%" y="655.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (648 samples, 1.82%)</title><rect x="5.7660%" y="741" width="1.8208%" height="15" fill="rgb(230,59,30)"/><text x="6.0160%" y="751.50">a..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (740 samples, 2.08%)</title><rect x="5.7660%" y="757" width="2.0794%" height="15" fill="rgb(209,121,21)"/><text x="6.0160%" y="767.50">a..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (836 samples, 2.35%)</title><rect x="5.7660%" y="773" width="2.3491%" height="15" fill="rgb(220,109,13)"/><text x="6.0160%" y="783.50">a..</text></g><g><title>core::ptr::real_drop_in_place::h065749e7cfc69f30 (40 samples, 0.11%)</title><rect x="8.0027%" y="757" width="0.1124%" height="15" fill="rgb(232,18,1)"/><text x="8.2527%" y="767.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (40 samples, 0.11%)</title><rect x="8.0027%" y="741" width="0.1124%" height="15" fill="rgb(215,41,42)"/><text x="8.2527%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (40 samples, 0.11%)</title><rect x="8.0027%" y="725" width="0.1124%" height="15" fill="rgb(224,123,36)"/><text x="8.2527%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (40 samples, 0.11%)</title><rect x="8.0027%" y="709" width="0.1124%" height="15" fill="rgb(240,125,3)"/><text x="8.2527%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (40 samples, 0.11%)</title><rect x="8.0027%" y="693" width="0.1124%" height="15" fill="rgb(205,98,50)"/><text x="8.2527%" y="703.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (40 samples, 0.11%)</title><rect x="8.0027%" y="677" width="0.1124%" height="15" fill="rgb(205,185,37)"/><text x="8.2527%" y="687.50"></text></g><g><title>__rg_dealloc (40 samples, 0.11%)</title><rect x="8.0027%" y="661" width="0.1124%" height="15" fill="rgb(238,207,15)"/><text x="8.2527%" y="671.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (40 samples, 0.11%)</title><rect x="8.0027%" y="645" width="0.1124%" height="15" fill="rgb(213,199,42)"/><text x="8.2527%" y="655.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (40 samples, 0.11%)</title><rect x="8.0027%" y="629" width="0.1124%" height="15" fill="rgb(235,201,11)"/><text x="8.2527%" y="639.50"></text></g><g><title>Unknown (40 samples, 0.11%)</title><rect x="8.0027%" y="613" width="0.1124%" height="15" fill="rgb(207,46,11)"/><text x="8.2527%" y="623.50"></text></g><g><title>_start (40 samples, 0.11%)</title><rect x="8.0027%" y="597" width="0.1124%" height="15" fill="rgb(241,35,35)"/><text x="8.2527%" y="607.50"></text></g><g><title>__libc_start_main (40 samples, 0.11%)</title><rect x="8.0027%" y="581" width="0.1124%" height="15" fill="rgb(243,32,47)"/><text x="8.2527%" y="591.50"></text></g><g><title>main (40 samples, 0.11%)</title><rect x="8.0027%" y="565" width="0.1124%" height="15" fill="rgb(247,202,23)"/><text x="8.2527%" y="575.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (40 samples, 0.11%)</title><rect x="8.0027%" y="549" width="0.1124%" height="15" fill="rgb(219,102,11)"/><text x="8.2527%" y="559.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (40 samples, 0.11%)</title><rect x="8.0027%" y="533" width="0.1124%" height="15" fill="rgb(243,110,44)"/><text x="8.2527%" y="543.50"></text></g><g><title>__rust_maybe_catch_panic (40 samples, 0.11%)</title><rect x="8.0027%" y="517" width="0.1124%" height="15" fill="rgb(222,74,54)"/><text x="8.2527%" y="527.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (40 samples, 0.11%)</title><rect x="8.0027%" y="501" width="0.1124%" height="15" fill="rgb(216,99,12)"/><text x="8.2527%" y="511.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (40 samples, 0.11%)</title><rect x="8.0027%" y="485" width="0.1124%" height="15" fill="rgb(226,22,26)"/><text x="8.2527%" y="495.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (40 samples, 0.11%)</title><rect x="8.0027%" y="469" width="0.1124%" height="15" fill="rgb(217,163,10)"/><text x="8.2527%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.0027%" y="453" width="0.1124%" height="15" fill="rgb(213,25,53)"/><text x="8.2527%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.0027%" y="437" width="0.1124%" height="15" fill="rgb(252,105,26)"/><text x="8.2527%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.0027%" y="421" width="0.1124%" height="15" fill="rgb(220,39,43)"/><text x="8.2527%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.0027%" y="405" width="0.1124%" height="15" fill="rgb(229,68,48)"/><text x="8.2527%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.0027%" y="389" width="0.1124%" height="15" fill="rgb(252,8,32)"/><text x="8.2527%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.0027%" y="373" width="0.1124%" height="15" fill="rgb(223,20,43)"/><text x="8.2527%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.0027%" y="357" width="0.1124%" height="15" fill="rgb(229,81,49)"/><text x="8.2527%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.0027%" y="341" width="0.1124%" height="15" fill="rgb(236,28,36)"/><text x="8.2527%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.0027%" y="325" width="0.1124%" height="15" fill="rgb(249,185,26)"/><text x="8.2527%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.0027%" y="309" width="0.1124%" height="15" fill="rgb(249,174,33)"/><text x="8.2527%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (40 samples, 0.11%)</title><rect x="8.1825%" y="773" width="0.1124%" height="15" fill="rgb(233,201,37)"/><text x="8.4325%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (40 samples, 0.11%)</title><rect x="8.1825%" y="757" width="0.1124%" height="15" fill="rgb(221,78,26)"/><text x="8.4325%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (40 samples, 0.11%)</title><rect x="8.1825%" y="741" width="0.1124%" height="15" fill="rgb(250,127,30)"/><text x="8.4325%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (40 samples, 0.11%)</title><rect x="8.1825%" y="725" width="0.1124%" height="15" fill="rgb(230,49,44)"/><text x="8.4325%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (40 samples, 0.11%)</title><rect x="8.1825%" y="709" width="0.1124%" height="15" fill="rgb(229,67,23)"/><text x="8.4325%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (40 samples, 0.11%)</title><rect x="8.1825%" y="693" width="0.1124%" height="15" fill="rgb(249,83,47)"/><text x="8.4325%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (36 samples, 0.10%)</title><rect x="8.2949%" y="325" width="0.1012%" height="15" fill="rgb(215,43,3)"/><text x="8.5449%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (36 samples, 0.10%)</title><rect x="8.2949%" y="309" width="0.1012%" height="15" fill="rgb(238,154,13)"/><text x="8.5449%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (36 samples, 0.10%)</title><rect x="8.2949%" y="293" width="0.1012%" height="15" fill="rgb(219,56,2)"/><text x="8.5449%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (972 samples, 2.73%)</title><rect x="5.7660%" y="789" width="2.7313%" height="15" fill="rgb(233,0,4)"/><text x="6.0160%" y="799.50">al..</text></g><g><title>core::ptr::real_drop_in_place::h065749e7cfc69f30 (72 samples, 0.20%)</title><rect x="8.2949%" y="773" width="0.2023%" height="15" fill="rgb(235,30,7)"/><text x="8.5449%" y="783.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (72 samples, 0.20%)</title><rect x="8.2949%" y="757" width="0.2023%" height="15" fill="rgb(250,79,13)"/><text x="8.5449%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (72 samples, 0.20%)</title><rect x="8.2949%" y="741" width="0.2023%" height="15" fill="rgb(211,146,34)"/><text x="8.5449%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (72 samples, 0.20%)</title><rect x="8.2949%" y="725" width="0.2023%" height="15" fill="rgb(228,22,38)"/><text x="8.5449%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (72 samples, 0.20%)</title><rect x="8.2949%" y="709" width="0.2023%" height="15" fill="rgb(235,168,5)"/><text x="8.5449%" y="719.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (72 samples, 0.20%)</title><rect x="8.2949%" y="693" width="0.2023%" height="15" fill="rgb(221,155,16)"/><text x="8.5449%" y="703.50"></text></g><g><title>__rg_dealloc (72 samples, 0.20%)</title><rect x="8.2949%" y="677" width="0.2023%" height="15" fill="rgb(215,215,53)"/><text x="8.5449%" y="687.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (72 samples, 0.20%)</title><rect x="8.2949%" y="661" width="0.2023%" height="15" fill="rgb(223,4,10)"/><text x="8.5449%" y="671.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (72 samples, 0.20%)</title><rect x="8.2949%" y="645" width="0.2023%" height="15" fill="rgb(234,103,6)"/><text x="8.5449%" y="655.50"></text></g><g><title>Unknown (72 samples, 0.20%)</title><rect x="8.2949%" y="629" width="0.2023%" height="15" fill="rgb(227,97,0)"/><text x="8.5449%" y="639.50"></text></g><g><title>_start (72 samples, 0.20%)</title><rect x="8.2949%" y="613" width="0.2023%" height="15" fill="rgb(234,150,53)"/><text x="8.5449%" y="623.50"></text></g><g><title>__libc_start_main (72 samples, 0.20%)</title><rect x="8.2949%" y="597" width="0.2023%" height="15" fill="rgb(228,201,54)"/><text x="8.5449%" y="607.50"></text></g><g><title>main (72 samples, 0.20%)</title><rect x="8.2949%" y="581" width="0.2023%" height="15" fill="rgb(222,22,37)"/><text x="8.5449%" y="591.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (72 samples, 0.20%)</title><rect x="8.2949%" y="565" width="0.2023%" height="15" fill="rgb(237,53,32)"/><text x="8.5449%" y="575.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (72 samples, 0.20%)</title><rect x="8.2949%" y="549" width="0.2023%" height="15" fill="rgb(233,25,53)"/><text x="8.5449%" y="559.50"></text></g><g><title>__rust_maybe_catch_panic (72 samples, 0.20%)</title><rect x="8.2949%" y="533" width="0.2023%" height="15" fill="rgb(210,40,34)"/><text x="8.5449%" y="543.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (72 samples, 0.20%)</title><rect x="8.2949%" y="517" width="0.2023%" height="15" fill="rgb(241,220,44)"/><text x="8.5449%" y="527.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (72 samples, 0.20%)</title><rect x="8.2949%" y="501" width="0.2023%" height="15" fill="rgb(235,28,35)"/><text x="8.5449%" y="511.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (72 samples, 0.20%)</title><rect x="8.2949%" y="485" width="0.2023%" height="15" fill="rgb(210,56,17)"/><text x="8.5449%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="8.2949%" y="469" width="0.2023%" height="15" fill="rgb(224,130,29)"/><text x="8.5449%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="8.2949%" y="453" width="0.2023%" height="15" fill="rgb(235,212,8)"/><text x="8.5449%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="8.2949%" y="437" width="0.2023%" height="15" fill="rgb(223,33,50)"/><text x="8.5449%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="8.2949%" y="421" width="0.2023%" height="15" fill="rgb(219,149,13)"/><text x="8.5449%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="8.2949%" y="405" width="0.2023%" height="15" fill="rgb(250,156,29)"/><text x="8.5449%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="8.2949%" y="389" width="0.2023%" height="15" fill="rgb(216,193,19)"/><text x="8.5449%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="8.2949%" y="373" width="0.2023%" height="15" fill="rgb(216,135,14)"/><text x="8.5449%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="8.2949%" y="357" width="0.2023%" height="15" fill="rgb(241,47,5)"/><text x="8.5449%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="8.2949%" y="341" width="0.2023%" height="15" fill="rgb(233,42,35)"/><text x="8.5449%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (36 samples, 0.10%)</title><rect x="8.3961%" y="325" width="0.1012%" height="15" fill="rgb(231,13,6)"/><text x="8.6461%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (36 samples, 0.10%)</title><rect x="8.3961%" y="309" width="0.1012%" height="15" fill="rgb(207,181,40)"/><text x="8.6461%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (36 samples, 0.10%)</title><rect x="8.3961%" y="293" width="0.1012%" height="15" fill="rgb(254,173,49)"/><text x="8.6461%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h5b5906b74b21a74e (40 samples, 0.11%)</title><rect x="8.6096%" y="693" width="0.1124%" height="15" fill="rgb(221,1,38)"/><text x="8.8596%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ha0cdcc702f5dc9c1 (40 samples, 0.11%)</title><rect x="8.6096%" y="677" width="0.1124%" height="15" fill="rgb(206,124,46)"/><text x="8.8596%" y="687.50"></text></g><g><title>core::ptr::real_drop_in_place::h1cf8390ffe354c7f (40 samples, 0.11%)</title><rect x="8.6096%" y="661" width="0.1124%" height="15" fill="rgb(249,21,11)"/><text x="8.8596%" y="671.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop::he6982a417c2b7a08 (40 samples, 0.11%)</title><rect x="8.6096%" y="645" width="0.1124%" height="15" fill="rgb(222,201,40)"/><text x="8.8596%" y="655.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (40 samples, 0.11%)</title><rect x="8.6096%" y="629" width="0.1124%" height="15" fill="rgb(235,61,29)"/><text x="8.8596%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (40 samples, 0.11%)</title><rect x="8.6096%" y="613" width="0.1124%" height="15" fill="rgb(219,207,3)"/><text x="8.8596%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (40 samples, 0.11%)</title><rect x="8.6096%" y="597" width="0.1124%" height="15" fill="rgb(222,56,46)"/><text x="8.8596%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (40 samples, 0.11%)</title><rect x="8.6096%" y="581" width="0.1124%" height="15" fill="rgb(239,76,54)"/><text x="8.8596%" y="591.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (40 samples, 0.11%)</title><rect x="8.6096%" y="565" width="0.1124%" height="15" fill="rgb(231,124,27)"/><text x="8.8596%" y="575.50"></text></g><g><title>__rg_dealloc (40 samples, 0.11%)</title><rect x="8.6096%" y="549" width="0.1124%" height="15" fill="rgb(249,195,6)"/><text x="8.8596%" y="559.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (40 samples, 0.11%)</title><rect x="8.6096%" y="533" width="0.1124%" height="15" fill="rgb(237,174,47)"/><text x="8.8596%" y="543.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (40 samples, 0.11%)</title><rect x="8.6096%" y="517" width="0.1124%" height="15" fill="rgb(206,201,31)"/><text x="8.8596%" y="527.50"></text></g><g><title>Unknown (40 samples, 0.11%)</title><rect x="8.6096%" y="501" width="0.1124%" height="15" fill="rgb(231,57,52)"/><text x="8.8596%" y="511.50"></text></g><g><title>_start (40 samples, 0.11%)</title><rect x="8.6096%" y="485" width="0.1124%" height="15" fill="rgb(248,177,22)"/><text x="8.8596%" y="495.50"></text></g><g><title>__libc_start_main (40 samples, 0.11%)</title><rect x="8.6096%" y="469" width="0.1124%" height="15" fill="rgb(215,211,37)"/><text x="8.8596%" y="479.50"></text></g><g><title>main (40 samples, 0.11%)</title><rect x="8.6096%" y="453" width="0.1124%" height="15" fill="rgb(241,128,51)"/><text x="8.8596%" y="463.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (40 samples, 0.11%)</title><rect x="8.6096%" y="437" width="0.1124%" height="15" fill="rgb(227,165,31)"/><text x="8.8596%" y="447.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (40 samples, 0.11%)</title><rect x="8.6096%" y="421" width="0.1124%" height="15" fill="rgb(228,167,24)"/><text x="8.8596%" y="431.50"></text></g><g><title>__rust_maybe_catch_panic (40 samples, 0.11%)</title><rect x="8.6096%" y="405" width="0.1124%" height="15" fill="rgb(228,143,12)"/><text x="8.8596%" y="415.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (40 samples, 0.11%)</title><rect x="8.6096%" y="389" width="0.1124%" height="15" fill="rgb(249,149,8)"/><text x="8.8596%" y="399.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (40 samples, 0.11%)</title><rect x="8.6096%" y="373" width="0.1124%" height="15" fill="rgb(243,35,44)"/><text x="8.8596%" y="383.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (40 samples, 0.11%)</title><rect x="8.6096%" y="357" width="0.1124%" height="15" fill="rgb(246,89,9)"/><text x="8.8596%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.6096%" y="341" width="0.1124%" height="15" fill="rgb(233,213,13)"/><text x="8.8596%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.6096%" y="325" width="0.1124%" height="15" fill="rgb(233,141,41)"/><text x="8.8596%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.6096%" y="309" width="0.1124%" height="15" fill="rgb(239,167,4)"/><text x="8.8596%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.6096%" y="293" width="0.1124%" height="15" fill="rgb(209,217,16)"/><text x="8.8596%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.6096%" y="277" width="0.1124%" height="15" fill="rgb(219,88,35)"/><text x="8.8596%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.6096%" y="261" width="0.1124%" height="15" fill="rgb(220,193,23)"/><text x="8.8596%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.6096%" y="245" width="0.1124%" height="15" fill="rgb(230,90,52)"/><text x="8.8596%" y="255.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.6096%" y="229" width="0.1124%" height="15" fill="rgb(252,106,19)"/><text x="8.8596%" y="239.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="8.6096%" y="213" width="0.1124%" height="15" fill="rgb(206,74,20)"/><text x="8.8596%" y="223.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="8.6209%" y="197" width="0.1012%" height="15" fill="rgb(230,138,44)"/><text x="8.8709%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (68 samples, 0.19%)</title><rect x="8.6096%" y="789" width="0.1911%" height="15" fill="rgb(235,182,43)"/><text x="8.8596%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (68 samples, 0.19%)</title><rect x="8.6096%" y="773" width="0.1911%" height="15" fill="rgb(242,16,51)"/><text x="8.8596%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (68 samples, 0.19%)</title><rect x="8.6096%" y="757" width="0.1911%" height="15" fill="rgb(248,9,4)"/><text x="8.8596%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (68 samples, 0.19%)</title><rect x="8.6096%" y="741" width="0.1911%" height="15" fill="rgb(210,31,22)"/><text x="8.8596%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (68 samples, 0.19%)</title><rect x="8.6096%" y="725" width="0.1911%" height="15" fill="rgb(239,54,39)"/><text x="8.8596%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (68 samples, 0.19%)</title><rect x="8.6096%" y="709" width="0.1911%" height="15" fill="rgb(230,99,41)"/><text x="8.8596%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (64 samples, 0.18%)</title><rect x="8.8007%" y="309" width="0.1798%" height="15" fill="rgb(253,106,12)"/><text x="9.0507%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (64 samples, 0.18%)</title><rect x="8.8007%" y="293" width="0.1798%" height="15" fill="rgb(213,46,41)"/><text x="9.0507%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (64 samples, 0.18%)</title><rect x="8.8007%" y="277" width="0.1798%" height="15" fill="rgb(215,133,35)"/><text x="9.0507%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (64 samples, 0.18%)</title><rect x="8.8007%" y="261" width="0.1798%" height="15" fill="rgb(213,28,5)"/><text x="9.0507%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (64 samples, 0.18%)</title><rect x="8.8007%" y="245" width="0.1798%" height="15" fill="rgb(215,77,49)"/><text x="9.0507%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (64 samples, 0.18%)</title><rect x="8.8007%" y="229" width="0.1798%" height="15" fill="rgb(248,100,22)"/><text x="9.0507%" y="239.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (64 samples, 0.18%)</title><rect x="8.8007%" y="213" width="0.1798%" height="15" fill="rgb(208,67,9)"/><text x="9.0507%" y="223.50"></text></g><g><title>__rg_realloc (64 samples, 0.18%)</title><rect x="8.8007%" y="197" width="0.1798%" height="15" fill="rgb(219,133,21)"/><text x="9.0507%" y="207.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (64 samples, 0.18%)</title><rect x="8.8007%" y="181" width="0.1798%" height="15" fill="rgb(246,46,29)"/><text x="9.0507%" y="191.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (64 samples, 0.18%)</title><rect x="8.8007%" y="165" width="0.1798%" height="15" fill="rgb(246,185,52)"/><text x="9.0507%" y="175.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (64 samples, 0.18%)</title><rect x="8.8007%" y="149" width="0.1798%" height="15" fill="rgb(252,136,11)"/><text x="9.0507%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (68 samples, 0.19%)</title><rect x="8.8007%" y="357" width="0.1911%" height="15" fill="rgb(219,138,53)"/><text x="9.0507%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (68 samples, 0.19%)</title><rect x="8.8007%" y="341" width="0.1911%" height="15" fill="rgb(211,51,23)"/><text x="9.0507%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (68 samples, 0.19%)</title><rect x="8.8007%" y="325" width="0.1911%" height="15" fill="rgb(247,221,28)"/><text x="9.0507%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (64 samples, 0.18%)</title><rect x="8.9918%" y="309" width="0.1798%" height="15" fill="rgb(251,222,45)"/><text x="9.2418%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (64 samples, 0.18%)</title><rect x="8.9918%" y="293" width="0.1798%" height="15" fill="rgb(217,162,53)"/><text x="9.2418%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (64 samples, 0.18%)</title><rect x="8.9918%" y="277" width="0.1798%" height="15" fill="rgb(229,93,14)"/><text x="9.2418%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (64 samples, 0.18%)</title><rect x="8.9918%" y="261" width="0.1798%" height="15" fill="rgb(209,67,49)"/><text x="9.2418%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (64 samples, 0.18%)</title><rect x="8.9918%" y="245" width="0.1798%" height="15" fill="rgb(213,87,29)"/><text x="9.2418%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (64 samples, 0.18%)</title><rect x="8.9918%" y="229" width="0.1798%" height="15" fill="rgb(205,151,52)"/><text x="9.2418%" y="239.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (64 samples, 0.18%)</title><rect x="8.9918%" y="213" width="0.1798%" height="15" fill="rgb(253,215,39)"/><text x="9.2418%" y="223.50"></text></g><g><title>__rg_realloc (64 samples, 0.18%)</title><rect x="8.9918%" y="197" width="0.1798%" height="15" fill="rgb(221,220,41)"/><text x="9.2418%" y="207.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (64 samples, 0.18%)</title><rect x="8.9918%" y="181" width="0.1798%" height="15" fill="rgb(218,133,21)"/><text x="9.2418%" y="191.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (64 samples, 0.18%)</title><rect x="8.9918%" y="165" width="0.1798%" height="15" fill="rgb(221,193,43)"/><text x="9.2418%" y="175.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (64 samples, 0.18%)</title><rect x="8.9918%" y="149" width="0.1798%" height="15" fill="rgb(240,128,52)"/><text x="9.2418%" y="159.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (1,216 samples, 3.42%)</title><rect x="5.7660%" y="805" width="3.4169%" height="15" fill="rgb(253,114,12)"/><text x="6.0160%" y="815.50">all..</text></g><g><title>core::ptr::real_drop_in_place::h065749e7cfc69f30 (136 samples, 0.38%)</title><rect x="8.8007%" y="789" width="0.3822%" height="15" fill="rgb(215,223,47)"/><text x="9.0507%" y="799.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (136 samples, 0.38%)</title><rect x="8.8007%" y="773" width="0.3822%" height="15" fill="rgb(248,225,23)"/><text x="9.0507%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (136 samples, 0.38%)</title><rect x="8.8007%" y="757" width="0.3822%" height="15" fill="rgb(250,108,0)"/><text x="9.0507%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (136 samples, 0.38%)</title><rect x="8.8007%" y="741" width="0.3822%" height="15" fill="rgb(228,208,7)"/><text x="9.0507%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (136 samples, 0.38%)</title><rect x="8.8007%" y="725" width="0.3822%" height="15" fill="rgb(244,45,10)"/><text x="9.0507%" y="735.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (136 samples, 0.38%)</title><rect x="8.8007%" y="709" width="0.3822%" height="15" fill="rgb(207,125,25)"/><text x="9.0507%" y="719.50"></text></g><g><title>__rg_dealloc (136 samples, 0.38%)</title><rect x="8.8007%" y="693" width="0.3822%" height="15" fill="rgb(210,195,18)"/><text x="9.0507%" y="703.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (136 samples, 0.38%)</title><rect x="8.8007%" y="677" width="0.3822%" height="15" fill="rgb(249,80,12)"/><text x="9.0507%" y="687.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (136 samples, 0.38%)</title><rect x="8.8007%" y="661" width="0.3822%" height="15" fill="rgb(221,65,9)"/><text x="9.0507%" y="671.50"></text></g><g><title>Unknown (136 samples, 0.38%)</title><rect x="8.8007%" y="645" width="0.3822%" height="15" fill="rgb(235,49,36)"/><text x="9.0507%" y="655.50"></text></g><g><title>_start (136 samples, 0.38%)</title><rect x="8.8007%" y="629" width="0.3822%" height="15" fill="rgb(225,32,20)"/><text x="9.0507%" y="639.50"></text></g><g><title>__libc_start_main (136 samples, 0.38%)</title><rect x="8.8007%" y="613" width="0.3822%" height="15" fill="rgb(215,141,46)"/><text x="9.0507%" y="623.50"></text></g><g><title>main (136 samples, 0.38%)</title><rect x="8.8007%" y="597" width="0.3822%" height="15" fill="rgb(250,160,47)"/><text x="9.0507%" y="607.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (136 samples, 0.38%)</title><rect x="8.8007%" y="581" width="0.3822%" height="15" fill="rgb(216,222,40)"/><text x="9.0507%" y="591.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (136 samples, 0.38%)</title><rect x="8.8007%" y="565" width="0.3822%" height="15" fill="rgb(234,217,39)"/><text x="9.0507%" y="575.50"></text></g><g><title>__rust_maybe_catch_panic (136 samples, 0.38%)</title><rect x="8.8007%" y="549" width="0.3822%" height="15" fill="rgb(207,178,40)"/><text x="9.0507%" y="559.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (136 samples, 0.38%)</title><rect x="8.8007%" y="533" width="0.3822%" height="15" fill="rgb(221,136,13)"/><text x="9.0507%" y="543.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (136 samples, 0.38%)</title><rect x="8.8007%" y="517" width="0.3822%" height="15" fill="rgb(249,199,10)"/><text x="9.0507%" y="527.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (136 samples, 0.38%)</title><rect x="8.8007%" y="501" width="0.3822%" height="15" fill="rgb(249,222,13)"/><text x="9.0507%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (136 samples, 0.38%)</title><rect x="8.8007%" y="485" width="0.3822%" height="15" fill="rgb(244,185,38)"/><text x="9.0507%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (136 samples, 0.38%)</title><rect x="8.8007%" y="469" width="0.3822%" height="15" fill="rgb(236,202,9)"/><text x="9.0507%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (136 samples, 0.38%)</title><rect x="8.8007%" y="453" width="0.3822%" height="15" fill="rgb(250,229,37)"/><text x="9.0507%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (136 samples, 0.38%)</title><rect x="8.8007%" y="437" width="0.3822%" height="15" fill="rgb(206,174,23)"/><text x="9.0507%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (136 samples, 0.38%)</title><rect x="8.8007%" y="421" width="0.3822%" height="15" fill="rgb(211,33,43)"/><text x="9.0507%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (136 samples, 0.38%)</title><rect x="8.8007%" y="405" width="0.3822%" height="15" fill="rgb(245,58,50)"/><text x="9.0507%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (136 samples, 0.38%)</title><rect x="8.8007%" y="389" width="0.3822%" height="15" fill="rgb(244,68,36)"/><text x="9.0507%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (136 samples, 0.38%)</title><rect x="8.8007%" y="373" width="0.3822%" height="15" fill="rgb(232,229,15)"/><text x="9.0507%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (68 samples, 0.19%)</title><rect x="8.9918%" y="357" width="0.1911%" height="15" fill="rgb(254,30,23)"/><text x="9.2418%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (68 samples, 0.19%)</title><rect x="8.9918%" y="341" width="0.1911%" height="15" fill="rgb(235,160,14)"/><text x="9.2418%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (68 samples, 0.19%)</title><rect x="8.9918%" y="325" width="0.1911%" height="15" fill="rgb(212,155,44)"/><text x="9.2418%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (36 samples, 0.10%)</title><rect x="9.1829%" y="757" width="0.1012%" height="15" fill="rgb(226,2,50)"/><text x="9.4329%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (36 samples, 0.10%)</title><rect x="9.1829%" y="741" width="0.1012%" height="15" fill="rgb(234,177,6)"/><text x="9.4329%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (36 samples, 0.10%)</title><rect x="9.1829%" y="725" width="0.1012%" height="15" fill="rgb(217,24,9)"/><text x="9.4329%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (36 samples, 0.10%)</title><rect x="9.1829%" y="709" width="0.1012%" height="15" fill="rgb(220,13,46)"/><text x="9.4329%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (36 samples, 0.10%)</title><rect x="9.1829%" y="693" width="0.1012%" height="15" fill="rgb(239,221,27)"/><text x="9.4329%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (36 samples, 0.10%)</title><rect x="9.1829%" y="677" width="0.1012%" height="15" fill="rgb(222,198,25)"/><text x="9.4329%" y="687.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (36 samples, 0.10%)</title><rect x="9.1829%" y="661" width="0.1012%" height="15" fill="rgb(211,99,13)"/><text x="9.4329%" y="671.50"></text></g><g><title>__rg_realloc (36 samples, 0.10%)</title><rect x="9.1829%" y="645" width="0.1012%" height="15" fill="rgb(232,111,31)"/><text x="9.4329%" y="655.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (36 samples, 0.10%)</title><rect x="9.1829%" y="629" width="0.1012%" height="15" fill="rgb(245,82,37)"/><text x="9.4329%" y="639.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (36 samples, 0.10%)</title><rect x="9.1829%" y="613" width="0.1012%" height="15" fill="rgb(227,149,46)"/><text x="9.4329%" y="623.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (36 samples, 0.10%)</title><rect x="9.1829%" y="597" width="0.1012%" height="15" fill="rgb(218,36,50)"/><text x="9.4329%" y="607.50"></text></g><g><title>Unknown (36 samples, 0.10%)</title><rect x="9.1829%" y="581" width="0.1012%" height="15" fill="rgb(226,80,48)"/><text x="9.4329%" y="591.50"></text></g><g><title>_start (36 samples, 0.10%)</title><rect x="9.1829%" y="565" width="0.1012%" height="15" fill="rgb(238,224,15)"/><text x="9.4329%" y="575.50"></text></g><g><title>__libc_start_main (36 samples, 0.10%)</title><rect x="9.1829%" y="549" width="0.1012%" height="15" fill="rgb(241,136,10)"/><text x="9.4329%" y="559.50"></text></g><g><title>main (36 samples, 0.10%)</title><rect x="9.1829%" y="533" width="0.1012%" height="15" fill="rgb(208,32,45)"/><text x="9.4329%" y="543.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (36 samples, 0.10%)</title><rect x="9.1829%" y="517" width="0.1012%" height="15" fill="rgb(207,135,9)"/><text x="9.4329%" y="527.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (36 samples, 0.10%)</title><rect x="9.1829%" y="501" width="0.1012%" height="15" fill="rgb(206,86,44)"/><text x="9.4329%" y="511.50"></text></g><g><title>__rust_maybe_catch_panic (36 samples, 0.10%)</title><rect x="9.1829%" y="485" width="0.1012%" height="15" fill="rgb(245,177,15)"/><text x="9.4329%" y="495.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (36 samples, 0.10%)</title><rect x="9.1829%" y="469" width="0.1012%" height="15" fill="rgb(206,64,50)"/><text x="9.4329%" y="479.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (36 samples, 0.10%)</title><rect x="9.1829%" y="453" width="0.1012%" height="15" fill="rgb(234,36,40)"/><text x="9.4329%" y="463.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (36 samples, 0.10%)</title><rect x="9.1829%" y="437" width="0.1012%" height="15" fill="rgb(213,64,8)"/><text x="9.4329%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.1829%" y="421" width="0.1012%" height="15" fill="rgb(210,75,36)"/><text x="9.4329%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.1829%" y="405" width="0.1012%" height="15" fill="rgb(229,88,21)"/><text x="9.4329%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.1829%" y="389" width="0.1012%" height="15" fill="rgb(252,204,47)"/><text x="9.4329%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.1829%" y="373" width="0.1012%" height="15" fill="rgb(208,77,27)"/><text x="9.4329%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.1829%" y="357" width="0.1012%" height="15" fill="rgb(221,76,26)"/><text x="9.4329%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.1829%" y="341" width="0.1012%" height="15" fill="rgb(225,139,18)"/><text x="9.4329%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.1829%" y="325" width="0.1012%" height="15" fill="rgb(230,137,11)"/><text x="9.4329%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.1829%" y="309" width="0.1012%" height="15" fill="rgb(212,28,1)"/><text x="9.4329%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (36 samples, 0.10%)</title><rect x="9.1829%" y="293" width="0.1012%" height="15" fill="rgb(248,164,17)"/><text x="9.4329%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (36 samples, 0.10%)</title><rect x="9.1829%" y="277" width="0.1012%" height="15" fill="rgb(222,171,42)"/><text x="9.4329%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (36 samples, 0.10%)</title><rect x="9.1829%" y="261" width="0.1012%" height="15" fill="rgb(243,84,45)"/><text x="9.4329%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (36 samples, 0.10%)</title><rect x="9.1829%" y="805" width="0.1012%" height="15" fill="rgb(252,49,23)"/><text x="9.4329%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (36 samples, 0.10%)</title><rect x="9.1829%" y="789" width="0.1012%" height="15" fill="rgb(215,19,7)"/><text x="9.4329%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (36 samples, 0.10%)</title><rect x="9.1829%" y="773" width="0.1012%" height="15" fill="rgb(238,81,41)"/><text x="9.4329%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (36 samples, 0.10%)</title><rect x="9.2840%" y="757" width="0.1012%" height="15" fill="rgb(210,199,37)"/><text x="9.5340%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (36 samples, 0.10%)</title><rect x="9.2840%" y="741" width="0.1012%" height="15" fill="rgb(244,192,49)"/><text x="9.5340%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (36 samples, 0.10%)</title><rect x="9.2840%" y="725" width="0.1012%" height="15" fill="rgb(226,211,11)"/><text x="9.5340%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (36 samples, 0.10%)</title><rect x="9.2840%" y="709" width="0.1012%" height="15" fill="rgb(236,162,54)"/><text x="9.5340%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (36 samples, 0.10%)</title><rect x="9.2840%" y="693" width="0.1012%" height="15" fill="rgb(220,229,9)"/><text x="9.5340%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (36 samples, 0.10%)</title><rect x="9.2840%" y="677" width="0.1012%" height="15" fill="rgb(250,87,22)"/><text x="9.5340%" y="687.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (36 samples, 0.10%)</title><rect x="9.2840%" y="661" width="0.1012%" height="15" fill="rgb(239,43,17)"/><text x="9.5340%" y="671.50"></text></g><g><title>__rg_realloc (36 samples, 0.10%)</title><rect x="9.2840%" y="645" width="0.1012%" height="15" fill="rgb(231,177,25)"/><text x="9.5340%" y="655.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (36 samples, 0.10%)</title><rect x="9.2840%" y="629" width="0.1012%" height="15" fill="rgb(219,179,1)"/><text x="9.5340%" y="639.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (36 samples, 0.10%)</title><rect x="9.2840%" y="613" width="0.1012%" height="15" fill="rgb(238,219,53)"/><text x="9.5340%" y="623.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (36 samples, 0.10%)</title><rect x="9.2840%" y="597" width="0.1012%" height="15" fill="rgb(232,167,36)"/><text x="9.5340%" y="607.50"></text></g><g><title>Unknown (36 samples, 0.10%)</title><rect x="9.2840%" y="581" width="0.1012%" height="15" fill="rgb(244,19,51)"/><text x="9.5340%" y="591.50"></text></g><g><title>_start (36 samples, 0.10%)</title><rect x="9.2840%" y="565" width="0.1012%" height="15" fill="rgb(224,6,22)"/><text x="9.5340%" y="575.50"></text></g><g><title>__libc_start_main (36 samples, 0.10%)</title><rect x="9.2840%" y="549" width="0.1012%" height="15" fill="rgb(224,145,5)"/><text x="9.5340%" y="559.50"></text></g><g><title>main (36 samples, 0.10%)</title><rect x="9.2840%" y="533" width="0.1012%" height="15" fill="rgb(234,130,49)"/><text x="9.5340%" y="543.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (36 samples, 0.10%)</title><rect x="9.2840%" y="517" width="0.1012%" height="15" fill="rgb(254,6,2)"/><text x="9.5340%" y="527.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (36 samples, 0.10%)</title><rect x="9.2840%" y="501" width="0.1012%" height="15" fill="rgb(208,96,46)"/><text x="9.5340%" y="511.50"></text></g><g><title>__rust_maybe_catch_panic (36 samples, 0.10%)</title><rect x="9.2840%" y="485" width="0.1012%" height="15" fill="rgb(239,3,39)"/><text x="9.5340%" y="495.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (36 samples, 0.10%)</title><rect x="9.2840%" y="469" width="0.1012%" height="15" fill="rgb(233,210,1)"/><text x="9.5340%" y="479.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (36 samples, 0.10%)</title><rect x="9.2840%" y="453" width="0.1012%" height="15" fill="rgb(244,137,37)"/><text x="9.5340%" y="463.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (36 samples, 0.10%)</title><rect x="9.2840%" y="437" width="0.1012%" height="15" fill="rgb(240,136,2)"/><text x="9.5340%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.2840%" y="421" width="0.1012%" height="15" fill="rgb(239,18,37)"/><text x="9.5340%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.2840%" y="405" width="0.1012%" height="15" fill="rgb(218,185,22)"/><text x="9.5340%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.2840%" y="389" width="0.1012%" height="15" fill="rgb(225,218,4)"/><text x="9.5340%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.2840%" y="373" width="0.1012%" height="15" fill="rgb(230,182,32)"/><text x="9.5340%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.2840%" y="357" width="0.1012%" height="15" fill="rgb(242,56,43)"/><text x="9.5340%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.2840%" y="341" width="0.1012%" height="15" fill="rgb(233,99,24)"/><text x="9.5340%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.2840%" y="325" width="0.1012%" height="15" fill="rgb(234,209,42)"/><text x="9.5340%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.2840%" y="309" width="0.1012%" height="15" fill="rgb(227,7,12)"/><text x="9.5340%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (36 samples, 0.10%)</title><rect x="9.2840%" y="293" width="0.1012%" height="15" fill="rgb(245,203,43)"/><text x="9.5340%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (36 samples, 0.10%)</title><rect x="9.2840%" y="277" width="0.1012%" height="15" fill="rgb(238,205,33)"/><text x="9.5340%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (36 samples, 0.10%)</title><rect x="9.2840%" y="261" width="0.1012%" height="15" fill="rgb(231,56,7)"/><text x="9.5340%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (36 samples, 0.10%)</title><rect x="9.2840%" y="805" width="0.1012%" height="15" fill="rgb(244,186,29)"/><text x="9.5340%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (36 samples, 0.10%)</title><rect x="9.2840%" y="789" width="0.1012%" height="15" fill="rgb(234,111,31)"/><text x="9.5340%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (36 samples, 0.10%)</title><rect x="9.2840%" y="773" width="0.1012%" height="15" fill="rgb(241,149,10)"/><text x="9.5340%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h5b5906b74b21a74e (44 samples, 0.12%)</title><rect x="9.3852%" y="709" width="0.1236%" height="15" fill="rgb(249,206,44)"/><text x="9.6352%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ha0cdcc702f5dc9c1 (44 samples, 0.12%)</title><rect x="9.3852%" y="693" width="0.1236%" height="15" fill="rgb(251,153,30)"/><text x="9.6352%" y="703.50"></text></g><g><title>core::ptr::real_drop_in_place::h1cf8390ffe354c7f (44 samples, 0.12%)</title><rect x="9.3852%" y="677" width="0.1236%" height="15" fill="rgb(239,152,38)"/><text x="9.6352%" y="687.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop::he6982a417c2b7a08 (44 samples, 0.12%)</title><rect x="9.3852%" y="661" width="0.1236%" height="15" fill="rgb(249,139,47)"/><text x="9.6352%" y="671.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (44 samples, 0.12%)</title><rect x="9.3852%" y="645" width="0.1236%" height="15" fill="rgb(244,64,35)"/><text x="9.6352%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (44 samples, 0.12%)</title><rect x="9.3852%" y="629" width="0.1236%" height="15" fill="rgb(216,46,15)"/><text x="9.6352%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (44 samples, 0.12%)</title><rect x="9.3852%" y="613" width="0.1236%" height="15" fill="rgb(250,74,19)"/><text x="9.6352%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (44 samples, 0.12%)</title><rect x="9.3852%" y="597" width="0.1236%" height="15" fill="rgb(249,42,33)"/><text x="9.6352%" y="607.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (44 samples, 0.12%)</title><rect x="9.3852%" y="581" width="0.1236%" height="15" fill="rgb(242,149,17)"/><text x="9.6352%" y="591.50"></text></g><g><title>__rg_dealloc (44 samples, 0.12%)</title><rect x="9.3852%" y="565" width="0.1236%" height="15" fill="rgb(244,29,21)"/><text x="9.6352%" y="575.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (44 samples, 0.12%)</title><rect x="9.3852%" y="549" width="0.1236%" height="15" fill="rgb(220,130,37)"/><text x="9.6352%" y="559.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (44 samples, 0.12%)</title><rect x="9.3852%" y="533" width="0.1236%" height="15" fill="rgb(211,67,2)"/><text x="9.6352%" y="543.50"></text></g><g><title>Unknown (44 samples, 0.12%)</title><rect x="9.3852%" y="517" width="0.1236%" height="15" fill="rgb(235,68,52)"/><text x="9.6352%" y="527.50"></text></g><g><title>_start (44 samples, 0.12%)</title><rect x="9.3852%" y="501" width="0.1236%" height="15" fill="rgb(246,142,3)"/><text x="9.6352%" y="511.50"></text></g><g><title>__libc_start_main (44 samples, 0.12%)</title><rect x="9.3852%" y="485" width="0.1236%" height="15" fill="rgb(241,25,7)"/><text x="9.6352%" y="495.50"></text></g><g><title>main (44 samples, 0.12%)</title><rect x="9.3852%" y="469" width="0.1236%" height="15" fill="rgb(242,119,39)"/><text x="9.6352%" y="479.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (44 samples, 0.12%)</title><rect x="9.3852%" y="453" width="0.1236%" height="15" fill="rgb(241,98,45)"/><text x="9.6352%" y="463.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (44 samples, 0.12%)</title><rect x="9.3852%" y="437" width="0.1236%" height="15" fill="rgb(254,28,30)"/><text x="9.6352%" y="447.50"></text></g><g><title>__rust_maybe_catch_panic (44 samples, 0.12%)</title><rect x="9.3852%" y="421" width="0.1236%" height="15" fill="rgb(241,142,54)"/><text x="9.6352%" y="431.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (44 samples, 0.12%)</title><rect x="9.3852%" y="405" width="0.1236%" height="15" fill="rgb(222,85,15)"/><text x="9.6352%" y="415.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (44 samples, 0.12%)</title><rect x="9.3852%" y="389" width="0.1236%" height="15" fill="rgb(210,85,47)"/><text x="9.6352%" y="399.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (44 samples, 0.12%)</title><rect x="9.3852%" y="373" width="0.1236%" height="15" fill="rgb(224,206,25)"/><text x="9.6352%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="9.3852%" y="357" width="0.1236%" height="15" fill="rgb(243,201,19)"/><text x="9.6352%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="9.3852%" y="341" width="0.1236%" height="15" fill="rgb(236,59,4)"/><text x="9.6352%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="9.3852%" y="325" width="0.1236%" height="15" fill="rgb(254,179,45)"/><text x="9.6352%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="9.3852%" y="309" width="0.1236%" height="15" fill="rgb(226,14,10)"/><text x="9.6352%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="9.3852%" y="293" width="0.1236%" height="15" fill="rgb(244,27,41)"/><text x="9.6352%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="9.3852%" y="277" width="0.1236%" height="15" fill="rgb(235,35,32)"/><text x="9.6352%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="9.3852%" y="261" width="0.1236%" height="15" fill="rgb(218,68,31)"/><text x="9.6352%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="9.3852%" y="245" width="0.1236%" height="15" fill="rgb(207,120,37)"/><text x="9.6352%" y="255.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="9.3964%" y="229" width="0.1124%" height="15" fill="rgb(227,98,0)"/><text x="9.6464%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (36 samples, 0.10%)</title><rect x="9.4077%" y="213" width="0.1012%" height="15" fill="rgb(207,7,3)"/><text x="9.6577%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (36 samples, 0.10%)</title><rect x="9.4077%" y="197" width="0.1012%" height="15" fill="rgb(206,98,19)"/><text x="9.6577%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (36 samples, 0.10%)</title><rect x="9.4077%" y="181" width="0.1012%" height="15" fill="rgb(217,5,26)"/><text x="9.6577%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (36 samples, 0.10%)</title><rect x="9.4077%" y="165" width="0.1012%" height="15" fill="rgb(235,190,38)"/><text x="9.6577%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (36 samples, 0.10%)</title><rect x="9.4077%" y="149" width="0.1012%" height="15" fill="rgb(247,86,24)"/><text x="9.6577%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (36 samples, 0.10%)</title><rect x="9.4077%" y="133" width="0.1012%" height="15" fill="rgb(205,101,16)"/><text x="9.6577%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (36 samples, 0.10%)</title><rect x="9.4077%" y="117" width="0.1012%" height="15" fill="rgb(246,168,33)"/><text x="9.6577%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc::h6cffe83be2bbe610 (36 samples, 0.10%)</title><rect x="9.4077%" y="101" width="0.1012%" height="15" fill="rgb(231,114,1)"/><text x="9.6577%" y="111.50"></text></g><g><title>alloc::alloc::alloc::hb992b77ffe933998 (36 samples, 0.10%)</title><rect x="9.4077%" y="85" width="0.1012%" height="15" fill="rgb(207,184,53)"/><text x="9.6577%" y="95.50"></text></g><g><title>__rg_alloc (36 samples, 0.10%)</title><rect x="9.4077%" y="69" width="0.1012%" height="15" fill="rgb(224,95,51)"/><text x="9.6577%" y="79.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (36 samples, 0.10%)</title><rect x="9.4077%" y="53" width="0.1012%" height="15" fill="rgb(212,188,45)"/><text x="9.6577%" y="63.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (36 samples, 0.10%)</title><rect x="9.4077%" y="37" width="0.1012%" height="15" fill="rgb(223,154,38)"/><text x="9.6577%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (92 samples, 0.26%)</title><rect x="9.3852%" y="805" width="0.2585%" height="15" fill="rgb(251,22,52)"/><text x="9.6352%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (92 samples, 0.26%)</title><rect x="9.3852%" y="789" width="0.2585%" height="15" fill="rgb(229,209,22)"/><text x="9.6352%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (92 samples, 0.26%)</title><rect x="9.3852%" y="773" width="0.2585%" height="15" fill="rgb(234,138,34)"/><text x="9.6352%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (92 samples, 0.26%)</title><rect x="9.3852%" y="757" width="0.2585%" height="15" fill="rgb(212,95,11)"/><text x="9.6352%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (92 samples, 0.26%)</title><rect x="9.3852%" y="741" width="0.2585%" height="15" fill="rgb(240,179,47)"/><text x="9.6352%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (92 samples, 0.26%)</title><rect x="9.3852%" y="725" width="0.2585%" height="15" fill="rgb(240,163,11)"/><text x="9.6352%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::h3dc055e1da02411d (48 samples, 0.13%)</title><rect x="9.5088%" y="709" width="0.1349%" height="15" fill="rgb(236,37,12)"/><text x="9.7588%" y="719.50"></text></g><g><title>core::ptr::real_drop_in_place::h1cf8390ffe354c7f (48 samples, 0.13%)</title><rect x="9.5088%" y="693" width="0.1349%" height="15" fill="rgb(232,164,16)"/><text x="9.7588%" y="703.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop::he6982a417c2b7a08 (48 samples, 0.13%)</title><rect x="9.5088%" y="677" width="0.1349%" height="15" fill="rgb(244,205,15)"/><text x="9.7588%" y="687.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (48 samples, 0.13%)</title><rect x="9.5088%" y="661" width="0.1349%" height="15" fill="rgb(223,117,47)"/><text x="9.7588%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (48 samples, 0.13%)</title><rect x="9.5088%" y="645" width="0.1349%" height="15" fill="rgb(244,107,35)"/><text x="9.7588%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (48 samples, 0.13%)</title><rect x="9.5088%" y="629" width="0.1349%" height="15" fill="rgb(205,140,8)"/><text x="9.7588%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (48 samples, 0.13%)</title><rect x="9.5088%" y="613" width="0.1349%" height="15" fill="rgb(228,84,46)"/><text x="9.7588%" y="623.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (48 samples, 0.13%)</title><rect x="9.5088%" y="597" width="0.1349%" height="15" fill="rgb(254,188,9)"/><text x="9.7588%" y="607.50"></text></g><g><title>__rg_dealloc (48 samples, 0.13%)</title><rect x="9.5088%" y="581" width="0.1349%" height="15" fill="rgb(206,112,54)"/><text x="9.7588%" y="591.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (48 samples, 0.13%)</title><rect x="9.5088%" y="565" width="0.1349%" height="15" fill="rgb(216,84,49)"/><text x="9.7588%" y="575.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (48 samples, 0.13%)</title><rect x="9.5088%" y="549" width="0.1349%" height="15" fill="rgb(214,194,35)"/><text x="9.7588%" y="559.50"></text></g><g><title>Unknown (48 samples, 0.13%)</title><rect x="9.5088%" y="533" width="0.1349%" height="15" fill="rgb(249,28,3)"/><text x="9.7588%" y="543.50"></text></g><g><title>_start (48 samples, 0.13%)</title><rect x="9.5088%" y="517" width="0.1349%" height="15" fill="rgb(222,56,52)"/><text x="9.7588%" y="527.50"></text></g><g><title>__libc_start_main (48 samples, 0.13%)</title><rect x="9.5088%" y="501" width="0.1349%" height="15" fill="rgb(245,217,50)"/><text x="9.7588%" y="511.50"></text></g><g><title>main (48 samples, 0.13%)</title><rect x="9.5088%" y="485" width="0.1349%" height="15" fill="rgb(213,201,24)"/><text x="9.7588%" y="495.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (48 samples, 0.13%)</title><rect x="9.5088%" y="469" width="0.1349%" height="15" fill="rgb(248,116,28)"/><text x="9.7588%" y="479.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (48 samples, 0.13%)</title><rect x="9.5088%" y="453" width="0.1349%" height="15" fill="rgb(219,72,43)"/><text x="9.7588%" y="463.50"></text></g><g><title>__rust_maybe_catch_panic (48 samples, 0.13%)</title><rect x="9.5088%" y="437" width="0.1349%" height="15" fill="rgb(209,138,14)"/><text x="9.7588%" y="447.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (48 samples, 0.13%)</title><rect x="9.5088%" y="421" width="0.1349%" height="15" fill="rgb(222,18,33)"/><text x="9.7588%" y="431.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (48 samples, 0.13%)</title><rect x="9.5088%" y="405" width="0.1349%" height="15" fill="rgb(213,199,7)"/><text x="9.7588%" y="415.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (48 samples, 0.13%)</title><rect x="9.5088%" y="389" width="0.1349%" height="15" fill="rgb(250,110,10)"/><text x="9.7588%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="9.5088%" y="373" width="0.1349%" height="15" fill="rgb(248,123,6)"/><text x="9.7588%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="9.5088%" y="357" width="0.1349%" height="15" fill="rgb(206,91,31)"/><text x="9.7588%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="9.5088%" y="341" width="0.1349%" height="15" fill="rgb(211,154,13)"/><text x="9.7588%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="9.5088%" y="325" width="0.1349%" height="15" fill="rgb(225,148,7)"/><text x="9.7588%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="9.5088%" y="309" width="0.1349%" height="15" fill="rgb(220,160,43)"/><text x="9.7588%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="9.5088%" y="293" width="0.1349%" height="15" fill="rgb(213,52,39)"/><text x="9.7588%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="9.5088%" y="277" width="0.1349%" height="15" fill="rgb(243,137,7)"/><text x="9.7588%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="9.5088%" y="261" width="0.1349%" height="15" fill="rgb(230,79,13)"/><text x="9.7588%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="9.5088%" y="245" width="0.1349%" height="15" fill="rgb(247,105,23)"/><text x="9.7588%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (44 samples, 0.12%)</title><rect x="9.5201%" y="229" width="0.1236%" height="15" fill="rgb(223,179,41)"/><text x="9.7701%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (44 samples, 0.12%)</title><rect x="9.5201%" y="213" width="0.1236%" height="15" fill="rgb(218,9,34)"/><text x="9.7701%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (44 samples, 0.12%)</title><rect x="9.5201%" y="197" width="0.1236%" height="15" fill="rgb(222,106,8)"/><text x="9.7701%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (44 samples, 0.12%)</title><rect x="9.5201%" y="181" width="0.1236%" height="15" fill="rgb(211,220,0)"/><text x="9.7701%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (44 samples, 0.12%)</title><rect x="9.5201%" y="165" width="0.1236%" height="15" fill="rgb(229,52,16)"/><text x="9.7701%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (44 samples, 0.12%)</title><rect x="9.5201%" y="149" width="0.1236%" height="15" fill="rgb(212,155,18)"/><text x="9.7701%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (44 samples, 0.12%)</title><rect x="9.5201%" y="133" width="0.1236%" height="15" fill="rgb(242,21,14)"/><text x="9.7701%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc::h6cffe83be2bbe610 (44 samples, 0.12%)</title><rect x="9.5201%" y="117" width="0.1236%" height="15" fill="rgb(222,19,48)"/><text x="9.7701%" y="127.50"></text></g><g><title>alloc::alloc::alloc::hb992b77ffe933998 (44 samples, 0.12%)</title><rect x="9.5201%" y="101" width="0.1236%" height="15" fill="rgb(232,45,27)"/><text x="9.7701%" y="111.50"></text></g><g><title>__rg_alloc (44 samples, 0.12%)</title><rect x="9.5201%" y="85" width="0.1236%" height="15" fill="rgb(249,103,42)"/><text x="9.7701%" y="95.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (44 samples, 0.12%)</title><rect x="9.5201%" y="69" width="0.1236%" height="15" fill="rgb(246,81,33)"/><text x="9.7701%" y="79.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (44 samples, 0.12%)</title><rect x="9.5201%" y="53" width="0.1236%" height="15" fill="rgb(252,33,42)"/><text x="9.7701%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (64 samples, 0.18%)</title><rect x="9.6437%" y="341" width="0.1798%" height="15" fill="rgb(209,212,41)"/><text x="9.8937%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (64 samples, 0.18%)</title><rect x="9.6437%" y="325" width="0.1798%" height="15" fill="rgb(207,154,6)"/><text x="9.8937%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (64 samples, 0.18%)</title><rect x="9.6437%" y="309" width="0.1798%" height="15" fill="rgb(223,64,47)"/><text x="9.8937%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (64 samples, 0.18%)</title><rect x="9.6437%" y="293" width="0.1798%" height="15" fill="rgb(211,161,38)"/><text x="9.8937%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (64 samples, 0.18%)</title><rect x="9.6437%" y="277" width="0.1798%" height="15" fill="rgb(219,138,40)"/><text x="9.8937%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (64 samples, 0.18%)</title><rect x="9.6437%" y="261" width="0.1798%" height="15" fill="rgb(241,228,46)"/><text x="9.8937%" y="271.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (64 samples, 0.18%)</title><rect x="9.6437%" y="245" width="0.1798%" height="15" fill="rgb(223,209,38)"/><text x="9.8937%" y="255.50"></text></g><g><title>__rg_realloc (64 samples, 0.18%)</title><rect x="9.6437%" y="229" width="0.1798%" height="15" fill="rgb(236,164,45)"/><text x="9.8937%" y="239.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (64 samples, 0.18%)</title><rect x="9.6437%" y="213" width="0.1798%" height="15" fill="rgb(231,15,5)"/><text x="9.8937%" y="223.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (64 samples, 0.18%)</title><rect x="9.6437%" y="197" width="0.1798%" height="15" fill="rgb(252,35,15)"/><text x="9.8937%" y="207.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (64 samples, 0.18%)</title><rect x="9.6437%" y="181" width="0.1798%" height="15" fill="rgb(248,181,18)"/><text x="9.8937%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (68 samples, 0.19%)</title><rect x="9.6437%" y="389" width="0.1911%" height="15" fill="rgb(233,39,42)"/><text x="9.8937%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (68 samples, 0.19%)</title><rect x="9.6437%" y="373" width="0.1911%" height="15" fill="rgb(238,110,33)"/><text x="9.8937%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (68 samples, 0.19%)</title><rect x="9.6437%" y="357" width="0.1911%" height="15" fill="rgb(233,195,10)"/><text x="9.8937%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (1,460 samples, 4.10%)</title><rect x="5.7660%" y="821" width="4.1025%" height="15" fill="rgb(254,105,3)"/><text x="6.0160%" y="831.50">allo..</text></g><g><title>core::ptr::real_drop_in_place::h065749e7cfc69f30 (80 samples, 0.22%)</title><rect x="9.6437%" y="805" width="0.2248%" height="15" fill="rgb(221,225,9)"/><text x="9.8937%" y="815.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (80 samples, 0.22%)</title><rect x="9.6437%" y="789" width="0.2248%" height="15" fill="rgb(224,227,45)"/><text x="9.8937%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (80 samples, 0.22%)</title><rect x="9.6437%" y="773" width="0.2248%" height="15" fill="rgb(229,198,43)"/><text x="9.8937%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (80 samples, 0.22%)</title><rect x="9.6437%" y="757" width="0.2248%" height="15" fill="rgb(206,209,35)"/><text x="9.8937%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (80 samples, 0.22%)</title><rect x="9.6437%" y="741" width="0.2248%" height="15" fill="rgb(245,195,53)"/><text x="9.8937%" y="751.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (80 samples, 0.22%)</title><rect x="9.6437%" y="725" width="0.2248%" height="15" fill="rgb(240,92,26)"/><text x="9.8937%" y="735.50"></text></g><g><title>__rg_dealloc (80 samples, 0.22%)</title><rect x="9.6437%" y="709" width="0.2248%" height="15" fill="rgb(207,40,23)"/><text x="9.8937%" y="719.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (80 samples, 0.22%)</title><rect x="9.6437%" y="693" width="0.2248%" height="15" fill="rgb(223,111,35)"/><text x="9.8937%" y="703.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (80 samples, 0.22%)</title><rect x="9.6437%" y="677" width="0.2248%" height="15" fill="rgb(229,147,28)"/><text x="9.8937%" y="687.50"></text></g><g><title>Unknown (80 samples, 0.22%)</title><rect x="9.6437%" y="661" width="0.2248%" height="15" fill="rgb(211,29,28)"/><text x="9.8937%" y="671.50"></text></g><g><title>_start (80 samples, 0.22%)</title><rect x="9.6437%" y="645" width="0.2248%" height="15" fill="rgb(228,72,33)"/><text x="9.8937%" y="655.50"></text></g><g><title>__libc_start_main (80 samples, 0.22%)</title><rect x="9.6437%" y="629" width="0.2248%" height="15" fill="rgb(205,214,31)"/><text x="9.8937%" y="639.50"></text></g><g><title>main (80 samples, 0.22%)</title><rect x="9.6437%" y="613" width="0.2248%" height="15" fill="rgb(224,111,15)"/><text x="9.8937%" y="623.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (80 samples, 0.22%)</title><rect x="9.6437%" y="597" width="0.2248%" height="15" fill="rgb(253,21,26)"/><text x="9.8937%" y="607.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (80 samples, 0.22%)</title><rect x="9.6437%" y="581" width="0.2248%" height="15" fill="rgb(245,139,43)"/><text x="9.8937%" y="591.50"></text></g><g><title>__rust_maybe_catch_panic (80 samples, 0.22%)</title><rect x="9.6437%" y="565" width="0.2248%" height="15" fill="rgb(252,170,7)"/><text x="9.8937%" y="575.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (80 samples, 0.22%)</title><rect x="9.6437%" y="549" width="0.2248%" height="15" fill="rgb(231,118,14)"/><text x="9.8937%" y="559.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (80 samples, 0.22%)</title><rect x="9.6437%" y="533" width="0.2248%" height="15" fill="rgb(238,83,0)"/><text x="9.8937%" y="543.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (80 samples, 0.22%)</title><rect x="9.6437%" y="517" width="0.2248%" height="15" fill="rgb(221,39,39)"/><text x="9.8937%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (80 samples, 0.22%)</title><rect x="9.6437%" y="501" width="0.2248%" height="15" fill="rgb(222,119,46)"/><text x="9.8937%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (80 samples, 0.22%)</title><rect x="9.6437%" y="485" width="0.2248%" height="15" fill="rgb(222,165,49)"/><text x="9.8937%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (80 samples, 0.22%)</title><rect x="9.6437%" y="469" width="0.2248%" height="15" fill="rgb(219,113,52)"/><text x="9.8937%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (80 samples, 0.22%)</title><rect x="9.6437%" y="453" width="0.2248%" height="15" fill="rgb(214,7,15)"/><text x="9.8937%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (80 samples, 0.22%)</title><rect x="9.6437%" y="437" width="0.2248%" height="15" fill="rgb(235,32,4)"/><text x="9.8937%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (80 samples, 0.22%)</title><rect x="9.6437%" y="421" width="0.2248%" height="15" fill="rgb(238,90,54)"/><text x="9.8937%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (80 samples, 0.22%)</title><rect x="9.6437%" y="405" width="0.2248%" height="15" fill="rgb(213,208,19)"/><text x="9.8937%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (36 samples, 0.10%)</title><rect x="9.8685%" y="773" width="0.1012%" height="15" fill="rgb(233,156,4)"/><text x="10.1185%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (36 samples, 0.10%)</title><rect x="9.8685%" y="757" width="0.1012%" height="15" fill="rgb(207,194,5)"/><text x="10.1185%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (36 samples, 0.10%)</title><rect x="9.8685%" y="741" width="0.1012%" height="15" fill="rgb(206,111,30)"/><text x="10.1185%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (36 samples, 0.10%)</title><rect x="9.8685%" y="725" width="0.1012%" height="15" fill="rgb(243,70,54)"/><text x="10.1185%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (36 samples, 0.10%)</title><rect x="9.8685%" y="709" width="0.1012%" height="15" fill="rgb(242,28,8)"/><text x="10.1185%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (36 samples, 0.10%)</title><rect x="9.8685%" y="693" width="0.1012%" height="15" fill="rgb(219,106,18)"/><text x="10.1185%" y="703.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (36 samples, 0.10%)</title><rect x="9.8685%" y="677" width="0.1012%" height="15" fill="rgb(244,222,10)"/><text x="10.1185%" y="687.50"></text></g><g><title>__rg_realloc (36 samples, 0.10%)</title><rect x="9.8685%" y="661" width="0.1012%" height="15" fill="rgb(236,179,52)"/><text x="10.1185%" y="671.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (36 samples, 0.10%)</title><rect x="9.8685%" y="645" width="0.1012%" height="15" fill="rgb(213,23,39)"/><text x="10.1185%" y="655.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (36 samples, 0.10%)</title><rect x="9.8685%" y="629" width="0.1012%" height="15" fill="rgb(238,48,10)"/><text x="10.1185%" y="639.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (36 samples, 0.10%)</title><rect x="9.8685%" y="613" width="0.1012%" height="15" fill="rgb(251,196,23)"/><text x="10.1185%" y="623.50"></text></g><g><title>Unknown (36 samples, 0.10%)</title><rect x="9.8685%" y="597" width="0.1012%" height="15" fill="rgb(250,152,24)"/><text x="10.1185%" y="607.50"></text></g><g><title>_start (36 samples, 0.10%)</title><rect x="9.8685%" y="581" width="0.1012%" height="15" fill="rgb(209,150,17)"/><text x="10.1185%" y="591.50"></text></g><g><title>__libc_start_main (36 samples, 0.10%)</title><rect x="9.8685%" y="565" width="0.1012%" height="15" fill="rgb(234,202,34)"/><text x="10.1185%" y="575.50"></text></g><g><title>main (36 samples, 0.10%)</title><rect x="9.8685%" y="549" width="0.1012%" height="15" fill="rgb(253,148,53)"/><text x="10.1185%" y="559.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (36 samples, 0.10%)</title><rect x="9.8685%" y="533" width="0.1012%" height="15" fill="rgb(218,129,16)"/><text x="10.1185%" y="543.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (36 samples, 0.10%)</title><rect x="9.8685%" y="517" width="0.1012%" height="15" fill="rgb(216,85,19)"/><text x="10.1185%" y="527.50"></text></g><g><title>__rust_maybe_catch_panic (36 samples, 0.10%)</title><rect x="9.8685%" y="501" width="0.1012%" height="15" fill="rgb(235,228,7)"/><text x="10.1185%" y="511.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (36 samples, 0.10%)</title><rect x="9.8685%" y="485" width="0.1012%" height="15" fill="rgb(245,175,0)"/><text x="10.1185%" y="495.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (36 samples, 0.10%)</title><rect x="9.8685%" y="469" width="0.1012%" height="15" fill="rgb(208,168,36)"/><text x="10.1185%" y="479.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (36 samples, 0.10%)</title><rect x="9.8685%" y="453" width="0.1012%" height="15" fill="rgb(246,171,24)"/><text x="10.1185%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.8685%" y="437" width="0.1012%" height="15" fill="rgb(215,142,24)"/><text x="10.1185%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.8685%" y="421" width="0.1012%" height="15" fill="rgb(250,187,7)"/><text x="10.1185%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.8685%" y="405" width="0.1012%" height="15" fill="rgb(228,66,33)"/><text x="10.1185%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.8685%" y="389" width="0.1012%" height="15" fill="rgb(234,215,21)"/><text x="10.1185%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.8685%" y="373" width="0.1012%" height="15" fill="rgb(222,191,20)"/><text x="10.1185%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.8685%" y="357" width="0.1012%" height="15" fill="rgb(245,79,54)"/><text x="10.1185%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="9.8685%" y="341" width="0.1012%" height="15" fill="rgb(240,10,37)"/><text x="10.1185%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (36 samples, 0.10%)</title><rect x="9.8685%" y="325" width="0.1012%" height="15" fill="rgb(214,192,32)"/><text x="10.1185%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (36 samples, 0.10%)</title><rect x="9.8685%" y="309" width="0.1012%" height="15" fill="rgb(209,36,54)"/><text x="10.1185%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (36 samples, 0.10%)</title><rect x="9.8685%" y="293" width="0.1012%" height="15" fill="rgb(220,10,11)"/><text x="10.1185%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (36 samples, 0.10%)</title><rect x="9.8685%" y="821" width="0.1012%" height="15" fill="rgb(221,106,17)"/><text x="10.1185%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (36 samples, 0.10%)</title><rect x="9.8685%" y="805" width="0.1012%" height="15" fill="rgb(251,142,44)"/><text x="10.1185%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (36 samples, 0.10%)</title><rect x="9.8685%" y="789" width="0.1012%" height="15" fill="rgb(238,13,15)"/><text x="10.1185%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (64 samples, 0.18%)</title><rect x="9.9697%" y="277" width="0.1798%" height="15" fill="rgb(208,107,27)"/><text x="10.2197%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (64 samples, 0.18%)</title><rect x="9.9697%" y="261" width="0.1798%" height="15" fill="rgb(205,136,37)"/><text x="10.2197%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (64 samples, 0.18%)</title><rect x="9.9697%" y="245" width="0.1798%" height="15" fill="rgb(250,205,27)"/><text x="10.2197%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (64 samples, 0.18%)</title><rect x="9.9697%" y="229" width="0.1798%" height="15" fill="rgb(210,80,43)"/><text x="10.2197%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (64 samples, 0.18%)</title><rect x="9.9697%" y="213" width="0.1798%" height="15" fill="rgb(247,160,36)"/><text x="10.2197%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (64 samples, 0.18%)</title><rect x="9.9697%" y="197" width="0.1798%" height="15" fill="rgb(234,13,49)"/><text x="10.2197%" y="207.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (64 samples, 0.18%)</title><rect x="9.9697%" y="181" width="0.1798%" height="15" fill="rgb(234,122,0)"/><text x="10.2197%" y="191.50"></text></g><g><title>__rg_realloc (64 samples, 0.18%)</title><rect x="9.9697%" y="165" width="0.1798%" height="15" fill="rgb(207,146,38)"/><text x="10.2197%" y="175.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (64 samples, 0.18%)</title><rect x="9.9697%" y="149" width="0.1798%" height="15" fill="rgb(207,177,25)"/><text x="10.2197%" y="159.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (64 samples, 0.18%)</title><rect x="9.9697%" y="133" width="0.1798%" height="15" fill="rgb(211,178,42)"/><text x="10.2197%" y="143.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (64 samples, 0.18%)</title><rect x="9.9697%" y="117" width="0.1798%" height="15" fill="rgb(230,69,54)"/><text x="10.2197%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (68 samples, 0.19%)</title><rect x="9.9697%" y="773" width="0.1911%" height="15" fill="rgb(214,135,41)"/><text x="10.2197%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (68 samples, 0.19%)</title><rect x="9.9697%" y="757" width="0.1911%" height="15" fill="rgb(237,67,25)"/><text x="10.2197%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (68 samples, 0.19%)</title><rect x="9.9697%" y="741" width="0.1911%" height="15" fill="rgb(222,189,50)"/><text x="10.2197%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (68 samples, 0.19%)</title><rect x="9.9697%" y="725" width="0.1911%" height="15" fill="rgb(245,148,34)"/><text x="10.2197%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (68 samples, 0.19%)</title><rect x="9.9697%" y="709" width="0.1911%" height="15" fill="rgb(222,29,6)"/><text x="10.2197%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (68 samples, 0.19%)</title><rect x="9.9697%" y="693" width="0.1911%" height="15" fill="rgb(221,189,43)"/><text x="10.2197%" y="703.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (68 samples, 0.19%)</title><rect x="9.9697%" y="677" width="0.1911%" height="15" fill="rgb(207,36,27)"/><text x="10.2197%" y="687.50"></text></g><g><title>__rg_realloc (68 samples, 0.19%)</title><rect x="9.9697%" y="661" width="0.1911%" height="15" fill="rgb(217,90,24)"/><text x="10.2197%" y="671.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (68 samples, 0.19%)</title><rect x="9.9697%" y="645" width="0.1911%" height="15" fill="rgb(224,66,35)"/><text x="10.2197%" y="655.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (68 samples, 0.19%)</title><rect x="9.9697%" y="629" width="0.1911%" height="15" fill="rgb(221,13,50)"/><text x="10.2197%" y="639.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (68 samples, 0.19%)</title><rect x="9.9697%" y="613" width="0.1911%" height="15" fill="rgb(236,68,49)"/><text x="10.2197%" y="623.50"></text></g><g><title>Unknown (68 samples, 0.19%)</title><rect x="9.9697%" y="597" width="0.1911%" height="15" fill="rgb(229,146,28)"/><text x="10.2197%" y="607.50"></text></g><g><title>_start (68 samples, 0.19%)</title><rect x="9.9697%" y="581" width="0.1911%" height="15" fill="rgb(225,31,38)"/><text x="10.2197%" y="591.50"></text></g><g><title>__libc_start_main (68 samples, 0.19%)</title><rect x="9.9697%" y="565" width="0.1911%" height="15" fill="rgb(250,208,3)"/><text x="10.2197%" y="575.50"></text></g><g><title>main (68 samples, 0.19%)</title><rect x="9.9697%" y="549" width="0.1911%" height="15" fill="rgb(246,54,23)"/><text x="10.2197%" y="559.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (68 samples, 0.19%)</title><rect x="9.9697%" y="533" width="0.1911%" height="15" fill="rgb(243,76,11)"/><text x="10.2197%" y="543.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (68 samples, 0.19%)</title><rect x="9.9697%" y="517" width="0.1911%" height="15" fill="rgb(245,21,50)"/><text x="10.2197%" y="527.50"></text></g><g><title>__rust_maybe_catch_panic (68 samples, 0.19%)</title><rect x="9.9697%" y="501" width="0.1911%" height="15" fill="rgb(228,9,43)"/><text x="10.2197%" y="511.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (68 samples, 0.19%)</title><rect x="9.9697%" y="485" width="0.1911%" height="15" fill="rgb(208,100,47)"/><text x="10.2197%" y="495.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (68 samples, 0.19%)</title><rect x="9.9697%" y="469" width="0.1911%" height="15" fill="rgb(232,26,8)"/><text x="10.2197%" y="479.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (68 samples, 0.19%)</title><rect x="9.9697%" y="453" width="0.1911%" height="15" fill="rgb(216,166,38)"/><text x="10.2197%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (68 samples, 0.19%)</title><rect x="9.9697%" y="437" width="0.1911%" height="15" fill="rgb(251,202,51)"/><text x="10.2197%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (68 samples, 0.19%)</title><rect x="9.9697%" y="421" width="0.1911%" height="15" fill="rgb(254,216,34)"/><text x="10.2197%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (68 samples, 0.19%)</title><rect x="9.9697%" y="405" width="0.1911%" height="15" fill="rgb(251,32,27)"/><text x="10.2197%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (68 samples, 0.19%)</title><rect x="9.9697%" y="389" width="0.1911%" height="15" fill="rgb(208,127,28)"/><text x="10.2197%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (68 samples, 0.19%)</title><rect x="9.9697%" y="373" width="0.1911%" height="15" fill="rgb(224,137,22)"/><text x="10.2197%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (68 samples, 0.19%)</title><rect x="9.9697%" y="357" width="0.1911%" height="15" fill="rgb(254,70,32)"/><text x="10.2197%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (68 samples, 0.19%)</title><rect x="9.9697%" y="341" width="0.1911%" height="15" fill="rgb(229,75,37)"/><text x="10.2197%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (68 samples, 0.19%)</title><rect x="9.9697%" y="325" width="0.1911%" height="15" fill="rgb(252,64,23)"/><text x="10.2197%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (68 samples, 0.19%)</title><rect x="9.9697%" y="309" width="0.1911%" height="15" fill="rgb(232,162,48)"/><text x="10.2197%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (68 samples, 0.19%)</title><rect x="9.9697%" y="293" width="0.1911%" height="15" fill="rgb(246,160,12)"/><text x="10.2197%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (68 samples, 0.19%)</title><rect x="9.9697%" y="821" width="0.1911%" height="15" fill="rgb(247,166,0)"/><text x="10.2197%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (68 samples, 0.19%)</title><rect x="9.9697%" y="805" width="0.1911%" height="15" fill="rgb(249,219,21)"/><text x="10.2197%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (68 samples, 0.19%)</title><rect x="9.9697%" y="789" width="0.1911%" height="15" fill="rgb(205,209,3)"/><text x="10.2197%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (60 samples, 0.17%)</title><rect x="10.1607%" y="821" width="0.1686%" height="15" fill="rgb(243,44,1)"/><text x="10.4107%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (60 samples, 0.17%)</title><rect x="10.1607%" y="805" width="0.1686%" height="15" fill="rgb(206,159,16)"/><text x="10.4107%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (60 samples, 0.17%)</title><rect x="10.1607%" y="789" width="0.1686%" height="15" fill="rgb(244,77,30)"/><text x="10.4107%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (60 samples, 0.17%)</title><rect x="10.1607%" y="773" width="0.1686%" height="15" fill="rgb(218,69,12)"/><text x="10.4107%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (60 samples, 0.17%)</title><rect x="10.1607%" y="757" width="0.1686%" height="15" fill="rgb(212,87,7)"/><text x="10.4107%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (60 samples, 0.17%)</title><rect x="10.1607%" y="741" width="0.1686%" height="15" fill="rgb(245,114,25)"/><text x="10.4107%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::h3dc055e1da02411d (44 samples, 0.12%)</title><rect x="10.2057%" y="725" width="0.1236%" height="15" fill="rgb(210,61,42)"/><text x="10.4557%" y="735.50"></text></g><g><title>core::ptr::real_drop_in_place::h1cf8390ffe354c7f (44 samples, 0.12%)</title><rect x="10.2057%" y="709" width="0.1236%" height="15" fill="rgb(211,52,33)"/><text x="10.4557%" y="719.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop::he6982a417c2b7a08 (44 samples, 0.12%)</title><rect x="10.2057%" y="693" width="0.1236%" height="15" fill="rgb(234,58,33)"/><text x="10.4557%" y="703.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (44 samples, 0.12%)</title><rect x="10.2057%" y="677" width="0.1236%" height="15" fill="rgb(220,115,36)"/><text x="10.4557%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (44 samples, 0.12%)</title><rect x="10.2057%" y="661" width="0.1236%" height="15" fill="rgb(243,153,54)"/><text x="10.4557%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (44 samples, 0.12%)</title><rect x="10.2057%" y="645" width="0.1236%" height="15" fill="rgb(251,47,18)"/><text x="10.4557%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (44 samples, 0.12%)</title><rect x="10.2057%" y="629" width="0.1236%" height="15" fill="rgb(242,102,42)"/><text x="10.4557%" y="639.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (44 samples, 0.12%)</title><rect x="10.2057%" y="613" width="0.1236%" height="15" fill="rgb(234,31,38)"/><text x="10.4557%" y="623.50"></text></g><g><title>__rg_dealloc (44 samples, 0.12%)</title><rect x="10.2057%" y="597" width="0.1236%" height="15" fill="rgb(221,117,51)"/><text x="10.4557%" y="607.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (44 samples, 0.12%)</title><rect x="10.2057%" y="581" width="0.1236%" height="15" fill="rgb(212,20,18)"/><text x="10.4557%" y="591.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (44 samples, 0.12%)</title><rect x="10.2057%" y="565" width="0.1236%" height="15" fill="rgb(245,133,36)"/><text x="10.4557%" y="575.50"></text></g><g><title>Unknown (44 samples, 0.12%)</title><rect x="10.2057%" y="549" width="0.1236%" height="15" fill="rgb(212,6,19)"/><text x="10.4557%" y="559.50"></text></g><g><title>_start (44 samples, 0.12%)</title><rect x="10.2057%" y="533" width="0.1236%" height="15" fill="rgb(218,1,36)"/><text x="10.4557%" y="543.50"></text></g><g><title>__libc_start_main (44 samples, 0.12%)</title><rect x="10.2057%" y="517" width="0.1236%" height="15" fill="rgb(246,84,54)"/><text x="10.4557%" y="527.50"></text></g><g><title>main (44 samples, 0.12%)</title><rect x="10.2057%" y="501" width="0.1236%" height="15" fill="rgb(242,110,6)"/><text x="10.4557%" y="511.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (44 samples, 0.12%)</title><rect x="10.2057%" y="485" width="0.1236%" height="15" fill="rgb(214,47,5)"/><text x="10.4557%" y="495.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (44 samples, 0.12%)</title><rect x="10.2057%" y="469" width="0.1236%" height="15" fill="rgb(218,159,25)"/><text x="10.4557%" y="479.50"></text></g><g><title>__rust_maybe_catch_panic (44 samples, 0.12%)</title><rect x="10.2057%" y="453" width="0.1236%" height="15" fill="rgb(215,211,28)"/><text x="10.4557%" y="463.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (44 samples, 0.12%)</title><rect x="10.2057%" y="437" width="0.1236%" height="15" fill="rgb(238,59,32)"/><text x="10.4557%" y="447.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (44 samples, 0.12%)</title><rect x="10.2057%" y="421" width="0.1236%" height="15" fill="rgb(226,82,3)"/><text x="10.4557%" y="431.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (44 samples, 0.12%)</title><rect x="10.2057%" y="405" width="0.1236%" height="15" fill="rgb(240,164,32)"/><text x="10.4557%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="10.2057%" y="389" width="0.1236%" height="15" fill="rgb(232,46,7)"/><text x="10.4557%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="10.2057%" y="373" width="0.1236%" height="15" fill="rgb(229,129,53)"/><text x="10.4557%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="10.2057%" y="357" width="0.1236%" height="15" fill="rgb(234,188,29)"/><text x="10.4557%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="10.2057%" y="341" width="0.1236%" height="15" fill="rgb(246,141,4)"/><text x="10.4557%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="10.2057%" y="325" width="0.1236%" height="15" fill="rgb(229,23,39)"/><text x="10.4557%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="10.2057%" y="309" width="0.1236%" height="15" fill="rgb(206,12,3)"/><text x="10.4557%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="10.2057%" y="293" width="0.1236%" height="15" fill="rgb(252,226,20)"/><text x="10.4557%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (44 samples, 0.12%)</title><rect x="10.2057%" y="277" width="0.1236%" height="15" fill="rgb(216,123,35)"/><text x="10.4557%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (40 samples, 0.11%)</title><rect x="10.2169%" y="261" width="0.1124%" height="15" fill="rgb(212,68,40)"/><text x="10.4669%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (40 samples, 0.11%)</title><rect x="10.2169%" y="245" width="0.1124%" height="15" fill="rgb(254,125,32)"/><text x="10.4669%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (40 samples, 0.11%)</title><rect x="10.2169%" y="229" width="0.1124%" height="15" fill="rgb(253,97,22)"/><text x="10.4669%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (40 samples, 0.11%)</title><rect x="10.2169%" y="213" width="0.1124%" height="15" fill="rgb(241,101,14)"/><text x="10.4669%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (40 samples, 0.11%)</title><rect x="10.2169%" y="197" width="0.1124%" height="15" fill="rgb(238,103,29)"/><text x="10.4669%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (40 samples, 0.11%)</title><rect x="10.2169%" y="181" width="0.1124%" height="15" fill="rgb(233,195,47)"/><text x="10.4669%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (40 samples, 0.11%)</title><rect x="10.2169%" y="165" width="0.1124%" height="15" fill="rgb(246,218,30)"/><text x="10.4669%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc::h6cffe83be2bbe610 (40 samples, 0.11%)</title><rect x="10.2169%" y="149" width="0.1124%" height="15" fill="rgb(219,145,47)"/><text x="10.4669%" y="159.50"></text></g><g><title>alloc::alloc::alloc::hb992b77ffe933998 (40 samples, 0.11%)</title><rect x="10.2169%" y="133" width="0.1124%" height="15" fill="rgb(243,12,26)"/><text x="10.4669%" y="143.50"></text></g><g><title>__rg_alloc (40 samples, 0.11%)</title><rect x="10.2169%" y="117" width="0.1124%" height="15" fill="rgb(214,87,16)"/><text x="10.4669%" y="127.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (40 samples, 0.11%)</title><rect x="10.2169%" y="101" width="0.1124%" height="15" fill="rgb(208,99,42)"/><text x="10.4669%" y="111.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (40 samples, 0.11%)</title><rect x="10.2169%" y="85" width="0.1124%" height="15" fill="rgb(253,99,2)"/><text x="10.4669%" y="95.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (1,664 samples, 4.68%)</title><rect x="5.7660%" y="837" width="4.6757%" height="15" fill="rgb(220,168,23)"/><text x="6.0160%" y="847.50">alloc..</text></g><g><title>core::ptr::real_drop_in_place::h065749e7cfc69f30 (40 samples, 0.11%)</title><rect x="10.3293%" y="821" width="0.1124%" height="15" fill="rgb(242,38,24)"/><text x="10.5793%" y="831.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (40 samples, 0.11%)</title><rect x="10.3293%" y="805" width="0.1124%" height="15" fill="rgb(225,182,9)"/><text x="10.5793%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (40 samples, 0.11%)</title><rect x="10.3293%" y="789" width="0.1124%" height="15" fill="rgb(243,178,37)"/><text x="10.5793%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (40 samples, 0.11%)</title><rect x="10.3293%" y="773" width="0.1124%" height="15" fill="rgb(232,139,19)"/><text x="10.5793%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (40 samples, 0.11%)</title><rect x="10.3293%" y="757" width="0.1124%" height="15" fill="rgb(225,201,24)"/><text x="10.5793%" y="767.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (40 samples, 0.11%)</title><rect x="10.3293%" y="741" width="0.1124%" height="15" fill="rgb(221,47,46)"/><text x="10.5793%" y="751.50"></text></g><g><title>__rg_dealloc (40 samples, 0.11%)</title><rect x="10.3293%" y="725" width="0.1124%" height="15" fill="rgb(249,23,13)"/><text x="10.5793%" y="735.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (40 samples, 0.11%)</title><rect x="10.3293%" y="709" width="0.1124%" height="15" fill="rgb(219,9,5)"/><text x="10.5793%" y="719.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (40 samples, 0.11%)</title><rect x="10.3293%" y="693" width="0.1124%" height="15" fill="rgb(254,171,16)"/><text x="10.5793%" y="703.50"></text></g><g><title>Unknown (40 samples, 0.11%)</title><rect x="10.3293%" y="677" width="0.1124%" height="15" fill="rgb(230,171,20)"/><text x="10.5793%" y="687.50"></text></g><g><title>_start (40 samples, 0.11%)</title><rect x="10.3293%" y="661" width="0.1124%" height="15" fill="rgb(210,71,41)"/><text x="10.5793%" y="671.50"></text></g><g><title>__libc_start_main (40 samples, 0.11%)</title><rect x="10.3293%" y="645" width="0.1124%" height="15" fill="rgb(206,173,20)"/><text x="10.5793%" y="655.50"></text></g><g><title>main (40 samples, 0.11%)</title><rect x="10.3293%" y="629" width="0.1124%" height="15" fill="rgb(233,88,34)"/><text x="10.5793%" y="639.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (40 samples, 0.11%)</title><rect x="10.3293%" y="613" width="0.1124%" height="15" fill="rgb(223,209,46)"/><text x="10.5793%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (40 samples, 0.11%)</title><rect x="10.3293%" y="597" width="0.1124%" height="15" fill="rgb(250,43,18)"/><text x="10.5793%" y="607.50"></text></g><g><title>__rust_maybe_catch_panic (40 samples, 0.11%)</title><rect x="10.3293%" y="581" width="0.1124%" height="15" fill="rgb(208,13,10)"/><text x="10.5793%" y="591.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (40 samples, 0.11%)</title><rect x="10.3293%" y="565" width="0.1124%" height="15" fill="rgb(212,200,36)"/><text x="10.5793%" y="575.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (40 samples, 0.11%)</title><rect x="10.3293%" y="549" width="0.1124%" height="15" fill="rgb(225,90,30)"/><text x="10.5793%" y="559.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (40 samples, 0.11%)</title><rect x="10.3293%" y="533" width="0.1124%" height="15" fill="rgb(236,182,39)"/><text x="10.5793%" y="543.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="10.3293%" y="517" width="0.1124%" height="15" fill="rgb(212,144,35)"/><text x="10.5793%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="10.3293%" y="501" width="0.1124%" height="15" fill="rgb(228,63,44)"/><text x="10.5793%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="10.3293%" y="485" width="0.1124%" height="15" fill="rgb(228,109,6)"/><text x="10.5793%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="10.3293%" y="469" width="0.1124%" height="15" fill="rgb(238,117,24)"/><text x="10.5793%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="10.3293%" y="453" width="0.1124%" height="15" fill="rgb(242,26,26)"/><text x="10.5793%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (40 samples, 0.11%)</title><rect x="10.3293%" y="437" width="0.1124%" height="15" fill="rgb(221,92,48)"/><text x="10.5793%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (36 samples, 0.10%)</title><rect x="10.5092%" y="837" width="0.1012%" height="15" fill="rgb(209,209,32)"/><text x="10.7592%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (36 samples, 0.10%)</title><rect x="10.5092%" y="821" width="0.1012%" height="15" fill="rgb(221,70,22)"/><text x="10.7592%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (36 samples, 0.10%)</title><rect x="10.5092%" y="805" width="0.1012%" height="15" fill="rgb(248,145,5)"/><text x="10.7592%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (36 samples, 0.10%)</title><rect x="10.5092%" y="789" width="0.1012%" height="15" fill="rgb(226,116,26)"/><text x="10.7592%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (36 samples, 0.10%)</title><rect x="10.5092%" y="773" width="0.1012%" height="15" fill="rgb(244,5,17)"/><text x="10.7592%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (36 samples, 0.10%)</title><rect x="10.5092%" y="757" width="0.1012%" height="15" fill="rgb(252,159,33)"/><text x="10.7592%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (36 samples, 0.10%)</title><rect x="10.6103%" y="453" width="0.1012%" height="15" fill="rgb(206,71,0)"/><text x="10.8603%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (36 samples, 0.10%)</title><rect x="10.6103%" y="437" width="0.1012%" height="15" fill="rgb(233,118,54)"/><text x="10.8603%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (36 samples, 0.10%)</title><rect x="10.6103%" y="421" width="0.1012%" height="15" fill="rgb(234,83,48)"/><text x="10.8603%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (1,796 samples, 5.05%)</title><rect x="5.7660%" y="853" width="5.0466%" height="15" fill="rgb(228,3,54)"/><text x="6.0160%" y="863.50">alloc_..</text></g><g><title>core::ptr::real_drop_in_place::h065749e7cfc69f30 (72 samples, 0.20%)</title><rect x="10.6103%" y="837" width="0.2023%" height="15" fill="rgb(226,155,13)"/><text x="10.8603%" y="847.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (72 samples, 0.20%)</title><rect x="10.6103%" y="821" width="0.2023%" height="15" fill="rgb(241,28,37)"/><text x="10.8603%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (72 samples, 0.20%)</title><rect x="10.6103%" y="805" width="0.2023%" height="15" fill="rgb(233,93,10)"/><text x="10.8603%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (72 samples, 0.20%)</title><rect x="10.6103%" y="789" width="0.2023%" height="15" fill="rgb(225,113,19)"/><text x="10.8603%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (72 samples, 0.20%)</title><rect x="10.6103%" y="773" width="0.2023%" height="15" fill="rgb(241,2,18)"/><text x="10.8603%" y="783.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (72 samples, 0.20%)</title><rect x="10.6103%" y="757" width="0.2023%" height="15" fill="rgb(228,207,21)"/><text x="10.8603%" y="767.50"></text></g><g><title>__rg_dealloc (72 samples, 0.20%)</title><rect x="10.6103%" y="741" width="0.2023%" height="15" fill="rgb(213,211,35)"/><text x="10.8603%" y="751.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (72 samples, 0.20%)</title><rect x="10.6103%" y="725" width="0.2023%" height="15" fill="rgb(209,83,10)"/><text x="10.8603%" y="735.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (72 samples, 0.20%)</title><rect x="10.6103%" y="709" width="0.2023%" height="15" fill="rgb(209,164,1)"/><text x="10.8603%" y="719.50"></text></g><g><title>Unknown (72 samples, 0.20%)</title><rect x="10.6103%" y="693" width="0.2023%" height="15" fill="rgb(213,184,43)"/><text x="10.8603%" y="703.50"></text></g><g><title>_start (72 samples, 0.20%)</title><rect x="10.6103%" y="677" width="0.2023%" height="15" fill="rgb(231,61,34)"/><text x="10.8603%" y="687.50"></text></g><g><title>__libc_start_main (72 samples, 0.20%)</title><rect x="10.6103%" y="661" width="0.2023%" height="15" fill="rgb(235,75,3)"/><text x="10.8603%" y="671.50"></text></g><g><title>main (72 samples, 0.20%)</title><rect x="10.6103%" y="645" width="0.2023%" height="15" fill="rgb(220,106,47)"/><text x="10.8603%" y="655.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (72 samples, 0.20%)</title><rect x="10.6103%" y="629" width="0.2023%" height="15" fill="rgb(210,196,33)"/><text x="10.8603%" y="639.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (72 samples, 0.20%)</title><rect x="10.6103%" y="613" width="0.2023%" height="15" fill="rgb(229,154,42)"/><text x="10.8603%" y="623.50"></text></g><g><title>__rust_maybe_catch_panic (72 samples, 0.20%)</title><rect x="10.6103%" y="597" width="0.2023%" height="15" fill="rgb(228,114,26)"/><text x="10.8603%" y="607.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (72 samples, 0.20%)</title><rect x="10.6103%" y="581" width="0.2023%" height="15" fill="rgb(208,144,1)"/><text x="10.8603%" y="591.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (72 samples, 0.20%)</title><rect x="10.6103%" y="565" width="0.2023%" height="15" fill="rgb(239,112,37)"/><text x="10.8603%" y="575.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (72 samples, 0.20%)</title><rect x="10.6103%" y="549" width="0.2023%" height="15" fill="rgb(210,96,50)"/><text x="10.8603%" y="559.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="10.6103%" y="533" width="0.2023%" height="15" fill="rgb(222,178,2)"/><text x="10.8603%" y="543.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="10.6103%" y="517" width="0.2023%" height="15" fill="rgb(226,74,18)"/><text x="10.8603%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="10.6103%" y="501" width="0.2023%" height="15" fill="rgb(225,67,54)"/><text x="10.8603%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="10.6103%" y="485" width="0.2023%" height="15" fill="rgb(251,92,32)"/><text x="10.8603%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (72 samples, 0.20%)</title><rect x="10.6103%" y="469" width="0.2023%" height="15" fill="rgb(228,149,22)"/><text x="10.8603%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (36 samples, 0.10%)</title><rect x="10.7115%" y="453" width="0.1012%" height="15" fill="rgb(243,54,13)"/><text x="10.9615%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (36 samples, 0.10%)</title><rect x="10.7115%" y="437" width="0.1012%" height="15" fill="rgb(243,180,28)"/><text x="10.9615%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (36 samples, 0.10%)</title><rect x="10.7115%" y="421" width="0.1012%" height="15" fill="rgb(208,167,24)"/><text x="10.9615%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (56 samples, 0.16%)</title><rect x="10.9250%" y="853" width="0.1574%" height="15" fill="rgb(245,73,45)"/><text x="11.1750%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (56 samples, 0.16%)</title><rect x="10.9250%" y="837" width="0.1574%" height="15" fill="rgb(237,203,48)"/><text x="11.1750%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (56 samples, 0.16%)</title><rect x="10.9250%" y="821" width="0.1574%" height="15" fill="rgb(211,197,16)"/><text x="11.1750%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (56 samples, 0.16%)</title><rect x="10.9250%" y="805" width="0.1574%" height="15" fill="rgb(243,99,51)"/><text x="11.1750%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (56 samples, 0.16%)</title><rect x="10.9250%" y="789" width="0.1574%" height="15" fill="rgb(215,123,29)"/><text x="11.1750%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (56 samples, 0.16%)</title><rect x="10.9250%" y="773" width="0.1574%" height="15" fill="rgb(239,186,37)"/><text x="11.1750%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (64 samples, 0.18%)</title><rect x="11.0824%" y="485" width="0.1798%" height="15" fill="rgb(252,136,39)"/><text x="11.3324%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (64 samples, 0.18%)</title><rect x="11.0824%" y="469" width="0.1798%" height="15" fill="rgb(223,213,32)"/><text x="11.3324%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (64 samples, 0.18%)</title><rect x="11.0824%" y="453" width="0.1798%" height="15" fill="rgb(233,115,5)"/><text x="11.3324%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (64 samples, 0.18%)</title><rect x="11.0824%" y="437" width="0.1798%" height="15" fill="rgb(207,226,44)"/><text x="11.3324%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (64 samples, 0.18%)</title><rect x="11.0824%" y="421" width="0.1798%" height="15" fill="rgb(208,126,0)"/><text x="11.3324%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (64 samples, 0.18%)</title><rect x="11.0824%" y="405" width="0.1798%" height="15" fill="rgb(244,66,21)"/><text x="11.3324%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (64 samples, 0.18%)</title><rect x="11.0824%" y="389" width="0.1798%" height="15" fill="rgb(222,97,12)"/><text x="11.3324%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (64 samples, 0.18%)</title><rect x="11.0824%" y="373" width="0.1798%" height="15" fill="rgb(219,213,19)"/><text x="11.3324%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (64 samples, 0.18%)</title><rect x="11.0824%" y="357" width="0.1798%" height="15" fill="rgb(252,169,30)"/><text x="11.3324%" y="367.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (64 samples, 0.18%)</title><rect x="11.0824%" y="341" width="0.1798%" height="15" fill="rgb(206,32,51)"/><text x="11.3324%" y="351.50"></text></g><g><title>__rg_realloc (64 samples, 0.18%)</title><rect x="11.0824%" y="325" width="0.1798%" height="15" fill="rgb(250,172,42)"/><text x="11.3324%" y="335.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (64 samples, 0.18%)</title><rect x="11.0824%" y="309" width="0.1798%" height="15" fill="rgb(209,34,43)"/><text x="11.3324%" y="319.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (64 samples, 0.18%)</title><rect x="11.0824%" y="293" width="0.1798%" height="15" fill="rgb(223,11,35)"/><text x="11.3324%" y="303.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (64 samples, 0.18%)</title><rect x="11.0824%" y="277" width="0.1798%" height="15" fill="rgb(251,219,26)"/><text x="11.3324%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (2,212 samples, 6.22%)</title><rect x="5.7660%" y="869" width="6.2156%" height="15" fill="rgb(231,119,3)"/><text x="6.0160%" y="879.50">alloc_fr..</text></g><g><title>core::ptr::real_drop_in_place::h065749e7cfc69f30 (320 samples, 0.90%)</title><rect x="11.0824%" y="853" width="0.8992%" height="15" fill="rgb(216,97,11)"/><text x="11.3324%" y="863.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (320 samples, 0.90%)</title><rect x="11.0824%" y="837" width="0.8992%" height="15" fill="rgb(223,59,9)"/><text x="11.3324%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (320 samples, 0.90%)</title><rect x="11.0824%" y="821" width="0.8992%" height="15" fill="rgb(233,93,31)"/><text x="11.3324%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (320 samples, 0.90%)</title><rect x="11.0824%" y="805" width="0.8992%" height="15" fill="rgb(239,81,33)"/><text x="11.3324%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (320 samples, 0.90%)</title><rect x="11.0824%" y="789" width="0.8992%" height="15" fill="rgb(213,120,34)"/><text x="11.3324%" y="799.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (320 samples, 0.90%)</title><rect x="11.0824%" y="773" width="0.8992%" height="15" fill="rgb(243,49,53)"/><text x="11.3324%" y="783.50"></text></g><g><title>__rg_dealloc (320 samples, 0.90%)</title><rect x="11.0824%" y="757" width="0.8992%" height="15" fill="rgb(247,216,33)"/><text x="11.3324%" y="767.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (320 samples, 0.90%)</title><rect x="11.0824%" y="741" width="0.8992%" height="15" fill="rgb(226,26,14)"/><text x="11.3324%" y="751.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (320 samples, 0.90%)</title><rect x="11.0824%" y="725" width="0.8992%" height="15" fill="rgb(215,49,53)"/><text x="11.3324%" y="735.50"></text></g><g><title>Unknown (320 samples, 0.90%)</title><rect x="11.0824%" y="709" width="0.8992%" height="15" fill="rgb(245,162,40)"/><text x="11.3324%" y="719.50"></text></g><g><title>_start (320 samples, 0.90%)</title><rect x="11.0824%" y="693" width="0.8992%" height="15" fill="rgb(229,68,17)"/><text x="11.3324%" y="703.50"></text></g><g><title>__libc_start_main (320 samples, 0.90%)</title><rect x="11.0824%" y="677" width="0.8992%" height="15" fill="rgb(213,182,10)"/><text x="11.3324%" y="687.50"></text></g><g><title>main (320 samples, 0.90%)</title><rect x="11.0824%" y="661" width="0.8992%" height="15" fill="rgb(245,125,30)"/><text x="11.3324%" y="671.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (320 samples, 0.90%)</title><rect x="11.0824%" y="645" width="0.8992%" height="15" fill="rgb(232,202,2)"/><text x="11.3324%" y="655.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (320 samples, 0.90%)</title><rect x="11.0824%" y="629" width="0.8992%" height="15" fill="rgb(237,140,51)"/><text x="11.3324%" y="639.50"></text></g><g><title>__rust_maybe_catch_panic (320 samples, 0.90%)</title><rect x="11.0824%" y="613" width="0.8992%" height="15" fill="rgb(236,157,25)"/><text x="11.3324%" y="623.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (320 samples, 0.90%)</title><rect x="11.0824%" y="597" width="0.8992%" height="15" fill="rgb(219,209,0)"/><text x="11.3324%" y="607.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (320 samples, 0.90%)</title><rect x="11.0824%" y="581" width="0.8992%" height="15" fill="rgb(240,116,54)"/><text x="11.3324%" y="591.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (320 samples, 0.90%)</title><rect x="11.0824%" y="565" width="0.8992%" height="15" fill="rgb(216,10,36)"/><text x="11.3324%" y="575.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (320 samples, 0.90%)</title><rect x="11.0824%" y="549" width="0.8992%" height="15" fill="rgb(222,72,44)"/><text x="11.3324%" y="559.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (320 samples, 0.90%)</title><rect x="11.0824%" y="533" width="0.8992%" height="15" fill="rgb(232,159,9)"/><text x="11.3324%" y="543.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (320 samples, 0.90%)</title><rect x="11.0824%" y="517" width="0.8992%" height="15" fill="rgb(210,39,32)"/><text x="11.3324%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (320 samples, 0.90%)</title><rect x="11.0824%" y="501" width="0.8992%" height="15" fill="rgb(216,194,45)"/><text x="11.3324%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (256 samples, 0.72%)</title><rect x="11.2622%" y="485" width="0.7193%" height="15" fill="rgb(218,18,35)"/><text x="11.5122%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (256 samples, 0.72%)</title><rect x="11.2622%" y="469" width="0.7193%" height="15" fill="rgb(207,83,51)"/><text x="11.5122%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (256 samples, 0.72%)</title><rect x="11.2622%" y="453" width="0.7193%" height="15" fill="rgb(225,63,43)"/><text x="11.5122%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (256 samples, 0.72%)</title><rect x="11.2622%" y="437" width="0.7193%" height="15" fill="rgb(207,57,36)"/><text x="11.5122%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (256 samples, 0.72%)</title><rect x="11.2622%" y="421" width="0.7193%" height="15" fill="rgb(216,99,33)"/><text x="11.5122%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (256 samples, 0.72%)</title><rect x="11.2622%" y="405" width="0.7193%" height="15" fill="rgb(225,42,16)"/><text x="11.5122%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (256 samples, 0.72%)</title><rect x="11.2622%" y="389" width="0.7193%" height="15" fill="rgb(220,201,45)"/><text x="11.5122%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (256 samples, 0.72%)</title><rect x="11.2622%" y="373" width="0.7193%" height="15" fill="rgb(225,33,4)"/><text x="11.5122%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (256 samples, 0.72%)</title><rect x="11.2622%" y="357" width="0.7193%" height="15" fill="rgb(224,33,50)"/><text x="11.5122%" y="367.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (256 samples, 0.72%)</title><rect x="11.2622%" y="341" width="0.7193%" height="15" fill="rgb(246,198,51)"/><text x="11.5122%" y="351.50"></text></g><g><title>__rg_realloc (256 samples, 0.72%)</title><rect x="11.2622%" y="325" width="0.7193%" height="15" fill="rgb(205,22,4)"/><text x="11.5122%" y="335.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (256 samples, 0.72%)</title><rect x="11.2622%" y="309" width="0.7193%" height="15" fill="rgb(206,3,8)"/><text x="11.5122%" y="319.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (256 samples, 0.72%)</title><rect x="11.2622%" y="293" width="0.7193%" height="15" fill="rgb(251,23,15)"/><text x="11.5122%" y="303.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (256 samples, 0.72%)</title><rect x="11.2622%" y="277" width="0.7193%" height="15" fill="rgb(252,88,28)"/><text x="11.5122%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (36 samples, 0.10%)</title><rect x="11.9816%" y="821" width="0.1012%" height="15" fill="rgb(212,127,14)"/><text x="12.2316%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (36 samples, 0.10%)</title><rect x="11.9816%" y="805" width="0.1012%" height="15" fill="rgb(247,145,37)"/><text x="12.2316%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (36 samples, 0.10%)</title><rect x="11.9816%" y="789" width="0.1012%" height="15" fill="rgb(209,117,53)"/><text x="12.2316%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (36 samples, 0.10%)</title><rect x="11.9816%" y="773" width="0.1012%" height="15" fill="rgb(212,90,42)"/><text x="12.2316%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (36 samples, 0.10%)</title><rect x="11.9816%" y="757" width="0.1012%" height="15" fill="rgb(218,164,37)"/><text x="12.2316%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (36 samples, 0.10%)</title><rect x="11.9816%" y="741" width="0.1012%" height="15" fill="rgb(246,65,34)"/><text x="12.2316%" y="751.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (36 samples, 0.10%)</title><rect x="11.9816%" y="725" width="0.1012%" height="15" fill="rgb(231,100,33)"/><text x="12.2316%" y="735.50"></text></g><g><title>__rg_realloc (36 samples, 0.10%)</title><rect x="11.9816%" y="709" width="0.1012%" height="15" fill="rgb(228,126,14)"/><text x="12.2316%" y="719.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (36 samples, 0.10%)</title><rect x="11.9816%" y="693" width="0.1012%" height="15" fill="rgb(215,173,21)"/><text x="12.2316%" y="703.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (36 samples, 0.10%)</title><rect x="11.9816%" y="677" width="0.1012%" height="15" fill="rgb(210,6,40)"/><text x="12.2316%" y="687.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (36 samples, 0.10%)</title><rect x="11.9816%" y="661" width="0.1012%" height="15" fill="rgb(212,48,18)"/><text x="12.2316%" y="671.50"></text></g><g><title>Unknown (36 samples, 0.10%)</title><rect x="11.9816%" y="645" width="0.1012%" height="15" fill="rgb(230,214,11)"/><text x="12.2316%" y="655.50"></text></g><g><title>_start (36 samples, 0.10%)</title><rect x="11.9816%" y="629" width="0.1012%" height="15" fill="rgb(254,105,39)"/><text x="12.2316%" y="639.50"></text></g><g><title>__libc_start_main (36 samples, 0.10%)</title><rect x="11.9816%" y="613" width="0.1012%" height="15" fill="rgb(245,158,5)"/><text x="12.2316%" y="623.50"></text></g><g><title>main (36 samples, 0.10%)</title><rect x="11.9816%" y="597" width="0.1012%" height="15" fill="rgb(249,208,11)"/><text x="12.2316%" y="607.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (36 samples, 0.10%)</title><rect x="11.9816%" y="581" width="0.1012%" height="15" fill="rgb(210,39,28)"/><text x="12.2316%" y="591.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (36 samples, 0.10%)</title><rect x="11.9816%" y="565" width="0.1012%" height="15" fill="rgb(211,56,53)"/><text x="12.2316%" y="575.50"></text></g><g><title>__rust_maybe_catch_panic (36 samples, 0.10%)</title><rect x="11.9816%" y="549" width="0.1012%" height="15" fill="rgb(226,201,30)"/><text x="12.2316%" y="559.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (36 samples, 0.10%)</title><rect x="11.9816%" y="533" width="0.1012%" height="15" fill="rgb(239,101,34)"/><text x="12.2316%" y="543.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (36 samples, 0.10%)</title><rect x="11.9816%" y="517" width="0.1012%" height="15" fill="rgb(226,209,5)"/><text x="12.2316%" y="527.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (36 samples, 0.10%)</title><rect x="11.9816%" y="501" width="0.1012%" height="15" fill="rgb(250,105,47)"/><text x="12.2316%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="11.9816%" y="485" width="0.1012%" height="15" fill="rgb(230,72,3)"/><text x="12.2316%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="11.9816%" y="469" width="0.1012%" height="15" fill="rgb(232,218,39)"/><text x="12.2316%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="11.9816%" y="453" width="0.1012%" height="15" fill="rgb(248,166,6)"/><text x="12.2316%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (36 samples, 0.10%)</title><rect x="11.9816%" y="437" width="0.1012%" height="15" fill="rgb(247,89,20)"/><text x="12.2316%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (36 samples, 0.10%)</title><rect x="11.9816%" y="421" width="0.1012%" height="15" fill="rgb(248,130,54)"/><text x="12.2316%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (36 samples, 0.10%)</title><rect x="11.9816%" y="405" width="0.1012%" height="15" fill="rgb(234,196,4)"/><text x="12.2316%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (36 samples, 0.10%)</title><rect x="11.9816%" y="389" width="0.1012%" height="15" fill="rgb(250,143,31)"/><text x="12.2316%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (36 samples, 0.10%)</title><rect x="11.9816%" y="869" width="0.1012%" height="15" fill="rgb(211,110,34)"/><text x="12.2316%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (36 samples, 0.10%)</title><rect x="11.9816%" y="853" width="0.1012%" height="15" fill="rgb(215,124,48)"/><text x="12.2316%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (36 samples, 0.10%)</title><rect x="11.9816%" y="837" width="0.1012%" height="15" fill="rgb(216,46,13)"/><text x="12.2316%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (128 samples, 0.36%)</title><rect x="12.0827%" y="373" width="0.3597%" height="15" fill="rgb(205,184,25)"/><text x="12.3327%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (128 samples, 0.36%)</title><rect x="12.0827%" y="357" width="0.3597%" height="15" fill="rgb(228,1,10)"/><text x="12.3327%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (128 samples, 0.36%)</title><rect x="12.0827%" y="341" width="0.3597%" height="15" fill="rgb(213,116,27)"/><text x="12.3327%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (128 samples, 0.36%)</title><rect x="12.0827%" y="325" width="0.3597%" height="15" fill="rgb(241,95,50)"/><text x="12.3327%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (128 samples, 0.36%)</title><rect x="12.0827%" y="309" width="0.3597%" height="15" fill="rgb(238,48,32)"/><text x="12.3327%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (128 samples, 0.36%)</title><rect x="12.0827%" y="293" width="0.3597%" height="15" fill="rgb(235,113,49)"/><text x="12.3327%" y="303.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (128 samples, 0.36%)</title><rect x="12.0827%" y="277" width="0.3597%" height="15" fill="rgb(205,127,43)"/><text x="12.3327%" y="287.50"></text></g><g><title>__rg_realloc (128 samples, 0.36%)</title><rect x="12.0827%" y="261" width="0.3597%" height="15" fill="rgb(250,162,2)"/><text x="12.3327%" y="271.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (128 samples, 0.36%)</title><rect x="12.0827%" y="245" width="0.3597%" height="15" fill="rgb(220,13,41)"/><text x="12.3327%" y="255.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (128 samples, 0.36%)</title><rect x="12.0827%" y="229" width="0.3597%" height="15" fill="rgb(249,221,25)"/><text x="12.3327%" y="239.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (128 samples, 0.36%)</title><rect x="12.0827%" y="213" width="0.3597%" height="15" fill="rgb(215,208,19)"/><text x="12.3327%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (132 samples, 0.37%)</title><rect x="12.0827%" y="821" width="0.3709%" height="15" fill="rgb(236,175,2)"/><text x="12.3327%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (132 samples, 0.37%)</title><rect x="12.0827%" y="805" width="0.3709%" height="15" fill="rgb(241,52,2)"/><text x="12.3327%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (132 samples, 0.37%)</title><rect x="12.0827%" y="789" width="0.3709%" height="15" fill="rgb(248,140,14)"/><text x="12.3327%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (132 samples, 0.37%)</title><rect x="12.0827%" y="773" width="0.3709%" height="15" fill="rgb(253,22,42)"/><text x="12.3327%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (132 samples, 0.37%)</title><rect x="12.0827%" y="757" width="0.3709%" height="15" fill="rgb(234,61,47)"/><text x="12.3327%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (132 samples, 0.37%)</title><rect x="12.0827%" y="741" width="0.3709%" height="15" fill="rgb(208,226,15)"/><text x="12.3327%" y="751.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (132 samples, 0.37%)</title><rect x="12.0827%" y="725" width="0.3709%" height="15" fill="rgb(217,221,4)"/><text x="12.3327%" y="735.50"></text></g><g><title>__rg_realloc (132 samples, 0.37%)</title><rect x="12.0827%" y="709" width="0.3709%" height="15" fill="rgb(212,174,34)"/><text x="12.3327%" y="719.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (132 samples, 0.37%)</title><rect x="12.0827%" y="693" width="0.3709%" height="15" fill="rgb(253,83,4)"/><text x="12.3327%" y="703.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (132 samples, 0.37%)</title><rect x="12.0827%" y="677" width="0.3709%" height="15" fill="rgb(250,195,49)"/><text x="12.3327%" y="687.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (132 samples, 0.37%)</title><rect x="12.0827%" y="661" width="0.3709%" height="15" fill="rgb(241,192,25)"/><text x="12.3327%" y="671.50"></text></g><g><title>Unknown (132 samples, 0.37%)</title><rect x="12.0827%" y="645" width="0.3709%" height="15" fill="rgb(208,124,10)"/><text x="12.3327%" y="655.50"></text></g><g><title>_start (132 samples, 0.37%)</title><rect x="12.0827%" y="629" width="0.3709%" height="15" fill="rgb(222,33,0)"/><text x="12.3327%" y="639.50"></text></g><g><title>__libc_start_main (132 samples, 0.37%)</title><rect x="12.0827%" y="613" width="0.3709%" height="15" fill="rgb(234,209,28)"/><text x="12.3327%" y="623.50"></text></g><g><title>main (132 samples, 0.37%)</title><rect x="12.0827%" y="597" width="0.3709%" height="15" fill="rgb(224,11,23)"/><text x="12.3327%" y="607.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (132 samples, 0.37%)</title><rect x="12.0827%" y="581" width="0.3709%" height="15" fill="rgb(232,99,1)"/><text x="12.3327%" y="591.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (132 samples, 0.37%)</title><rect x="12.0827%" y="565" width="0.3709%" height="15" fill="rgb(237,95,45)"/><text x="12.3327%" y="575.50"></text></g><g><title>__rust_maybe_catch_panic (132 samples, 0.37%)</title><rect x="12.0827%" y="549" width="0.3709%" height="15" fill="rgb(208,109,11)"/><text x="12.3327%" y="559.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (132 samples, 0.37%)</title><rect x="12.0827%" y="533" width="0.3709%" height="15" fill="rgb(216,190,48)"/><text x="12.3327%" y="543.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (132 samples, 0.37%)</title><rect x="12.0827%" y="517" width="0.3709%" height="15" fill="rgb(251,171,36)"/><text x="12.3327%" y="527.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (132 samples, 0.37%)</title><rect x="12.0827%" y="501" width="0.3709%" height="15" fill="rgb(230,62,22)"/><text x="12.3327%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (132 samples, 0.37%)</title><rect x="12.0827%" y="485" width="0.3709%" height="15" fill="rgb(225,114,35)"/><text x="12.3327%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (132 samples, 0.37%)</title><rect x="12.0827%" y="469" width="0.3709%" height="15" fill="rgb(215,118,42)"/><text x="12.3327%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (132 samples, 0.37%)</title><rect x="12.0827%" y="453" width="0.3709%" height="15" fill="rgb(243,119,21)"/><text x="12.3327%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (132 samples, 0.37%)</title><rect x="12.0827%" y="437" width="0.3709%" height="15" fill="rgb(252,177,53)"/><text x="12.3327%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (132 samples, 0.37%)</title><rect x="12.0827%" y="421" width="0.3709%" height="15" fill="rgb(237,209,29)"/><text x="12.3327%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (132 samples, 0.37%)</title><rect x="12.0827%" y="405" width="0.3709%" height="15" fill="rgb(212,65,23)"/><text x="12.3327%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (132 samples, 0.37%)</title><rect x="12.0827%" y="389" width="0.3709%" height="15" fill="rgb(230,222,46)"/><text x="12.3327%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (132 samples, 0.37%)</title><rect x="12.0827%" y="869" width="0.3709%" height="15" fill="rgb(215,135,32)"/><text x="12.3327%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (132 samples, 0.37%)</title><rect x="12.0827%" y="853" width="0.3709%" height="15" fill="rgb(246,101,22)"/><text x="12.3327%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (132 samples, 0.37%)</title><rect x="12.0827%" y="837" width="0.3709%" height="15" fill="rgb(206,107,13)"/><text x="12.3327%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h5b5906b74b21a74e (240 samples, 0.67%)</title><rect x="12.4536%" y="773" width="0.6744%" height="15" fill="rgb(250,100,44)"/><text x="12.7036%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ha0cdcc702f5dc9c1 (240 samples, 0.67%)</title><rect x="12.4536%" y="757" width="0.6744%" height="15" fill="rgb(231,147,38)"/><text x="12.7036%" y="767.50"></text></g><g><title>core::ptr::real_drop_in_place::h1cf8390ffe354c7f (240 samples, 0.67%)</title><rect x="12.4536%" y="741" width="0.6744%" height="15" fill="rgb(229,8,40)"/><text x="12.7036%" y="751.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop::he6982a417c2b7a08 (240 samples, 0.67%)</title><rect x="12.4536%" y="725" width="0.6744%" height="15" fill="rgb(221,135,30)"/><text x="12.7036%" y="735.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (240 samples, 0.67%)</title><rect x="12.4536%" y="709" width="0.6744%" height="15" fill="rgb(249,193,18)"/><text x="12.7036%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (240 samples, 0.67%)</title><rect x="12.4536%" y="693" width="0.6744%" height="15" fill="rgb(209,133,39)"/><text x="12.7036%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (240 samples, 0.67%)</title><rect x="12.4536%" y="677" width="0.6744%" height="15" fill="rgb(232,100,14)"/><text x="12.7036%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (240 samples, 0.67%)</title><rect x="12.4536%" y="661" width="0.6744%" height="15" fill="rgb(224,185,1)"/><text x="12.7036%" y="671.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (240 samples, 0.67%)</title><rect x="12.4536%" y="645" width="0.6744%" height="15" fill="rgb(223,139,8)"/><text x="12.7036%" y="655.50"></text></g><g><title>__rg_dealloc (240 samples, 0.67%)</title><rect x="12.4536%" y="629" width="0.6744%" height="15" fill="rgb(232,213,38)"/><text x="12.7036%" y="639.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (240 samples, 0.67%)</title><rect x="12.4536%" y="613" width="0.6744%" height="15" fill="rgb(207,94,22)"/><text x="12.7036%" y="623.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (240 samples, 0.67%)</title><rect x="12.4536%" y="597" width="0.6744%" height="15" fill="rgb(219,183,54)"/><text x="12.7036%" y="607.50"></text></g><g><title>Unknown (240 samples, 0.67%)</title><rect x="12.4536%" y="581" width="0.6744%" height="15" fill="rgb(216,185,54)"/><text x="12.7036%" y="591.50"></text></g><g><title>_start (240 samples, 0.67%)</title><rect x="12.4536%" y="565" width="0.6744%" height="15" fill="rgb(254,217,39)"/><text x="12.7036%" y="575.50"></text></g><g><title>__libc_start_main (240 samples, 0.67%)</title><rect x="12.4536%" y="549" width="0.6744%" height="15" fill="rgb(240,178,23)"/><text x="12.7036%" y="559.50"></text></g><g><title>main (240 samples, 0.67%)</title><rect x="12.4536%" y="533" width="0.6744%" height="15" fill="rgb(218,11,47)"/><text x="12.7036%" y="543.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (240 samples, 0.67%)</title><rect x="12.4536%" y="517" width="0.6744%" height="15" fill="rgb(218,51,51)"/><text x="12.7036%" y="527.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (240 samples, 0.67%)</title><rect x="12.4536%" y="501" width="0.6744%" height="15" fill="rgb(238,126,27)"/><text x="12.7036%" y="511.50"></text></g><g><title>__rust_maybe_catch_panic (240 samples, 0.67%)</title><rect x="12.4536%" y="485" width="0.6744%" height="15" fill="rgb(249,202,22)"/><text x="12.7036%" y="495.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (240 samples, 0.67%)</title><rect x="12.4536%" y="469" width="0.6744%" height="15" fill="rgb(254,195,49)"/><text x="12.7036%" y="479.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (240 samples, 0.67%)</title><rect x="12.4536%" y="453" width="0.6744%" height="15" fill="rgb(208,123,14)"/><text x="12.7036%" y="463.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (240 samples, 0.67%)</title><rect x="12.4536%" y="437" width="0.6744%" height="15" fill="rgb(224,200,8)"/><text x="12.7036%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (240 samples, 0.67%)</title><rect x="12.4536%" y="421" width="0.6744%" height="15" fill="rgb(217,61,36)"/><text x="12.7036%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (240 samples, 0.67%)</title><rect x="12.4536%" y="405" width="0.6744%" height="15" fill="rgb(206,35,45)"/><text x="12.7036%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (240 samples, 0.67%)</title><rect x="12.4536%" y="389" width="0.6744%" height="15" fill="rgb(217,65,33)"/><text x="12.7036%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (240 samples, 0.67%)</title><rect x="12.4536%" y="373" width="0.6744%" height="15" fill="rgb(222,158,48)"/><text x="12.7036%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (236 samples, 0.66%)</title><rect x="12.4649%" y="357" width="0.6631%" height="15" fill="rgb(254,2,54)"/><text x="12.7149%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (236 samples, 0.66%)</title><rect x="12.4649%" y="341" width="0.6631%" height="15" fill="rgb(250,143,38)"/><text x="12.7149%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (236 samples, 0.66%)</title><rect x="12.4649%" y="325" width="0.6631%" height="15" fill="rgb(248,25,0)"/><text x="12.7149%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (236 samples, 0.66%)</title><rect x="12.4649%" y="309" width="0.6631%" height="15" fill="rgb(206,152,27)"/><text x="12.7149%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (236 samples, 0.66%)</title><rect x="12.4649%" y="293" width="0.6631%" height="15" fill="rgb(240,77,30)"/><text x="12.7149%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (236 samples, 0.66%)</title><rect x="12.4649%" y="277" width="0.6631%" height="15" fill="rgb(231,5,3)"/><text x="12.7149%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (236 samples, 0.66%)</title><rect x="12.4649%" y="261" width="0.6631%" height="15" fill="rgb(207,226,32)"/><text x="12.7149%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (236 samples, 0.66%)</title><rect x="12.4649%" y="245" width="0.6631%" height="15" fill="rgb(222,207,47)"/><text x="12.7149%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc::h6cffe83be2bbe610 (236 samples, 0.66%)</title><rect x="12.4649%" y="229" width="0.6631%" height="15" fill="rgb(229,115,45)"/><text x="12.7149%" y="239.50"></text></g><g><title>alloc::alloc::alloc::hb992b77ffe933998 (236 samples, 0.66%)</title><rect x="12.4649%" y="213" width="0.6631%" height="15" fill="rgb(224,191,6)"/><text x="12.7149%" y="223.50"></text></g><g><title>__rg_alloc (236 samples, 0.66%)</title><rect x="12.4649%" y="197" width="0.6631%" height="15" fill="rgb(230,227,24)"/><text x="12.7149%" y="207.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (236 samples, 0.66%)</title><rect x="12.4649%" y="181" width="0.6631%" height="15" fill="rgb(228,80,19)"/><text x="12.7149%" y="191.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (236 samples, 0.66%)</title><rect x="12.4649%" y="165" width="0.6631%" height="15" fill="rgb(247,229,0)"/><text x="12.7149%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (288 samples, 0.81%)</title><rect x="12.4536%" y="869" width="0.8093%" height="15" fill="rgb(237,194,15)"/><text x="12.7036%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (288 samples, 0.81%)</title><rect x="12.4536%" y="853" width="0.8093%" height="15" fill="rgb(219,203,20)"/><text x="12.7036%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (288 samples, 0.81%)</title><rect x="12.4536%" y="837" width="0.8093%" height="15" fill="rgb(234,128,8)"/><text x="12.7036%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (288 samples, 0.81%)</title><rect x="12.4536%" y="821" width="0.8093%" height="15" fill="rgb(248,202,8)"/><text x="12.7036%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (288 samples, 0.81%)</title><rect x="12.4536%" y="805" width="0.8093%" height="15" fill="rgb(206,104,37)"/><text x="12.7036%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (288 samples, 0.81%)</title><rect x="12.4536%" y="789" width="0.8093%" height="15" fill="rgb(223,8,27)"/><text x="12.7036%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::h3dc055e1da02411d (48 samples, 0.13%)</title><rect x="13.1280%" y="773" width="0.1349%" height="15" fill="rgb(216,217,28)"/><text x="13.3780%" y="783.50"></text></g><g><title>core::ptr::real_drop_in_place::h1cf8390ffe354c7f (48 samples, 0.13%)</title><rect x="13.1280%" y="757" width="0.1349%" height="15" fill="rgb(249,199,1)"/><text x="13.3780%" y="767.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop::he6982a417c2b7a08 (48 samples, 0.13%)</title><rect x="13.1280%" y="741" width="0.1349%" height="15" fill="rgb(240,85,17)"/><text x="13.3780%" y="751.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (48 samples, 0.13%)</title><rect x="13.1280%" y="725" width="0.1349%" height="15" fill="rgb(206,108,45)"/><text x="13.3780%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (48 samples, 0.13%)</title><rect x="13.1280%" y="709" width="0.1349%" height="15" fill="rgb(245,210,41)"/><text x="13.3780%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (48 samples, 0.13%)</title><rect x="13.1280%" y="693" width="0.1349%" height="15" fill="rgb(206,13,37)"/><text x="13.3780%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (48 samples, 0.13%)</title><rect x="13.1280%" y="677" width="0.1349%" height="15" fill="rgb(250,61,18)"/><text x="13.3780%" y="687.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (48 samples, 0.13%)</title><rect x="13.1280%" y="661" width="0.1349%" height="15" fill="rgb(235,172,48)"/><text x="13.3780%" y="671.50"></text></g><g><title>__rg_dealloc (48 samples, 0.13%)</title><rect x="13.1280%" y="645" width="0.1349%" height="15" fill="rgb(249,201,17)"/><text x="13.3780%" y="655.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (48 samples, 0.13%)</title><rect x="13.1280%" y="629" width="0.1349%" height="15" fill="rgb(219,208,6)"/><text x="13.3780%" y="639.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (48 samples, 0.13%)</title><rect x="13.1280%" y="613" width="0.1349%" height="15" fill="rgb(248,31,23)"/><text x="13.3780%" y="623.50"></text></g><g><title>Unknown (48 samples, 0.13%)</title><rect x="13.1280%" y="597" width="0.1349%" height="15" fill="rgb(245,15,42)"/><text x="13.3780%" y="607.50"></text></g><g><title>_start (48 samples, 0.13%)</title><rect x="13.1280%" y="581" width="0.1349%" height="15" fill="rgb(222,217,39)"/><text x="13.3780%" y="591.50"></text></g><g><title>__libc_start_main (48 samples, 0.13%)</title><rect x="13.1280%" y="565" width="0.1349%" height="15" fill="rgb(210,219,27)"/><text x="13.3780%" y="575.50"></text></g><g><title>main (48 samples, 0.13%)</title><rect x="13.1280%" y="549" width="0.1349%" height="15" fill="rgb(252,166,36)"/><text x="13.3780%" y="559.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (48 samples, 0.13%)</title><rect x="13.1280%" y="533" width="0.1349%" height="15" fill="rgb(245,132,34)"/><text x="13.3780%" y="543.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (48 samples, 0.13%)</title><rect x="13.1280%" y="517" width="0.1349%" height="15" fill="rgb(236,54,3)"/><text x="13.3780%" y="527.50"></text></g><g><title>__rust_maybe_catch_panic (48 samples, 0.13%)</title><rect x="13.1280%" y="501" width="0.1349%" height="15" fill="rgb(241,173,43)"/><text x="13.3780%" y="511.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (48 samples, 0.13%)</title><rect x="13.1280%" y="485" width="0.1349%" height="15" fill="rgb(215,190,9)"/><text x="13.3780%" y="495.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (48 samples, 0.13%)</title><rect x="13.1280%" y="469" width="0.1349%" height="15" fill="rgb(242,101,16)"/><text x="13.3780%" y="479.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (48 samples, 0.13%)</title><rect x="13.1280%" y="453" width="0.1349%" height="15" fill="rgb(223,190,21)"/><text x="13.3780%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="13.1280%" y="437" width="0.1349%" height="15" fill="rgb(215,228,25)"/><text x="13.3780%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="13.1280%" y="421" width="0.1349%" height="15" fill="rgb(225,36,22)"/><text x="13.3780%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="13.1280%" y="405" width="0.1349%" height="15" fill="rgb(251,106,46)"/><text x="13.3780%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="13.1280%" y="389" width="0.1349%" height="15" fill="rgb(208,90,1)"/><text x="13.3780%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (48 samples, 0.13%)</title><rect x="13.1280%" y="373" width="0.1349%" height="15" fill="rgb(243,10,4)"/><text x="13.3780%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (48 samples, 0.13%)</title><rect x="13.1280%" y="357" width="0.1349%" height="15" fill="rgb(212,137,27)"/><text x="13.3780%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (48 samples, 0.13%)</title><rect x="13.1280%" y="341" width="0.1349%" height="15" fill="rgb(231,220,49)"/><text x="13.3780%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (48 samples, 0.13%)</title><rect x="13.1280%" y="325" width="0.1349%" height="15" fill="rgb(237,96,20)"/><text x="13.3780%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (48 samples, 0.13%)</title><rect x="13.1280%" y="309" width="0.1349%" height="15" fill="rgb(239,229,30)"/><text x="13.3780%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (48 samples, 0.13%)</title><rect x="13.1280%" y="293" width="0.1349%" height="15" fill="rgb(219,65,33)"/><text x="13.3780%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (48 samples, 0.13%)</title><rect x="13.1280%" y="277" width="0.1349%" height="15" fill="rgb(243,134,7)"/><text x="13.3780%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (48 samples, 0.13%)</title><rect x="13.1280%" y="261" width="0.1349%" height="15" fill="rgb(216,177,54)"/><text x="13.3780%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc::h6cffe83be2bbe610 (48 samples, 0.13%)</title><rect x="13.1280%" y="245" width="0.1349%" height="15" fill="rgb(211,160,20)"/><text x="13.3780%" y="255.50"></text></g><g><title>alloc::alloc::alloc::hb992b77ffe933998 (48 samples, 0.13%)</title><rect x="13.1280%" y="229" width="0.1349%" height="15" fill="rgb(239,85,39)"/><text x="13.3780%" y="239.50"></text></g><g><title>__rg_alloc (48 samples, 0.13%)</title><rect x="13.1280%" y="213" width="0.1349%" height="15" fill="rgb(232,125,22)"/><text x="13.3780%" y="223.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (48 samples, 0.13%)</title><rect x="13.1280%" y="197" width="0.1349%" height="15" fill="rgb(244,57,34)"/><text x="13.3780%" y="207.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (48 samples, 0.13%)</title><rect x="13.1280%" y="181" width="0.1349%" height="15" fill="rgb(214,203,32)"/><text x="13.3780%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (512 samples, 1.44%)</title><rect x="13.2629%" y="517" width="1.4387%" height="15" fill="rgb(207,58,43)"/><text x="13.5129%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (512 samples, 1.44%)</title><rect x="13.2629%" y="501" width="1.4387%" height="15" fill="rgb(215,193,15)"/><text x="13.5129%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (512 samples, 1.44%)</title><rect x="13.2629%" y="485" width="1.4387%" height="15" fill="rgb(232,15,44)"/><text x="13.5129%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (512 samples, 1.44%)</title><rect x="13.2629%" y="469" width="1.4387%" height="15" fill="rgb(212,3,48)"/><text x="13.5129%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (512 samples, 1.44%)</title><rect x="13.2629%" y="453" width="1.4387%" height="15" fill="rgb(218,128,7)"/><text x="13.5129%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (512 samples, 1.44%)</title><rect x="13.2629%" y="437" width="1.4387%" height="15" fill="rgb(226,216,39)"/><text x="13.5129%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (512 samples, 1.44%)</title><rect x="13.2629%" y="421" width="1.4387%" height="15" fill="rgb(243,47,51)"/><text x="13.5129%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (512 samples, 1.44%)</title><rect x="13.2629%" y="405" width="1.4387%" height="15" fill="rgb(241,183,40)"/><text x="13.5129%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (512 samples, 1.44%)</title><rect x="13.2629%" y="389" width="1.4387%" height="15" fill="rgb(231,217,32)"/><text x="13.5129%" y="399.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (512 samples, 1.44%)</title><rect x="13.2629%" y="373" width="1.4387%" height="15" fill="rgb(229,61,38)"/><text x="13.5129%" y="383.50"></text></g><g><title>__rg_realloc (512 samples, 1.44%)</title><rect x="13.2629%" y="357" width="1.4387%" height="15" fill="rgb(225,210,5)"/><text x="13.5129%" y="367.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (512 samples, 1.44%)</title><rect x="13.2629%" y="341" width="1.4387%" height="15" fill="rgb(231,79,45)"/><text x="13.5129%" y="351.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (512 samples, 1.44%)</title><rect x="13.2629%" y="325" width="1.4387%" height="15" fill="rgb(224,100,7)"/><text x="13.5129%" y="335.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (512 samples, 1.44%)</title><rect x="13.2629%" y="309" width="1.4387%" height="15" fill="rgb(241,198,18)"/><text x="13.5129%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (3,308 samples, 9.30%)</title><rect x="5.7660%" y="885" width="9.2953%" height="15" fill="rgb(252,97,53)"/><text x="6.0160%" y="895.50">alloc_free::q..</text></g><g><title>core::ptr::real_drop_in_place::h065749e7cfc69f30 (640 samples, 1.80%)</title><rect x="13.2629%" y="869" width="1.7984%" height="15" fill="rgb(220,88,7)"/><text x="13.5129%" y="879.50">c..</text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (640 samples, 1.80%)</title><rect x="13.2629%" y="853" width="1.7984%" height="15" fill="rgb(213,176,14)"/><text x="13.5129%" y="863.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (640 samples, 1.80%)</title><rect x="13.2629%" y="837" width="1.7984%" height="15" fill="rgb(246,73,7)"/><text x="13.5129%" y="847.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (640 samples, 1.80%)</title><rect x="13.2629%" y="821" width="1.7984%" height="15" fill="rgb(245,64,36)"/><text x="13.5129%" y="831.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (640 samples, 1.80%)</title><rect x="13.2629%" y="805" width="1.7984%" height="15" fill="rgb(245,80,10)"/><text x="13.5129%" y="815.50">&lt;..</text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (640 samples, 1.80%)</title><rect x="13.2629%" y="789" width="1.7984%" height="15" fill="rgb(232,107,50)"/><text x="13.5129%" y="799.50">a..</text></g><g><title>__rg_dealloc (640 samples, 1.80%)</title><rect x="13.2629%" y="773" width="1.7984%" height="15" fill="rgb(253,3,0)"/><text x="13.5129%" y="783.50">_..</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (640 samples, 1.80%)</title><rect x="13.2629%" y="757" width="1.7984%" height="15" fill="rgb(212,99,53)"/><text x="13.5129%" y="767.50">&lt;..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (640 samples, 1.80%)</title><rect x="13.2629%" y="741" width="1.7984%" height="15" fill="rgb(249,111,54)"/><text x="13.5129%" y="751.50">c..</text></g><g><title>Unknown (640 samples, 1.80%)</title><rect x="13.2629%" y="725" width="1.7984%" height="15" fill="rgb(249,55,30)"/><text x="13.5129%" y="735.50">U..</text></g><g><title>_start (640 samples, 1.80%)</title><rect x="13.2629%" y="709" width="1.7984%" height="15" fill="rgb(237,47,42)"/><text x="13.5129%" y="719.50">_..</text></g><g><title>__libc_start_main (640 samples, 1.80%)</title><rect x="13.2629%" y="693" width="1.7984%" height="15" fill="rgb(211,20,18)"/><text x="13.5129%" y="703.50">_..</text></g><g><title>main (640 samples, 1.80%)</title><rect x="13.2629%" y="677" width="1.7984%" height="15" fill="rgb(231,203,46)"/><text x="13.5129%" y="687.50">m..</text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (640 samples, 1.80%)</title><rect x="13.2629%" y="661" width="1.7984%" height="15" fill="rgb(237,142,3)"/><text x="13.5129%" y="671.50">s..</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (640 samples, 1.80%)</title><rect x="13.2629%" y="645" width="1.7984%" height="15" fill="rgb(241,107,1)"/><text x="13.5129%" y="655.50">s..</text></g><g><title>__rust_maybe_catch_panic (640 samples, 1.80%)</title><rect x="13.2629%" y="629" width="1.7984%" height="15" fill="rgb(229,83,13)"/><text x="13.5129%" y="639.50">_..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (640 samples, 1.80%)</title><rect x="13.2629%" y="613" width="1.7984%" height="15" fill="rgb(241,91,40)"/><text x="13.5129%" y="623.50">s..</text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (640 samples, 1.80%)</title><rect x="13.2629%" y="597" width="1.7984%" height="15" fill="rgb(225,3,45)"/><text x="13.5129%" y="607.50">s..</text></g><g><title>alloc_free::main::h77183791c68e94c3 (640 samples, 1.80%)</title><rect x="13.2629%" y="581" width="1.7984%" height="15" fill="rgb(244,223,14)"/><text x="13.5129%" y="591.50">a..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (640 samples, 1.80%)</title><rect x="13.2629%" y="565" width="1.7984%" height="15" fill="rgb(224,124,37)"/><text x="13.5129%" y="575.50">a..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (640 samples, 1.80%)</title><rect x="13.2629%" y="549" width="1.7984%" height="15" fill="rgb(251,171,30)"/><text x="13.5129%" y="559.50">a..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (640 samples, 1.80%)</title><rect x="13.2629%" y="533" width="1.7984%" height="15" fill="rgb(236,46,54)"/><text x="13.5129%" y="543.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (128 samples, 0.36%)</title><rect x="14.7016%" y="517" width="0.3597%" height="15" fill="rgb(245,213,5)"/><text x="14.9516%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (128 samples, 0.36%)</title><rect x="14.7016%" y="501" width="0.3597%" height="15" fill="rgb(230,144,27)"/><text x="14.9516%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (128 samples, 0.36%)</title><rect x="14.7016%" y="485" width="0.3597%" height="15" fill="rgb(220,86,6)"/><text x="14.9516%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (128 samples, 0.36%)</title><rect x="14.7016%" y="469" width="0.3597%" height="15" fill="rgb(240,20,13)"/><text x="14.9516%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (128 samples, 0.36%)</title><rect x="14.7016%" y="453" width="0.3597%" height="15" fill="rgb(217,89,34)"/><text x="14.9516%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (128 samples, 0.36%)</title><rect x="14.7016%" y="437" width="0.3597%" height="15" fill="rgb(229,13,5)"/><text x="14.9516%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (128 samples, 0.36%)</title><rect x="14.7016%" y="421" width="0.3597%" height="15" fill="rgb(244,67,35)"/><text x="14.9516%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (128 samples, 0.36%)</title><rect x="14.7016%" y="405" width="0.3597%" height="15" fill="rgb(221,40,2)"/><text x="14.9516%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (128 samples, 0.36%)</title><rect x="14.7016%" y="389" width="0.3597%" height="15" fill="rgb(237,157,21)"/><text x="14.9516%" y="399.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (128 samples, 0.36%)</title><rect x="14.7016%" y="373" width="0.3597%" height="15" fill="rgb(222,94,11)"/><text x="14.9516%" y="383.50"></text></g><g><title>__rg_realloc (128 samples, 0.36%)</title><rect x="14.7016%" y="357" width="0.3597%" height="15" fill="rgb(249,113,6)"/><text x="14.9516%" y="367.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (128 samples, 0.36%)</title><rect x="14.7016%" y="341" width="0.3597%" height="15" fill="rgb(238,137,36)"/><text x="14.9516%" y="351.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (128 samples, 0.36%)</title><rect x="14.7016%" y="325" width="0.3597%" height="15" fill="rgb(210,102,26)"/><text x="14.9516%" y="335.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (128 samples, 0.36%)</title><rect x="14.7016%" y="309" width="0.3597%" height="15" fill="rgb(218,30,30)"/><text x="14.9516%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (256 samples, 0.72%)</title><rect x="15.0613%" y="405" width="0.7193%" height="15" fill="rgb(214,67,26)"/><text x="15.3113%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (256 samples, 0.72%)</title><rect x="15.0613%" y="389" width="0.7193%" height="15" fill="rgb(251,9,53)"/><text x="15.3113%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (256 samples, 0.72%)</title><rect x="15.0613%" y="373" width="0.7193%" height="15" fill="rgb(228,204,25)"/><text x="15.3113%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (256 samples, 0.72%)</title><rect x="15.0613%" y="357" width="0.7193%" height="15" fill="rgb(207,153,8)"/><text x="15.3113%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (256 samples, 0.72%)</title><rect x="15.0613%" y="341" width="0.7193%" height="15" fill="rgb(242,9,16)"/><text x="15.3113%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (256 samples, 0.72%)</title><rect x="15.0613%" y="325" width="0.7193%" height="15" fill="rgb(217,211,10)"/><text x="15.3113%" y="335.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (256 samples, 0.72%)</title><rect x="15.0613%" y="309" width="0.7193%" height="15" fill="rgb(219,228,52)"/><text x="15.3113%" y="319.50"></text></g><g><title>__rg_realloc (256 samples, 0.72%)</title><rect x="15.0613%" y="293" width="0.7193%" height="15" fill="rgb(231,92,29)"/><text x="15.3113%" y="303.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (256 samples, 0.72%)</title><rect x="15.0613%" y="277" width="0.7193%" height="15" fill="rgb(232,8,23)"/><text x="15.3113%" y="287.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (256 samples, 0.72%)</title><rect x="15.0613%" y="261" width="0.7193%" height="15" fill="rgb(216,211,34)"/><text x="15.3113%" y="271.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (256 samples, 0.72%)</title><rect x="15.0613%" y="245" width="0.7193%" height="15" fill="rgb(236,151,0)"/><text x="15.3113%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (260 samples, 0.73%)</title><rect x="15.0613%" y="837" width="0.7306%" height="15" fill="rgb(209,168,3)"/><text x="15.3113%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (260 samples, 0.73%)</title><rect x="15.0613%" y="821" width="0.7306%" height="15" fill="rgb(208,129,28)"/><text x="15.3113%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (260 samples, 0.73%)</title><rect x="15.0613%" y="805" width="0.7306%" height="15" fill="rgb(229,78,22)"/><text x="15.3113%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (260 samples, 0.73%)</title><rect x="15.0613%" y="789" width="0.7306%" height="15" fill="rgb(228,187,13)"/><text x="15.3113%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (260 samples, 0.73%)</title><rect x="15.0613%" y="773" width="0.7306%" height="15" fill="rgb(240,119,24)"/><text x="15.3113%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (260 samples, 0.73%)</title><rect x="15.0613%" y="757" width="0.7306%" height="15" fill="rgb(209,194,42)"/><text x="15.3113%" y="767.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (260 samples, 0.73%)</title><rect x="15.0613%" y="741" width="0.7306%" height="15" fill="rgb(247,200,46)"/><text x="15.3113%" y="751.50"></text></g><g><title>__rg_realloc (260 samples, 0.73%)</title><rect x="15.0613%" y="725" width="0.7306%" height="15" fill="rgb(218,76,16)"/><text x="15.3113%" y="735.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (260 samples, 0.73%)</title><rect x="15.0613%" y="709" width="0.7306%" height="15" fill="rgb(225,21,48)"/><text x="15.3113%" y="719.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (260 samples, 0.73%)</title><rect x="15.0613%" y="693" width="0.7306%" height="15" fill="rgb(239,223,50)"/><text x="15.3113%" y="703.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (260 samples, 0.73%)</title><rect x="15.0613%" y="677" width="0.7306%" height="15" fill="rgb(244,45,21)"/><text x="15.3113%" y="687.50"></text></g><g><title>Unknown (260 samples, 0.73%)</title><rect x="15.0613%" y="661" width="0.7306%" height="15" fill="rgb(232,33,43)"/><text x="15.3113%" y="671.50"></text></g><g><title>_start (260 samples, 0.73%)</title><rect x="15.0613%" y="645" width="0.7306%" height="15" fill="rgb(209,8,3)"/><text x="15.3113%" y="655.50"></text></g><g><title>__libc_start_main (260 samples, 0.73%)</title><rect x="15.0613%" y="629" width="0.7306%" height="15" fill="rgb(214,25,53)"/><text x="15.3113%" y="639.50"></text></g><g><title>main (260 samples, 0.73%)</title><rect x="15.0613%" y="613" width="0.7306%" height="15" fill="rgb(254,186,54)"/><text x="15.3113%" y="623.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (260 samples, 0.73%)</title><rect x="15.0613%" y="597" width="0.7306%" height="15" fill="rgb(208,174,49)"/><text x="15.3113%" y="607.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (260 samples, 0.73%)</title><rect x="15.0613%" y="581" width="0.7306%" height="15" fill="rgb(233,191,51)"/><text x="15.3113%" y="591.50"></text></g><g><title>__rust_maybe_catch_panic (260 samples, 0.73%)</title><rect x="15.0613%" y="565" width="0.7306%" height="15" fill="rgb(222,134,10)"/><text x="15.3113%" y="575.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (260 samples, 0.73%)</title><rect x="15.0613%" y="549" width="0.7306%" height="15" fill="rgb(230,226,20)"/><text x="15.3113%" y="559.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (260 samples, 0.73%)</title><rect x="15.0613%" y="533" width="0.7306%" height="15" fill="rgb(251,111,25)"/><text x="15.3113%" y="543.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (260 samples, 0.73%)</title><rect x="15.0613%" y="517" width="0.7306%" height="15" fill="rgb(224,40,46)"/><text x="15.3113%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (260 samples, 0.73%)</title><rect x="15.0613%" y="501" width="0.7306%" height="15" fill="rgb(236,108,47)"/><text x="15.3113%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (260 samples, 0.73%)</title><rect x="15.0613%" y="485" width="0.7306%" height="15" fill="rgb(234,93,0)"/><text x="15.3113%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (260 samples, 0.73%)</title><rect x="15.0613%" y="469" width="0.7306%" height="15" fill="rgb(224,213,32)"/><text x="15.3113%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (260 samples, 0.73%)</title><rect x="15.0613%" y="453" width="0.7306%" height="15" fill="rgb(251,11,48)"/><text x="15.3113%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (260 samples, 0.73%)</title><rect x="15.0613%" y="437" width="0.7306%" height="15" fill="rgb(236,173,5)"/><text x="15.3113%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (260 samples, 0.73%)</title><rect x="15.0613%" y="421" width="0.7306%" height="15" fill="rgb(230,95,12)"/><text x="15.3113%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (260 samples, 0.73%)</title><rect x="15.0613%" y="885" width="0.7306%" height="15" fill="rgb(232,209,1)"/><text x="15.3113%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (260 samples, 0.73%)</title><rect x="15.0613%" y="869" width="0.7306%" height="15" fill="rgb(232,6,1)"/><text x="15.3113%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (260 samples, 0.73%)</title><rect x="15.0613%" y="853" width="0.7306%" height="15" fill="rgb(210,224,50)"/><text x="15.3113%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (64 samples, 0.18%)</title><rect x="15.7918%" y="405" width="0.1798%" height="15" fill="rgb(228,127,35)"/><text x="16.0418%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (64 samples, 0.18%)</title><rect x="15.7918%" y="389" width="0.1798%" height="15" fill="rgb(245,102,45)"/><text x="16.0418%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (64 samples, 0.18%)</title><rect x="15.7918%" y="373" width="0.1798%" height="15" fill="rgb(214,1,49)"/><text x="16.0418%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (64 samples, 0.18%)</title><rect x="15.7918%" y="357" width="0.1798%" height="15" fill="rgb(226,163,40)"/><text x="16.0418%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (64 samples, 0.18%)</title><rect x="15.7918%" y="341" width="0.1798%" height="15" fill="rgb(239,212,28)"/><text x="16.0418%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (64 samples, 0.18%)</title><rect x="15.7918%" y="325" width="0.1798%" height="15" fill="rgb(220,20,13)"/><text x="16.0418%" y="335.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (64 samples, 0.18%)</title><rect x="15.7918%" y="309" width="0.1798%" height="15" fill="rgb(210,164,35)"/><text x="16.0418%" y="319.50"></text></g><g><title>__rg_realloc (64 samples, 0.18%)</title><rect x="15.7918%" y="293" width="0.1798%" height="15" fill="rgb(248,109,41)"/><text x="16.0418%" y="303.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (64 samples, 0.18%)</title><rect x="15.7918%" y="277" width="0.1798%" height="15" fill="rgb(238,23,50)"/><text x="16.0418%" y="287.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (64 samples, 0.18%)</title><rect x="15.7918%" y="261" width="0.1798%" height="15" fill="rgb(211,48,49)"/><text x="16.0418%" y="271.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (64 samples, 0.18%)</title><rect x="15.7918%" y="245" width="0.1798%" height="15" fill="rgb(223,36,21)"/><text x="16.0418%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (68 samples, 0.19%)</title><rect x="15.7918%" y="837" width="0.1911%" height="15" fill="rgb(207,123,46)"/><text x="16.0418%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (68 samples, 0.19%)</title><rect x="15.7918%" y="821" width="0.1911%" height="15" fill="rgb(240,218,32)"/><text x="16.0418%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (68 samples, 0.19%)</title><rect x="15.7918%" y="805" width="0.1911%" height="15" fill="rgb(252,5,43)"/><text x="16.0418%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (68 samples, 0.19%)</title><rect x="15.7918%" y="789" width="0.1911%" height="15" fill="rgb(252,84,19)"/><text x="16.0418%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (68 samples, 0.19%)</title><rect x="15.7918%" y="773" width="0.1911%" height="15" fill="rgb(243,152,39)"/><text x="16.0418%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (68 samples, 0.19%)</title><rect x="15.7918%" y="757" width="0.1911%" height="15" fill="rgb(234,160,15)"/><text x="16.0418%" y="767.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (68 samples, 0.19%)</title><rect x="15.7918%" y="741" width="0.1911%" height="15" fill="rgb(237,34,20)"/><text x="16.0418%" y="751.50"></text></g><g><title>__rg_realloc (68 samples, 0.19%)</title><rect x="15.7918%" y="725" width="0.1911%" height="15" fill="rgb(229,97,13)"/><text x="16.0418%" y="735.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (68 samples, 0.19%)</title><rect x="15.7918%" y="709" width="0.1911%" height="15" fill="rgb(234,71,50)"/><text x="16.0418%" y="719.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (68 samples, 0.19%)</title><rect x="15.7918%" y="693" width="0.1911%" height="15" fill="rgb(253,155,4)"/><text x="16.0418%" y="703.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (68 samples, 0.19%)</title><rect x="15.7918%" y="677" width="0.1911%" height="15" fill="rgb(222,185,37)"/><text x="16.0418%" y="687.50"></text></g><g><title>Unknown (68 samples, 0.19%)</title><rect x="15.7918%" y="661" width="0.1911%" height="15" fill="rgb(251,177,13)"/><text x="16.0418%" y="671.50"></text></g><g><title>_start (68 samples, 0.19%)</title><rect x="15.7918%" y="645" width="0.1911%" height="15" fill="rgb(250,179,40)"/><text x="16.0418%" y="655.50"></text></g><g><title>__libc_start_main (68 samples, 0.19%)</title><rect x="15.7918%" y="629" width="0.1911%" height="15" fill="rgb(242,44,2)"/><text x="16.0418%" y="639.50"></text></g><g><title>main (68 samples, 0.19%)</title><rect x="15.7918%" y="613" width="0.1911%" height="15" fill="rgb(216,177,13)"/><text x="16.0418%" y="623.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (68 samples, 0.19%)</title><rect x="15.7918%" y="597" width="0.1911%" height="15" fill="rgb(216,106,43)"/><text x="16.0418%" y="607.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (68 samples, 0.19%)</title><rect x="15.7918%" y="581" width="0.1911%" height="15" fill="rgb(216,183,2)"/><text x="16.0418%" y="591.50"></text></g><g><title>__rust_maybe_catch_panic (68 samples, 0.19%)</title><rect x="15.7918%" y="565" width="0.1911%" height="15" fill="rgb(249,75,3)"/><text x="16.0418%" y="575.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (68 samples, 0.19%)</title><rect x="15.7918%" y="549" width="0.1911%" height="15" fill="rgb(219,67,39)"/><text x="16.0418%" y="559.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (68 samples, 0.19%)</title><rect x="15.7918%" y="533" width="0.1911%" height="15" fill="rgb(253,228,2)"/><text x="16.0418%" y="543.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (68 samples, 0.19%)</title><rect x="15.7918%" y="517" width="0.1911%" height="15" fill="rgb(235,138,27)"/><text x="16.0418%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (68 samples, 0.19%)</title><rect x="15.7918%" y="501" width="0.1911%" height="15" fill="rgb(236,97,51)"/><text x="16.0418%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (68 samples, 0.19%)</title><rect x="15.7918%" y="485" width="0.1911%" height="15" fill="rgb(240,80,30)"/><text x="16.0418%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (68 samples, 0.19%)</title><rect x="15.7918%" y="469" width="0.1911%" height="15" fill="rgb(230,178,19)"/><text x="16.0418%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (68 samples, 0.19%)</title><rect x="15.7918%" y="453" width="0.1911%" height="15" fill="rgb(210,190,27)"/><text x="16.0418%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (68 samples, 0.19%)</title><rect x="15.7918%" y="437" width="0.1911%" height="15" fill="rgb(222,107,31)"/><text x="16.0418%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (68 samples, 0.19%)</title><rect x="15.7918%" y="421" width="0.1911%" height="15" fill="rgb(216,127,34)"/><text x="16.0418%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (68 samples, 0.19%)</title><rect x="15.7918%" y="885" width="0.1911%" height="15" fill="rgb(234,116,52)"/><text x="16.0418%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (68 samples, 0.19%)</title><rect x="15.7918%" y="869" width="0.1911%" height="15" fill="rgb(222,124,15)"/><text x="16.0418%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (68 samples, 0.19%)</title><rect x="15.7918%" y="853" width="0.1911%" height="15" fill="rgb(231,179,28)"/><text x="16.0418%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h5b5906b74b21a74e (120 samples, 0.34%)</title><rect x="15.9829%" y="789" width="0.3372%" height="15" fill="rgb(226,93,45)"/><text x="16.2329%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ha0cdcc702f5dc9c1 (120 samples, 0.34%)</title><rect x="15.9829%" y="773" width="0.3372%" height="15" fill="rgb(215,8,51)"/><text x="16.2329%" y="783.50"></text></g><g><title>core::ptr::real_drop_in_place::h1cf8390ffe354c7f (120 samples, 0.34%)</title><rect x="15.9829%" y="757" width="0.3372%" height="15" fill="rgb(223,106,5)"/><text x="16.2329%" y="767.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop::he6982a417c2b7a08 (120 samples, 0.34%)</title><rect x="15.9829%" y="741" width="0.3372%" height="15" fill="rgb(250,191,5)"/><text x="16.2329%" y="751.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (120 samples, 0.34%)</title><rect x="15.9829%" y="725" width="0.3372%" height="15" fill="rgb(242,132,44)"/><text x="16.2329%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (120 samples, 0.34%)</title><rect x="15.9829%" y="709" width="0.3372%" height="15" fill="rgb(251,152,29)"/><text x="16.2329%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (120 samples, 0.34%)</title><rect x="15.9829%" y="693" width="0.3372%" height="15" fill="rgb(218,179,5)"/><text x="16.2329%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (120 samples, 0.34%)</title><rect x="15.9829%" y="677" width="0.3372%" height="15" fill="rgb(227,67,19)"/><text x="16.2329%" y="687.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (120 samples, 0.34%)</title><rect x="15.9829%" y="661" width="0.3372%" height="15" fill="rgb(233,119,31)"/><text x="16.2329%" y="671.50"></text></g><g><title>__rg_dealloc (120 samples, 0.34%)</title><rect x="15.9829%" y="645" width="0.3372%" height="15" fill="rgb(241,120,22)"/><text x="16.2329%" y="655.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (120 samples, 0.34%)</title><rect x="15.9829%" y="629" width="0.3372%" height="15" fill="rgb(224,102,30)"/><text x="16.2329%" y="639.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (120 samples, 0.34%)</title><rect x="15.9829%" y="613" width="0.3372%" height="15" fill="rgb(210,164,37)"/><text x="16.2329%" y="623.50"></text></g><g><title>Unknown (120 samples, 0.34%)</title><rect x="15.9829%" y="597" width="0.3372%" height="15" fill="rgb(226,191,16)"/><text x="16.2329%" y="607.50"></text></g><g><title>_start (120 samples, 0.34%)</title><rect x="15.9829%" y="581" width="0.3372%" height="15" fill="rgb(214,40,45)"/><text x="16.2329%" y="591.50"></text></g><g><title>__libc_start_main (120 samples, 0.34%)</title><rect x="15.9829%" y="565" width="0.3372%" height="15" fill="rgb(244,29,26)"/><text x="16.2329%" y="575.50"></text></g><g><title>main (120 samples, 0.34%)</title><rect x="15.9829%" y="549" width="0.3372%" height="15" fill="rgb(216,16,5)"/><text x="16.2329%" y="559.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (120 samples, 0.34%)</title><rect x="15.9829%" y="533" width="0.3372%" height="15" fill="rgb(249,76,35)"/><text x="16.2329%" y="543.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (120 samples, 0.34%)</title><rect x="15.9829%" y="517" width="0.3372%" height="15" fill="rgb(207,11,44)"/><text x="16.2329%" y="527.50"></text></g><g><title>__rust_maybe_catch_panic (120 samples, 0.34%)</title><rect x="15.9829%" y="501" width="0.3372%" height="15" fill="rgb(228,190,49)"/><text x="16.2329%" y="511.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (120 samples, 0.34%)</title><rect x="15.9829%" y="485" width="0.3372%" height="15" fill="rgb(214,173,12)"/><text x="16.2329%" y="495.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (120 samples, 0.34%)</title><rect x="15.9829%" y="469" width="0.3372%" height="15" fill="rgb(218,26,35)"/><text x="16.2329%" y="479.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (120 samples, 0.34%)</title><rect x="15.9829%" y="453" width="0.3372%" height="15" fill="rgb(220,200,19)"/><text x="16.2329%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (120 samples, 0.34%)</title><rect x="15.9829%" y="437" width="0.3372%" height="15" fill="rgb(239,95,49)"/><text x="16.2329%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (120 samples, 0.34%)</title><rect x="15.9829%" y="421" width="0.3372%" height="15" fill="rgb(235,85,53)"/><text x="16.2329%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (120 samples, 0.34%)</title><rect x="15.9829%" y="405" width="0.3372%" height="15" fill="rgb(233,133,31)"/><text x="16.2329%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (116 samples, 0.33%)</title><rect x="15.9942%" y="389" width="0.3260%" height="15" fill="rgb(218,25,20)"/><text x="16.2442%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (116 samples, 0.33%)</title><rect x="15.9942%" y="373" width="0.3260%" height="15" fill="rgb(252,210,38)"/><text x="16.2442%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (116 samples, 0.33%)</title><rect x="15.9942%" y="357" width="0.3260%" height="15" fill="rgb(242,134,21)"/><text x="16.2442%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (116 samples, 0.33%)</title><rect x="15.9942%" y="341" width="0.3260%" height="15" fill="rgb(213,28,48)"/><text x="16.2442%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (116 samples, 0.33%)</title><rect x="15.9942%" y="325" width="0.3260%" height="15" fill="rgb(250,196,2)"/><text x="16.2442%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (116 samples, 0.33%)</title><rect x="15.9942%" y="309" width="0.3260%" height="15" fill="rgb(227,5,17)"/><text x="16.2442%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (116 samples, 0.33%)</title><rect x="15.9942%" y="293" width="0.3260%" height="15" fill="rgb(221,226,24)"/><text x="16.2442%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (116 samples, 0.33%)</title><rect x="15.9942%" y="277" width="0.3260%" height="15" fill="rgb(211,5,48)"/><text x="16.2442%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc::h6cffe83be2bbe610 (116 samples, 0.33%)</title><rect x="15.9942%" y="261" width="0.3260%" height="15" fill="rgb(219,150,6)"/><text x="16.2442%" y="271.50"></text></g><g><title>alloc::alloc::alloc::hb992b77ffe933998 (116 samples, 0.33%)</title><rect x="15.9942%" y="245" width="0.3260%" height="15" fill="rgb(251,46,16)"/><text x="16.2442%" y="255.50"></text></g><g><title>__rg_alloc (116 samples, 0.33%)</title><rect x="15.9942%" y="229" width="0.3260%" height="15" fill="rgb(220,204,40)"/><text x="16.2442%" y="239.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (116 samples, 0.33%)</title><rect x="15.9942%" y="213" width="0.3260%" height="15" fill="rgb(211,85,2)"/><text x="16.2442%" y="223.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (116 samples, 0.33%)</title><rect x="15.9942%" y="197" width="0.3260%" height="15" fill="rgb(229,17,7)"/><text x="16.2442%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (408 samples, 1.15%)</title><rect x="15.9829%" y="885" width="1.1465%" height="15" fill="rgb(239,72,28)"/><text x="16.2329%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (408 samples, 1.15%)</title><rect x="15.9829%" y="869" width="1.1465%" height="15" fill="rgb(230,47,54)"/><text x="16.2329%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (408 samples, 1.15%)</title><rect x="15.9829%" y="853" width="1.1465%" height="15" fill="rgb(214,50,8)"/><text x="16.2329%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (408 samples, 1.15%)</title><rect x="15.9829%" y="837" width="1.1465%" height="15" fill="rgb(216,198,43)"/><text x="16.2329%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (408 samples, 1.15%)</title><rect x="15.9829%" y="821" width="1.1465%" height="15" fill="rgb(234,20,35)"/><text x="16.2329%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (408 samples, 1.15%)</title><rect x="15.9829%" y="805" width="1.1465%" height="15" fill="rgb(254,45,19)"/><text x="16.2329%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::h3dc055e1da02411d (288 samples, 0.81%)</title><rect x="16.3201%" y="789" width="0.8093%" height="15" fill="rgb(219,14,44)"/><text x="16.5701%" y="799.50"></text></g><g><title>core::ptr::real_drop_in_place::h1cf8390ffe354c7f (288 samples, 0.81%)</title><rect x="16.3201%" y="773" width="0.8093%" height="15" fill="rgb(217,220,26)"/><text x="16.5701%" y="783.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop::he6982a417c2b7a08 (288 samples, 0.81%)</title><rect x="16.3201%" y="757" width="0.8093%" height="15" fill="rgb(213,158,28)"/><text x="16.5701%" y="767.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (288 samples, 0.81%)</title><rect x="16.3201%" y="741" width="0.8093%" height="15" fill="rgb(252,51,52)"/><text x="16.5701%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (288 samples, 0.81%)</title><rect x="16.3201%" y="725" width="0.8093%" height="15" fill="rgb(246,89,16)"/><text x="16.5701%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (288 samples, 0.81%)</title><rect x="16.3201%" y="709" width="0.8093%" height="15" fill="rgb(216,158,49)"/><text x="16.5701%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (288 samples, 0.81%)</title><rect x="16.3201%" y="693" width="0.8093%" height="15" fill="rgb(236,107,19)"/><text x="16.5701%" y="703.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (288 samples, 0.81%)</title><rect x="16.3201%" y="677" width="0.8093%" height="15" fill="rgb(228,185,30)"/><text x="16.5701%" y="687.50"></text></g><g><title>__rg_dealloc (288 samples, 0.81%)</title><rect x="16.3201%" y="661" width="0.8093%" height="15" fill="rgb(246,134,8)"/><text x="16.5701%" y="671.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (288 samples, 0.81%)</title><rect x="16.3201%" y="645" width="0.8093%" height="15" fill="rgb(214,143,50)"/><text x="16.5701%" y="655.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (288 samples, 0.81%)</title><rect x="16.3201%" y="629" width="0.8093%" height="15" fill="rgb(228,75,8)"/><text x="16.5701%" y="639.50"></text></g><g><title>Unknown (288 samples, 0.81%)</title><rect x="16.3201%" y="613" width="0.8093%" height="15" fill="rgb(207,175,4)"/><text x="16.5701%" y="623.50"></text></g><g><title>_start (288 samples, 0.81%)</title><rect x="16.3201%" y="597" width="0.8093%" height="15" fill="rgb(205,108,24)"/><text x="16.5701%" y="607.50"></text></g><g><title>__libc_start_main (288 samples, 0.81%)</title><rect x="16.3201%" y="581" width="0.8093%" height="15" fill="rgb(244,120,49)"/><text x="16.5701%" y="591.50"></text></g><g><title>main (288 samples, 0.81%)</title><rect x="16.3201%" y="565" width="0.8093%" height="15" fill="rgb(223,47,38)"/><text x="16.5701%" y="575.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (288 samples, 0.81%)</title><rect x="16.3201%" y="549" width="0.8093%" height="15" fill="rgb(229,179,11)"/><text x="16.5701%" y="559.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (288 samples, 0.81%)</title><rect x="16.3201%" y="533" width="0.8093%" height="15" fill="rgb(231,122,1)"/><text x="16.5701%" y="543.50"></text></g><g><title>__rust_maybe_catch_panic (288 samples, 0.81%)</title><rect x="16.3201%" y="517" width="0.8093%" height="15" fill="rgb(245,119,9)"/><text x="16.5701%" y="527.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (288 samples, 0.81%)</title><rect x="16.3201%" y="501" width="0.8093%" height="15" fill="rgb(241,163,25)"/><text x="16.5701%" y="511.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (288 samples, 0.81%)</title><rect x="16.3201%" y="485" width="0.8093%" height="15" fill="rgb(217,214,3)"/><text x="16.5701%" y="495.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (288 samples, 0.81%)</title><rect x="16.3201%" y="469" width="0.8093%" height="15" fill="rgb(240,86,28)"/><text x="16.5701%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (288 samples, 0.81%)</title><rect x="16.3201%" y="453" width="0.8093%" height="15" fill="rgb(215,47,9)"/><text x="16.5701%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (288 samples, 0.81%)</title><rect x="16.3201%" y="437" width="0.8093%" height="15" fill="rgb(252,25,45)"/><text x="16.5701%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (288 samples, 0.81%)</title><rect x="16.3201%" y="421" width="0.8093%" height="15" fill="rgb(251,164,9)"/><text x="16.5701%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (288 samples, 0.81%)</title><rect x="16.3201%" y="405" width="0.8093%" height="15" fill="rgb(233,194,0)"/><text x="16.5701%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (288 samples, 0.81%)</title><rect x="16.3201%" y="389" width="0.8093%" height="15" fill="rgb(249,111,24)"/><text x="16.5701%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (288 samples, 0.81%)</title><rect x="16.3201%" y="373" width="0.8093%" height="15" fill="rgb(250,223,3)"/><text x="16.5701%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (288 samples, 0.81%)</title><rect x="16.3201%" y="357" width="0.8093%" height="15" fill="rgb(236,178,37)"/><text x="16.5701%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (288 samples, 0.81%)</title><rect x="16.3201%" y="341" width="0.8093%" height="15" fill="rgb(241,158,50)"/><text x="16.5701%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (288 samples, 0.81%)</title><rect x="16.3201%" y="325" width="0.8093%" height="15" fill="rgb(213,121,41)"/><text x="16.5701%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (288 samples, 0.81%)</title><rect x="16.3201%" y="309" width="0.8093%" height="15" fill="rgb(240,92,3)"/><text x="16.5701%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (288 samples, 0.81%)</title><rect x="16.3201%" y="293" width="0.8093%" height="15" fill="rgb(205,123,3)"/><text x="16.5701%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc::h6cffe83be2bbe610 (288 samples, 0.81%)</title><rect x="16.3201%" y="277" width="0.8093%" height="15" fill="rgb(205,97,47)"/><text x="16.5701%" y="287.50"></text></g><g><title>alloc::alloc::alloc::hb992b77ffe933998 (288 samples, 0.81%)</title><rect x="16.3201%" y="261" width="0.8093%" height="15" fill="rgb(247,152,14)"/><text x="16.5701%" y="271.50"></text></g><g><title>__rg_alloc (288 samples, 0.81%)</title><rect x="16.3201%" y="245" width="0.8093%" height="15" fill="rgb(248,195,53)"/><text x="16.5701%" y="255.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (288 samples, 0.81%)</title><rect x="16.3201%" y="229" width="0.8093%" height="15" fill="rgb(226,201,16)"/><text x="16.5701%" y="239.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (288 samples, 0.81%)</title><rect x="16.3201%" y="213" width="0.8093%" height="15" fill="rgb(205,98,0)"/><text x="16.5701%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (512 samples, 1.44%)</title><rect x="17.1294%" y="549" width="1.4387%" height="15" fill="rgb(214,191,48)"/><text x="17.3794%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (512 samples, 1.44%)</title><rect x="17.1294%" y="533" width="1.4387%" height="15" fill="rgb(237,112,39)"/><text x="17.3794%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (512 samples, 1.44%)</title><rect x="17.1294%" y="517" width="1.4387%" height="15" fill="rgb(247,203,27)"/><text x="17.3794%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (512 samples, 1.44%)</title><rect x="17.1294%" y="501" width="1.4387%" height="15" fill="rgb(235,124,28)"/><text x="17.3794%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (512 samples, 1.44%)</title><rect x="17.1294%" y="485" width="1.4387%" height="15" fill="rgb(208,207,46)"/><text x="17.3794%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (512 samples, 1.44%)</title><rect x="17.1294%" y="469" width="1.4387%" height="15" fill="rgb(234,176,4)"/><text x="17.3794%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (512 samples, 1.44%)</title><rect x="17.1294%" y="453" width="1.4387%" height="15" fill="rgb(230,133,28)"/><text x="17.3794%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (512 samples, 1.44%)</title><rect x="17.1294%" y="437" width="1.4387%" height="15" fill="rgb(211,137,40)"/><text x="17.3794%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (512 samples, 1.44%)</title><rect x="17.1294%" y="421" width="1.4387%" height="15" fill="rgb(254,35,13)"/><text x="17.3794%" y="431.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (512 samples, 1.44%)</title><rect x="17.1294%" y="405" width="1.4387%" height="15" fill="rgb(225,49,51)"/><text x="17.3794%" y="415.50"></text></g><g><title>__rg_realloc (512 samples, 1.44%)</title><rect x="17.1294%" y="389" width="1.4387%" height="15" fill="rgb(251,10,15)"/><text x="17.3794%" y="399.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (512 samples, 1.44%)</title><rect x="17.1294%" y="373" width="1.4387%" height="15" fill="rgb(228,207,15)"/><text x="17.3794%" y="383.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (512 samples, 1.44%)</title><rect x="17.1294%" y="357" width="1.4387%" height="15" fill="rgb(241,99,19)"/><text x="17.3794%" y="367.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (512 samples, 1.44%)</title><rect x="17.1294%" y="341" width="1.4387%" height="15" fill="rgb(207,104,49)"/><text x="17.3794%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (8,652 samples, 24.31%)</title><rect x="5.7660%" y="901" width="24.3116%" height="15" fill="rgb(234,99,18)"/><text x="6.0160%" y="911.50">alloc_free::quick_sort::h5cfe105b9bd1f5..</text></g><g><title>core::ptr::real_drop_in_place::h065749e7cfc69f30 (4,608 samples, 12.95%)</title><rect x="17.1294%" y="885" width="12.9482%" height="15" fill="rgb(213,191,49)"/><text x="17.3794%" y="895.50">core::ptr::real_dro..</text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (4,608 samples, 12.95%)</title><rect x="17.1294%" y="869" width="12.9482%" height="15" fill="rgb(210,226,19)"/><text x="17.3794%" y="879.50">core::ptr::real_dro..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (4,608 samples, 12.95%)</title><rect x="17.1294%" y="853" width="12.9482%" height="15" fill="rgb(229,97,18)"/><text x="17.3794%" y="863.50">&lt;alloc::raw_vec::Ra..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (4,608 samples, 12.95%)</title><rect x="17.1294%" y="837" width="12.9482%" height="15" fill="rgb(211,167,15)"/><text x="17.3794%" y="847.50">alloc::raw_vec::Raw..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (4,608 samples, 12.95%)</title><rect x="17.1294%" y="821" width="12.9482%" height="15" fill="rgb(210,169,34)"/><text x="17.3794%" y="831.50">&lt;alloc::alloc::Glob..</text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (4,608 samples, 12.95%)</title><rect x="17.1294%" y="805" width="12.9482%" height="15" fill="rgb(241,121,31)"/><text x="17.3794%" y="815.50">alloc::alloc::deall..</text></g><g><title>__rg_dealloc (4,608 samples, 12.95%)</title><rect x="17.1294%" y="789" width="12.9482%" height="15" fill="rgb(232,40,11)"/><text x="17.3794%" y="799.50">__rg_dealloc</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (4,608 samples, 12.95%)</title><rect x="17.1294%" y="773" width="12.9482%" height="15" fill="rgb(205,86,26)"/><text x="17.3794%" y="783.50">&lt;cogito::AllocRecor..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (4,608 samples, 12.95%)</title><rect x="17.1294%" y="757" width="12.9482%" height="15" fill="rgb(231,126,28)"/><text x="17.3794%" y="767.50">cogito::get_backtra..</text></g><g><title>Unknown (4,608 samples, 12.95%)</title><rect x="17.1294%" y="741" width="12.9482%" height="15" fill="rgb(219,221,18)"/><text x="17.3794%" y="751.50">Unknown</text></g><g><title>_start (4,608 samples, 12.95%)</title><rect x="17.1294%" y="725" width="12.9482%" height="15" fill="rgb(211,40,0)"/><text x="17.3794%" y="735.50">_start</text></g><g><title>__libc_start_main (4,608 samples, 12.95%)</title><rect x="17.1294%" y="709" width="12.9482%" height="15" fill="rgb(239,85,43)"/><text x="17.3794%" y="719.50">__libc_start_main</text></g><g><title>main (4,608 samples, 12.95%)</title><rect x="17.1294%" y="693" width="12.9482%" height="15" fill="rgb(231,55,21)"/><text x="17.3794%" y="703.50">main</text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (4,608 samples, 12.95%)</title><rect x="17.1294%" y="677" width="12.9482%" height="15" fill="rgb(225,184,43)"/><text x="17.3794%" y="687.50">std::rt::lang_start..</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (4,608 samples, 12.95%)</title><rect x="17.1294%" y="661" width="12.9482%" height="15" fill="rgb(251,158,41)"/><text x="17.3794%" y="671.50">std::rt::lang_start..</text></g><g><title>__rust_maybe_catch_panic (4,608 samples, 12.95%)</title><rect x="17.1294%" y="645" width="12.9482%" height="15" fill="rgb(234,159,37)"/><text x="17.3794%" y="655.50">__rust_maybe_catch_..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (4,608 samples, 12.95%)</title><rect x="17.1294%" y="629" width="12.9482%" height="15" fill="rgb(216,204,22)"/><text x="17.3794%" y="639.50">std::panicking::try..</text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (4,608 samples, 12.95%)</title><rect x="17.1294%" y="613" width="12.9482%" height="15" fill="rgb(214,17,3)"/><text x="17.3794%" y="623.50">std::rt::lang_start..</text></g><g><title>alloc_free::main::h77183791c68e94c3 (4,608 samples, 12.95%)</title><rect x="17.1294%" y="597" width="12.9482%" height="15" fill="rgb(212,111,17)"/><text x="17.3794%" y="607.50">alloc_free::main::h..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (4,608 samples, 12.95%)</title><rect x="17.1294%" y="581" width="12.9482%" height="15" fill="rgb(221,157,24)"/><text x="17.3794%" y="591.50">alloc_free::quick_s..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (4,608 samples, 12.95%)</title><rect x="17.1294%" y="565" width="12.9482%" height="15" fill="rgb(252,16,13)"/><text x="17.3794%" y="575.50">alloc_free::quick_s..</text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (4,096 samples, 11.51%)</title><rect x="18.5681%" y="549" width="11.5095%" height="15" fill="rgb(221,62,2)"/><text x="18.8181%" y="559.50">core::iter::trait..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (4,096 samples, 11.51%)</title><rect x="18.5681%" y="533" width="11.5095%" height="15" fill="rgb(247,87,22)"/><text x="18.8181%" y="543.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (4,096 samples, 11.51%)</title><rect x="18.5681%" y="517" width="11.5095%" height="15" fill="rgb(215,73,9)"/><text x="18.8181%" y="527.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (4,096 samples, 11.51%)</title><rect x="18.5681%" y="501" width="11.5095%" height="15" fill="rgb(207,175,33)"/><text x="18.8181%" y="511.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (4,096 samples, 11.51%)</title><rect x="18.5681%" y="485" width="11.5095%" height="15" fill="rgb(243,129,54)"/><text x="18.8181%" y="495.50">alloc::vec::Vec&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (4,096 samples, 11.51%)</title><rect x="18.5681%" y="469" width="11.5095%" height="15" fill="rgb(227,119,45)"/><text x="18.8181%" y="479.50">alloc::vec::Vec&lt;T..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (4,096 samples, 11.51%)</title><rect x="18.5681%" y="453" width="11.5095%" height="15" fill="rgb(205,109,36)"/><text x="18.8181%" y="463.50">alloc::raw_vec::R..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (4,096 samples, 11.51%)</title><rect x="18.5681%" y="437" width="11.5095%" height="15" fill="rgb(205,6,39)"/><text x="18.8181%" y="447.50">alloc::raw_vec::R..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (4,096 samples, 11.51%)</title><rect x="18.5681%" y="421" width="11.5095%" height="15" fill="rgb(221,32,16)"/><text x="18.8181%" y="431.50">&lt;alloc::alloc::Gl..</text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (4,096 samples, 11.51%)</title><rect x="18.5681%" y="405" width="11.5095%" height="15" fill="rgb(228,144,50)"/><text x="18.8181%" y="415.50">alloc::alloc::rea..</text></g><g><title>__rg_realloc (4,096 samples, 11.51%)</title><rect x="18.5681%" y="389" width="11.5095%" height="15" fill="rgb(229,201,53)"/><text x="18.8181%" y="399.50">__rg_realloc</text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (4,096 samples, 11.51%)</title><rect x="18.5681%" y="373" width="11.5095%" height="15" fill="rgb(249,153,27)"/><text x="18.8181%" y="383.50">core::alloc::Glob..</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (4,096 samples, 11.51%)</title><rect x="18.5681%" y="357" width="11.5095%" height="15" fill="rgb(227,106,25)"/><text x="18.8181%" y="367.50">&lt;cogito::AllocRec..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (4,096 samples, 11.51%)</title><rect x="18.5681%" y="341" width="11.5095%" height="15" fill="rgb(230,65,29)"/><text x="18.8181%" y="351.50">cogito::get_backt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (256 samples, 0.72%)</title><rect x="30.0776%" y="437" width="0.7193%" height="15" fill="rgb(221,57,46)"/><text x="30.3276%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (256 samples, 0.72%)</title><rect x="30.0776%" y="421" width="0.7193%" height="15" fill="rgb(229,161,17)"/><text x="30.3276%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (256 samples, 0.72%)</title><rect x="30.0776%" y="405" width="0.7193%" height="15" fill="rgb(222,213,11)"/><text x="30.3276%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (256 samples, 0.72%)</title><rect x="30.0776%" y="389" width="0.7193%" height="15" fill="rgb(235,35,13)"/><text x="30.3276%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (256 samples, 0.72%)</title><rect x="30.0776%" y="373" width="0.7193%" height="15" fill="rgb(233,158,34)"/><text x="30.3276%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (256 samples, 0.72%)</title><rect x="30.0776%" y="357" width="0.7193%" height="15" fill="rgb(215,151,48)"/><text x="30.3276%" y="367.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (256 samples, 0.72%)</title><rect x="30.0776%" y="341" width="0.7193%" height="15" fill="rgb(229,84,14)"/><text x="30.3276%" y="351.50"></text></g><g><title>__rg_realloc (256 samples, 0.72%)</title><rect x="30.0776%" y="325" width="0.7193%" height="15" fill="rgb(229,68,14)"/><text x="30.3276%" y="335.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (256 samples, 0.72%)</title><rect x="30.0776%" y="309" width="0.7193%" height="15" fill="rgb(243,106,26)"/><text x="30.3276%" y="319.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (256 samples, 0.72%)</title><rect x="30.0776%" y="293" width="0.7193%" height="15" fill="rgb(206,45,38)"/><text x="30.3276%" y="303.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (256 samples, 0.72%)</title><rect x="30.0776%" y="277" width="0.7193%" height="15" fill="rgb(226,6,15)"/><text x="30.3276%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (260 samples, 0.73%)</title><rect x="30.0776%" y="853" width="0.7306%" height="15" fill="rgb(232,22,54)"/><text x="30.3276%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (260 samples, 0.73%)</title><rect x="30.0776%" y="837" width="0.7306%" height="15" fill="rgb(229,222,32)"/><text x="30.3276%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (260 samples, 0.73%)</title><rect x="30.0776%" y="821" width="0.7306%" height="15" fill="rgb(228,62,29)"/><text x="30.3276%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (260 samples, 0.73%)</title><rect x="30.0776%" y="805" width="0.7306%" height="15" fill="rgb(251,103,34)"/><text x="30.3276%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (260 samples, 0.73%)</title><rect x="30.0776%" y="789" width="0.7306%" height="15" fill="rgb(233,12,30)"/><text x="30.3276%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (260 samples, 0.73%)</title><rect x="30.0776%" y="773" width="0.7306%" height="15" fill="rgb(238,52,0)"/><text x="30.3276%" y="783.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (260 samples, 0.73%)</title><rect x="30.0776%" y="757" width="0.7306%" height="15" fill="rgb(223,98,5)"/><text x="30.3276%" y="767.50"></text></g><g><title>__rg_realloc (260 samples, 0.73%)</title><rect x="30.0776%" y="741" width="0.7306%" height="15" fill="rgb(228,75,37)"/><text x="30.3276%" y="751.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (260 samples, 0.73%)</title><rect x="30.0776%" y="725" width="0.7306%" height="15" fill="rgb(205,115,49)"/><text x="30.3276%" y="735.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (260 samples, 0.73%)</title><rect x="30.0776%" y="709" width="0.7306%" height="15" fill="rgb(250,154,43)"/><text x="30.3276%" y="719.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (260 samples, 0.73%)</title><rect x="30.0776%" y="693" width="0.7306%" height="15" fill="rgb(226,43,29)"/><text x="30.3276%" y="703.50"></text></g><g><title>Unknown (260 samples, 0.73%)</title><rect x="30.0776%" y="677" width="0.7306%" height="15" fill="rgb(249,228,39)"/><text x="30.3276%" y="687.50"></text></g><g><title>_start (260 samples, 0.73%)</title><rect x="30.0776%" y="661" width="0.7306%" height="15" fill="rgb(216,79,43)"/><text x="30.3276%" y="671.50"></text></g><g><title>__libc_start_main (260 samples, 0.73%)</title><rect x="30.0776%" y="645" width="0.7306%" height="15" fill="rgb(228,95,12)"/><text x="30.3276%" y="655.50"></text></g><g><title>main (260 samples, 0.73%)</title><rect x="30.0776%" y="629" width="0.7306%" height="15" fill="rgb(249,221,15)"/><text x="30.3276%" y="639.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (260 samples, 0.73%)</title><rect x="30.0776%" y="613" width="0.7306%" height="15" fill="rgb(233,34,13)"/><text x="30.3276%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (260 samples, 0.73%)</title><rect x="30.0776%" y="597" width="0.7306%" height="15" fill="rgb(214,103,39)"/><text x="30.3276%" y="607.50"></text></g><g><title>__rust_maybe_catch_panic (260 samples, 0.73%)</title><rect x="30.0776%" y="581" width="0.7306%" height="15" fill="rgb(251,126,39)"/><text x="30.3276%" y="591.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (260 samples, 0.73%)</title><rect x="30.0776%" y="565" width="0.7306%" height="15" fill="rgb(214,216,36)"/><text x="30.3276%" y="575.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (260 samples, 0.73%)</title><rect x="30.0776%" y="549" width="0.7306%" height="15" fill="rgb(220,221,8)"/><text x="30.3276%" y="559.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (260 samples, 0.73%)</title><rect x="30.0776%" y="533" width="0.7306%" height="15" fill="rgb(240,216,3)"/><text x="30.3276%" y="543.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (260 samples, 0.73%)</title><rect x="30.0776%" y="517" width="0.7306%" height="15" fill="rgb(232,218,17)"/><text x="30.3276%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (260 samples, 0.73%)</title><rect x="30.0776%" y="501" width="0.7306%" height="15" fill="rgb(229,163,45)"/><text x="30.3276%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (260 samples, 0.73%)</title><rect x="30.0776%" y="485" width="0.7306%" height="15" fill="rgb(231,110,42)"/><text x="30.3276%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (260 samples, 0.73%)</title><rect x="30.0776%" y="469" width="0.7306%" height="15" fill="rgb(208,170,48)"/><text x="30.3276%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (260 samples, 0.73%)</title><rect x="30.0776%" y="453" width="0.7306%" height="15" fill="rgb(239,116,25)"/><text x="30.3276%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (260 samples, 0.73%)</title><rect x="30.0776%" y="901" width="0.7306%" height="15" fill="rgb(219,200,50)"/><text x="30.3276%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (260 samples, 0.73%)</title><rect x="30.0776%" y="885" width="0.7306%" height="15" fill="rgb(245,200,0)"/><text x="30.3276%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (260 samples, 0.73%)</title><rect x="30.0776%" y="869" width="0.7306%" height="15" fill="rgb(245,119,33)"/><text x="30.3276%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (2,048 samples, 5.75%)</title><rect x="30.8081%" y="437" width="5.7547%" height="15" fill="rgb(231,125,12)"/><text x="31.0581%" y="447.50">&lt;alloc:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (2,048 samples, 5.75%)</title><rect x="30.8081%" y="421" width="5.7547%" height="15" fill="rgb(216,96,41)"/><text x="31.0581%" y="431.50">alloc::..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (2,048 samples, 5.75%)</title><rect x="30.8081%" y="405" width="5.7547%" height="15" fill="rgb(248,43,45)"/><text x="31.0581%" y="415.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (2,048 samples, 5.75%)</title><rect x="30.8081%" y="389" width="5.7547%" height="15" fill="rgb(217,222,7)"/><text x="31.0581%" y="399.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (2,048 samples, 5.75%)</title><rect x="30.8081%" y="373" width="5.7547%" height="15" fill="rgb(233,28,6)"/><text x="31.0581%" y="383.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (2,048 samples, 5.75%)</title><rect x="30.8081%" y="357" width="5.7547%" height="15" fill="rgb(231,218,15)"/><text x="31.0581%" y="367.50">&lt;alloc:..</text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (2,048 samples, 5.75%)</title><rect x="30.8081%" y="341" width="5.7547%" height="15" fill="rgb(226,171,48)"/><text x="31.0581%" y="351.50">alloc::..</text></g><g><title>__rg_realloc (2,048 samples, 5.75%)</title><rect x="30.8081%" y="325" width="5.7547%" height="15" fill="rgb(235,201,9)"/><text x="31.0581%" y="335.50">__rg_re..</text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (2,048 samples, 5.75%)</title><rect x="30.8081%" y="309" width="5.7547%" height="15" fill="rgb(217,80,15)"/><text x="31.0581%" y="319.50">core::a..</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (2,048 samples, 5.75%)</title><rect x="30.8081%" y="293" width="5.7547%" height="15" fill="rgb(219,152,8)"/><text x="31.0581%" y="303.50">&lt;cogito..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (2,048 samples, 5.75%)</title><rect x="30.8081%" y="277" width="5.7547%" height="15" fill="rgb(243,107,38)"/><text x="31.0581%" y="287.50">cogito:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="853" width="5.7660%" height="15" fill="rgb(231,17,5)"/><text x="31.0581%" y="863.50">&lt;alloc:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (2,052 samples, 5.77%)</title><rect x="30.8081%" y="837" width="5.7660%" height="15" fill="rgb(209,25,54)"/><text x="31.0581%" y="847.50">alloc::..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="821" width="5.7660%" height="15" fill="rgb(219,0,2)"/><text x="31.0581%" y="831.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="805" width="5.7660%" height="15" fill="rgb(246,9,5)"/><text x="31.0581%" y="815.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="789" width="5.7660%" height="15" fill="rgb(226,159,4)"/><text x="31.0581%" y="799.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (2,052 samples, 5.77%)</title><rect x="30.8081%" y="773" width="5.7660%" height="15" fill="rgb(219,175,34)"/><text x="31.0581%" y="783.50">&lt;alloc:..</text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="757" width="5.7660%" height="15" fill="rgb(236,10,46)"/><text x="31.0581%" y="767.50">alloc::..</text></g><g><title>__rg_realloc (2,052 samples, 5.77%)</title><rect x="30.8081%" y="741" width="5.7660%" height="15" fill="rgb(240,211,16)"/><text x="31.0581%" y="751.50">__rg_re..</text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="725" width="5.7660%" height="15" fill="rgb(205,3,43)"/><text x="31.0581%" y="735.50">core::a..</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (2,052 samples, 5.77%)</title><rect x="30.8081%" y="709" width="5.7660%" height="15" fill="rgb(245,7,22)"/><text x="31.0581%" y="719.50">&lt;cogito..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="693" width="5.7660%" height="15" fill="rgb(239,132,32)"/><text x="31.0581%" y="703.50">cogito:..</text></g><g><title>Unknown (2,052 samples, 5.77%)</title><rect x="30.8081%" y="677" width="5.7660%" height="15" fill="rgb(228,202,34)"/><text x="31.0581%" y="687.50">Unknown</text></g><g><title>_start (2,052 samples, 5.77%)</title><rect x="30.8081%" y="661" width="5.7660%" height="15" fill="rgb(254,200,22)"/><text x="31.0581%" y="671.50">_start</text></g><g><title>__libc_start_main (2,052 samples, 5.77%)</title><rect x="30.8081%" y="645" width="5.7660%" height="15" fill="rgb(219,10,39)"/><text x="31.0581%" y="655.50">__libc_..</text></g><g><title>main (2,052 samples, 5.77%)</title><rect x="30.8081%" y="629" width="5.7660%" height="15" fill="rgb(226,210,39)"/><text x="31.0581%" y="639.50">main</text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="613" width="5.7660%" height="15" fill="rgb(208,219,16)"/><text x="31.0581%" y="623.50">std::rt..</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (2,052 samples, 5.77%)</title><rect x="30.8081%" y="597" width="5.7660%" height="15" fill="rgb(216,158,51)"/><text x="31.0581%" y="607.50">std::rt..</text></g><g><title>__rust_maybe_catch_panic (2,052 samples, 5.77%)</title><rect x="30.8081%" y="581" width="5.7660%" height="15" fill="rgb(233,14,44)"/><text x="31.0581%" y="591.50">__rust_..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="565" width="5.7660%" height="15" fill="rgb(237,97,39)"/><text x="31.0581%" y="575.50">std::pa..</text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (2,052 samples, 5.77%)</title><rect x="30.8081%" y="549" width="5.7660%" height="15" fill="rgb(218,198,43)"/><text x="31.0581%" y="559.50">std::rt..</text></g><g><title>alloc_free::main::h77183791c68e94c3 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="533" width="5.7660%" height="15" fill="rgb(231,104,20)"/><text x="31.0581%" y="543.50">alloc_f..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (2,052 samples, 5.77%)</title><rect x="30.8081%" y="517" width="5.7660%" height="15" fill="rgb(254,36,13)"/><text x="31.0581%" y="527.50">alloc_f..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (2,052 samples, 5.77%)</title><rect x="30.8081%" y="501" width="5.7660%" height="15" fill="rgb(248,14,50)"/><text x="31.0581%" y="511.50">alloc_f..</text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="485" width="5.7660%" height="15" fill="rgb(217,107,29)"/><text x="31.0581%" y="495.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="469" width="5.7660%" height="15" fill="rgb(251,169,33)"/><text x="31.0581%" y="479.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="453" width="5.7660%" height="15" fill="rgb(217,108,32)"/><text x="31.0581%" y="463.50">&lt;alloc:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="901" width="5.7660%" height="15" fill="rgb(219,66,42)"/><text x="31.0581%" y="911.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="885" width="5.7660%" height="15" fill="rgb(206,180,7)"/><text x="31.0581%" y="895.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (2,052 samples, 5.77%)</title><rect x="30.8081%" y="869" width="5.7660%" height="15" fill="rgb(208,226,31)"/><text x="31.0581%" y="879.50">&lt;alloc:..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h5b5906b74b21a74e (3,148 samples, 8.85%)</title><rect x="36.5741%" y="805" width="8.8457%" height="15" fill="rgb(218,26,49)"/><text x="36.8241%" y="815.50">&lt;core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ha0cdcc702f5dc9c1 (3,148 samples, 8.85%)</title><rect x="36.5741%" y="789" width="8.8457%" height="15" fill="rgb(233,197,48)"/><text x="36.8241%" y="799.50">core::iter::..</text></g><g><title>core::ptr::real_drop_in_place::h1cf8390ffe354c7f (3,148 samples, 8.85%)</title><rect x="36.5741%" y="773" width="8.8457%" height="15" fill="rgb(252,181,51)"/><text x="36.8241%" y="783.50">core::ptr::r..</text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop::he6982a417c2b7a08 (3,148 samples, 8.85%)</title><rect x="36.5741%" y="757" width="8.8457%" height="15" fill="rgb(253,90,19)"/><text x="36.8241%" y="767.50">&lt;alloc::vec:..</text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (3,148 samples, 8.85%)</title><rect x="36.5741%" y="741" width="8.8457%" height="15" fill="rgb(215,171,30)"/><text x="36.8241%" y="751.50">core::ptr::r..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (3,148 samples, 8.85%)</title><rect x="36.5741%" y="725" width="8.8457%" height="15" fill="rgb(214,222,9)"/><text x="36.8241%" y="735.50">&lt;alloc::raw_..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (3,148 samples, 8.85%)</title><rect x="36.5741%" y="709" width="8.8457%" height="15" fill="rgb(223,3,22)"/><text x="36.8241%" y="719.50">alloc::raw_v..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (3,148 samples, 8.85%)</title><rect x="36.5741%" y="693" width="8.8457%" height="15" fill="rgb(225,196,46)"/><text x="36.8241%" y="703.50">&lt;alloc::allo..</text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (3,148 samples, 8.85%)</title><rect x="36.5741%" y="677" width="8.8457%" height="15" fill="rgb(209,110,37)"/><text x="36.8241%" y="687.50">alloc::alloc..</text></g><g><title>__rg_dealloc (3,148 samples, 8.85%)</title><rect x="36.5741%" y="661" width="8.8457%" height="15" fill="rgb(249,89,12)"/><text x="36.8241%" y="671.50">__rg_dealloc</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (3,148 samples, 8.85%)</title><rect x="36.5741%" y="645" width="8.8457%" height="15" fill="rgb(226,27,33)"/><text x="36.8241%" y="655.50">&lt;cogito::All..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (3,148 samples, 8.85%)</title><rect x="36.5741%" y="629" width="8.8457%" height="15" fill="rgb(213,82,22)"/><text x="36.8241%" y="639.50">cogito::get_..</text></g><g><title>Unknown (3,148 samples, 8.85%)</title><rect x="36.5741%" y="613" width="8.8457%" height="15" fill="rgb(248,140,0)"/><text x="36.8241%" y="623.50">Unknown</text></g><g><title>_start (3,148 samples, 8.85%)</title><rect x="36.5741%" y="597" width="8.8457%" height="15" fill="rgb(228,106,3)"/><text x="36.8241%" y="607.50">_start</text></g><g><title>__libc_start_main (3,148 samples, 8.85%)</title><rect x="36.5741%" y="581" width="8.8457%" height="15" fill="rgb(209,23,37)"/><text x="36.8241%" y="591.50">__libc_start..</text></g><g><title>main (3,148 samples, 8.85%)</title><rect x="36.5741%" y="565" width="8.8457%" height="15" fill="rgb(241,93,50)"/><text x="36.8241%" y="575.50">main</text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (3,148 samples, 8.85%)</title><rect x="36.5741%" y="549" width="8.8457%" height="15" fill="rgb(253,46,43)"/><text x="36.8241%" y="559.50">std::rt::lan..</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (3,148 samples, 8.85%)</title><rect x="36.5741%" y="533" width="8.8457%" height="15" fill="rgb(226,206,43)"/><text x="36.8241%" y="543.50">std::rt::lan..</text></g><g><title>__rust_maybe_catch_panic (3,148 samples, 8.85%)</title><rect x="36.5741%" y="517" width="8.8457%" height="15" fill="rgb(217,54,7)"/><text x="36.8241%" y="527.50">__rust_maybe..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (3,148 samples, 8.85%)</title><rect x="36.5741%" y="501" width="8.8457%" height="15" fill="rgb(223,5,52)"/><text x="36.8241%" y="511.50">std::panicki..</text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (3,148 samples, 8.85%)</title><rect x="36.5741%" y="485" width="8.8457%" height="15" fill="rgb(206,52,46)"/><text x="36.8241%" y="495.50">std::rt::lan..</text></g><g><title>alloc_free::main::h77183791c68e94c3 (3,148 samples, 8.85%)</title><rect x="36.5741%" y="469" width="8.8457%" height="15" fill="rgb(253,136,11)"/><text x="36.8241%" y="479.50">alloc_free::..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (3,148 samples, 8.85%)</title><rect x="36.5741%" y="453" width="8.8457%" height="15" fill="rgb(208,106,33)"/><text x="36.8241%" y="463.50">alloc_free::..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (3,148 samples, 8.85%)</title><rect x="36.5741%" y="437" width="8.8457%" height="15" fill="rgb(206,54,4)"/><text x="36.8241%" y="447.50">alloc_free::..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (3,144 samples, 8.83%)</title><rect x="36.5854%" y="421" width="8.8344%" height="15" fill="rgb(213,3,15)"/><text x="36.8354%" y="431.50">alloc_free::..</text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (3,144 samples, 8.83%)</title><rect x="36.5854%" y="405" width="8.8344%" height="15" fill="rgb(252,211,39)"/><text x="36.8354%" y="415.50">core::iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (3,144 samples, 8.83%)</title><rect x="36.5854%" y="389" width="8.8344%" height="15" fill="rgb(223,6,36)"/><text x="36.8354%" y="399.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (3,144 samples, 8.83%)</title><rect x="36.5854%" y="373" width="8.8344%" height="15" fill="rgb(252,169,45)"/><text x="36.8354%" y="383.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (3,144 samples, 8.83%)</title><rect x="36.5854%" y="357" width="8.8344%" height="15" fill="rgb(212,48,26)"/><text x="36.8354%" y="367.50">&lt;alloc::vec:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (3,144 samples, 8.83%)</title><rect x="36.5854%" y="341" width="8.8344%" height="15" fill="rgb(251,102,48)"/><text x="36.8354%" y="351.50">alloc::vec::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (3,144 samples, 8.83%)</title><rect x="36.5854%" y="325" width="8.8344%" height="15" fill="rgb(243,208,16)"/><text x="36.8354%" y="335.50">alloc::raw_v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (3,144 samples, 8.83%)</title><rect x="36.5854%" y="309" width="8.8344%" height="15" fill="rgb(219,96,24)"/><text x="36.8354%" y="319.50">alloc::raw_v..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc::h6cffe83be2bbe610 (3,144 samples, 8.83%)</title><rect x="36.5854%" y="293" width="8.8344%" height="15" fill="rgb(219,33,29)"/><text x="36.8354%" y="303.50">&lt;alloc::allo..</text></g><g><title>alloc::alloc::alloc::hb992b77ffe933998 (3,144 samples, 8.83%)</title><rect x="36.5854%" y="277" width="8.8344%" height="15" fill="rgb(223,176,5)"/><text x="36.8354%" y="287.50">alloc::alloc..</text></g><g><title>__rg_alloc (3,144 samples, 8.83%)</title><rect x="36.5854%" y="261" width="8.8344%" height="15" fill="rgb(228,140,14)"/><text x="36.8354%" y="271.50">__rg_alloc</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (3,144 samples, 8.83%)</title><rect x="36.5854%" y="245" width="8.8344%" height="15" fill="rgb(217,179,31)"/><text x="36.8354%" y="255.50">&lt;cogito::All..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (3,144 samples, 8.83%)</title><rect x="36.5854%" y="229" width="8.8344%" height="15" fill="rgb(230,9,30)"/><text x="36.8354%" y="239.50">cogito::get_..</text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (3,556 samples, 9.99%)</title><rect x="36.5741%" y="901" width="9.9921%" height="15" fill="rgb(230,136,20)"/><text x="36.8241%" y="911.50">core::iter::tr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (3,556 samples, 9.99%)</title><rect x="36.5741%" y="885" width="9.9921%" height="15" fill="rgb(215,210,22)"/><text x="36.8241%" y="895.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (3,556 samples, 9.99%)</title><rect x="36.5741%" y="869" width="9.9921%" height="15" fill="rgb(218,43,5)"/><text x="36.8241%" y="879.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (3,556 samples, 9.99%)</title><rect x="36.5741%" y="853" width="9.9921%" height="15" fill="rgb(216,11,5)"/><text x="36.8241%" y="863.50">&lt;alloc::vec::V..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (3,556 samples, 9.99%)</title><rect x="36.5741%" y="837" width="9.9921%" height="15" fill="rgb(209,82,29)"/><text x="36.8241%" y="847.50">core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (3,556 samples, 9.99%)</title><rect x="36.5741%" y="821" width="9.9921%" height="15" fill="rgb(244,115,12)"/><text x="36.8241%" y="831.50">&lt;core::iter::a..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::h3dc055e1da02411d (408 samples, 1.15%)</title><rect x="45.4198%" y="805" width="1.1465%" height="15" fill="rgb(222,82,18)"/><text x="45.6698%" y="815.50"></text></g><g><title>core::ptr::real_drop_in_place::h1cf8390ffe354c7f (408 samples, 1.15%)</title><rect x="45.4198%" y="789" width="1.1465%" height="15" fill="rgb(249,227,8)"/><text x="45.6698%" y="799.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop::he6982a417c2b7a08 (408 samples, 1.15%)</title><rect x="45.4198%" y="773" width="1.1465%" height="15" fill="rgb(253,141,45)"/><text x="45.6698%" y="783.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (408 samples, 1.15%)</title><rect x="45.4198%" y="757" width="1.1465%" height="15" fill="rgb(234,184,4)"/><text x="45.6698%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (408 samples, 1.15%)</title><rect x="45.4198%" y="741" width="1.1465%" height="15" fill="rgb(218,194,23)"/><text x="45.6698%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (408 samples, 1.15%)</title><rect x="45.4198%" y="725" width="1.1465%" height="15" fill="rgb(235,66,41)"/><text x="45.6698%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (408 samples, 1.15%)</title><rect x="45.4198%" y="709" width="1.1465%" height="15" fill="rgb(245,217,1)"/><text x="45.6698%" y="719.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (408 samples, 1.15%)</title><rect x="45.4198%" y="693" width="1.1465%" height="15" fill="rgb(229,91,1)"/><text x="45.6698%" y="703.50"></text></g><g><title>__rg_dealloc (408 samples, 1.15%)</title><rect x="45.4198%" y="677" width="1.1465%" height="15" fill="rgb(207,101,30)"/><text x="45.6698%" y="687.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (408 samples, 1.15%)</title><rect x="45.4198%" y="661" width="1.1465%" height="15" fill="rgb(223,82,49)"/><text x="45.6698%" y="671.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (408 samples, 1.15%)</title><rect x="45.4198%" y="645" width="1.1465%" height="15" fill="rgb(218,167,17)"/><text x="45.6698%" y="655.50"></text></g><g><title>Unknown (408 samples, 1.15%)</title><rect x="45.4198%" y="629" width="1.1465%" height="15" fill="rgb(208,103,14)"/><text x="45.6698%" y="639.50"></text></g><g><title>_start (408 samples, 1.15%)</title><rect x="45.4198%" y="613" width="1.1465%" height="15" fill="rgb(238,20,8)"/><text x="45.6698%" y="623.50"></text></g><g><title>__libc_start_main (408 samples, 1.15%)</title><rect x="45.4198%" y="597" width="1.1465%" height="15" fill="rgb(218,80,54)"/><text x="45.6698%" y="607.50"></text></g><g><title>main (408 samples, 1.15%)</title><rect x="45.4198%" y="581" width="1.1465%" height="15" fill="rgb(240,144,17)"/><text x="45.6698%" y="591.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (408 samples, 1.15%)</title><rect x="45.4198%" y="565" width="1.1465%" height="15" fill="rgb(245,27,50)"/><text x="45.6698%" y="575.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (408 samples, 1.15%)</title><rect x="45.4198%" y="549" width="1.1465%" height="15" fill="rgb(251,51,7)"/><text x="45.6698%" y="559.50"></text></g><g><title>__rust_maybe_catch_panic (408 samples, 1.15%)</title><rect x="45.4198%" y="533" width="1.1465%" height="15" fill="rgb(245,217,29)"/><text x="45.6698%" y="543.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (408 samples, 1.15%)</title><rect x="45.4198%" y="517" width="1.1465%" height="15" fill="rgb(221,176,29)"/><text x="45.6698%" y="527.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (408 samples, 1.15%)</title><rect x="45.4198%" y="501" width="1.1465%" height="15" fill="rgb(212,180,24)"/><text x="45.6698%" y="511.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (408 samples, 1.15%)</title><rect x="45.4198%" y="485" width="1.1465%" height="15" fill="rgb(254,24,2)"/><text x="45.6698%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (408 samples, 1.15%)</title><rect x="45.4198%" y="469" width="1.1465%" height="15" fill="rgb(230,100,2)"/><text x="45.6698%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (408 samples, 1.15%)</title><rect x="45.4198%" y="453" width="1.1465%" height="15" fill="rgb(219,142,25)"/><text x="45.6698%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (408 samples, 1.15%)</title><rect x="45.4198%" y="437" width="1.1465%" height="15" fill="rgb(240,73,43)"/><text x="45.6698%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (408 samples, 1.15%)</title><rect x="45.4198%" y="421" width="1.1465%" height="15" fill="rgb(214,114,15)"/><text x="45.6698%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (408 samples, 1.15%)</title><rect x="45.4198%" y="405" width="1.1465%" height="15" fill="rgb(207,130,4)"/><text x="45.6698%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (408 samples, 1.15%)</title><rect x="45.4198%" y="389" width="1.1465%" height="15" fill="rgb(221,25,40)"/><text x="45.6698%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (408 samples, 1.15%)</title><rect x="45.4198%" y="373" width="1.1465%" height="15" fill="rgb(241,184,7)"/><text x="45.6698%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (408 samples, 1.15%)</title><rect x="45.4198%" y="357" width="1.1465%" height="15" fill="rgb(235,159,4)"/><text x="45.6698%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (408 samples, 1.15%)</title><rect x="45.4198%" y="341" width="1.1465%" height="15" fill="rgb(214,87,48)"/><text x="45.6698%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (408 samples, 1.15%)</title><rect x="45.4198%" y="325" width="1.1465%" height="15" fill="rgb(246,198,24)"/><text x="45.6698%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc::h6cffe83be2bbe610 (408 samples, 1.15%)</title><rect x="45.4198%" y="309" width="1.1465%" height="15" fill="rgb(209,66,40)"/><text x="45.6698%" y="319.50"></text></g><g><title>alloc::alloc::alloc::hb992b77ffe933998 (408 samples, 1.15%)</title><rect x="45.4198%" y="293" width="1.1465%" height="15" fill="rgb(233,147,39)"/><text x="45.6698%" y="303.50"></text></g><g><title>__rg_alloc (408 samples, 1.15%)</title><rect x="45.4198%" y="277" width="1.1465%" height="15" fill="rgb(231,145,52)"/><text x="45.6698%" y="287.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (408 samples, 1.15%)</title><rect x="45.4198%" y="261" width="1.1465%" height="15" fill="rgb(206,20,26)"/><text x="45.6698%" y="271.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (408 samples, 1.15%)</title><rect x="45.4198%" y="245" width="1.1465%" height="15" fill="rgb(238,220,4)"/><text x="45.6698%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (4,096 samples, 11.51%)</title><rect x="46.5663%" y="581" width="11.5095%" height="15" fill="rgb(252,195,42)"/><text x="46.8163%" y="591.50">core::iter::trait..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (4,096 samples, 11.51%)</title><rect x="46.5663%" y="565" width="11.5095%" height="15" fill="rgb(209,10,6)"/><text x="46.8163%" y="575.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (4,096 samples, 11.51%)</title><rect x="46.5663%" y="549" width="11.5095%" height="15" fill="rgb(229,3,52)"/><text x="46.8163%" y="559.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (4,096 samples, 11.51%)</title><rect x="46.5663%" y="533" width="11.5095%" height="15" fill="rgb(253,49,37)"/><text x="46.8163%" y="543.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (4,096 samples, 11.51%)</title><rect x="46.5663%" y="517" width="11.5095%" height="15" fill="rgb(240,103,49)"/><text x="46.8163%" y="527.50">alloc::vec::Vec&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (4,096 samples, 11.51%)</title><rect x="46.5663%" y="501" width="11.5095%" height="15" fill="rgb(250,182,30)"/><text x="46.8163%" y="511.50">alloc::vec::Vec&lt;T..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (4,096 samples, 11.51%)</title><rect x="46.5663%" y="485" width="11.5095%" height="15" fill="rgb(248,8,30)"/><text x="46.8163%" y="495.50">alloc::raw_vec::R..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (4,096 samples, 11.51%)</title><rect x="46.5663%" y="469" width="11.5095%" height="15" fill="rgb(237,120,30)"/><text x="46.8163%" y="479.50">alloc::raw_vec::R..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (4,096 samples, 11.51%)</title><rect x="46.5663%" y="453" width="11.5095%" height="15" fill="rgb(221,146,34)"/><text x="46.8163%" y="463.50">&lt;alloc::alloc::Gl..</text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (4,096 samples, 11.51%)</title><rect x="46.5663%" y="437" width="11.5095%" height="15" fill="rgb(242,55,13)"/><text x="46.8163%" y="447.50">alloc::alloc::rea..</text></g><g><title>__rg_realloc (4,096 samples, 11.51%)</title><rect x="46.5663%" y="421" width="11.5095%" height="15" fill="rgb(242,112,31)"/><text x="46.8163%" y="431.50">__rg_realloc</text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (4,096 samples, 11.51%)</title><rect x="46.5663%" y="405" width="11.5095%" height="15" fill="rgb(249,192,27)"/><text x="46.8163%" y="415.50">core::alloc::Glob..</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (4,096 samples, 11.51%)</title><rect x="46.5663%" y="389" width="11.5095%" height="15" fill="rgb(208,204,44)"/><text x="46.8163%" y="399.50">&lt;cogito::AllocRec..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (4,096 samples, 11.51%)</title><rect x="46.5663%" y="373" width="11.5095%" height="15" fill="rgb(208,93,54)"/><text x="46.8163%" y="383.50">cogito::get_backt..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (19,128 samples, 53.75%)</title><rect x="5.7660%" y="917" width="53.7485%" height="15" fill="rgb(242,1,31)"/><text x="6.0160%" y="927.50">alloc_free::quick_sort::h5cfe105b9bd1f52c</text></g><g><title>core::ptr::real_drop_in_place::h065749e7cfc69f30 (4,608 samples, 12.95%)</title><rect x="46.5663%" y="901" width="12.9482%" height="15" fill="rgb(241,83,25)"/><text x="46.8163%" y="911.50">core::ptr::real_dro..</text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (4,608 samples, 12.95%)</title><rect x="46.5663%" y="885" width="12.9482%" height="15" fill="rgb(205,169,50)"/><text x="46.8163%" y="895.50">core::ptr::real_dro..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (4,608 samples, 12.95%)</title><rect x="46.5663%" y="869" width="12.9482%" height="15" fill="rgb(239,186,37)"/><text x="46.8163%" y="879.50">&lt;alloc::raw_vec::Ra..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (4,608 samples, 12.95%)</title><rect x="46.5663%" y="853" width="12.9482%" height="15" fill="rgb(205,221,10)"/><text x="46.8163%" y="863.50">alloc::raw_vec::Raw..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (4,608 samples, 12.95%)</title><rect x="46.5663%" y="837" width="12.9482%" height="15" fill="rgb(218,196,15)"/><text x="46.8163%" y="847.50">&lt;alloc::alloc::Glob..</text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (4,608 samples, 12.95%)</title><rect x="46.5663%" y="821" width="12.9482%" height="15" fill="rgb(218,196,35)"/><text x="46.8163%" y="831.50">alloc::alloc::deall..</text></g><g><title>__rg_dealloc (4,608 samples, 12.95%)</title><rect x="46.5663%" y="805" width="12.9482%" height="15" fill="rgb(233,63,24)"/><text x="46.8163%" y="815.50">__rg_dealloc</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (4,608 samples, 12.95%)</title><rect x="46.5663%" y="789" width="12.9482%" height="15" fill="rgb(225,8,4)"/><text x="46.8163%" y="799.50">&lt;cogito::AllocRecor..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (4,608 samples, 12.95%)</title><rect x="46.5663%" y="773" width="12.9482%" height="15" fill="rgb(234,105,35)"/><text x="46.8163%" y="783.50">cogito::get_backtra..</text></g><g><title>Unknown (4,608 samples, 12.95%)</title><rect x="46.5663%" y="757" width="12.9482%" height="15" fill="rgb(236,21,32)"/><text x="46.8163%" y="767.50">Unknown</text></g><g><title>_start (4,608 samples, 12.95%)</title><rect x="46.5663%" y="741" width="12.9482%" height="15" fill="rgb(228,109,6)"/><text x="46.8163%" y="751.50">_start</text></g><g><title>__libc_start_main (4,608 samples, 12.95%)</title><rect x="46.5663%" y="725" width="12.9482%" height="15" fill="rgb(229,215,31)"/><text x="46.8163%" y="735.50">__libc_start_main</text></g><g><title>main (4,608 samples, 12.95%)</title><rect x="46.5663%" y="709" width="12.9482%" height="15" fill="rgb(221,52,54)"/><text x="46.8163%" y="719.50">main</text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (4,608 samples, 12.95%)</title><rect x="46.5663%" y="693" width="12.9482%" height="15" fill="rgb(252,129,43)"/><text x="46.8163%" y="703.50">std::rt::lang_start..</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (4,608 samples, 12.95%)</title><rect x="46.5663%" y="677" width="12.9482%" height="15" fill="rgb(248,183,27)"/><text x="46.8163%" y="687.50">std::rt::lang_start..</text></g><g><title>__rust_maybe_catch_panic (4,608 samples, 12.95%)</title><rect x="46.5663%" y="661" width="12.9482%" height="15" fill="rgb(250,0,22)"/><text x="46.8163%" y="671.50">__rust_maybe_catch_..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (4,608 samples, 12.95%)</title><rect x="46.5663%" y="645" width="12.9482%" height="15" fill="rgb(213,166,10)"/><text x="46.8163%" y="655.50">std::panicking::try..</text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (4,608 samples, 12.95%)</title><rect x="46.5663%" y="629" width="12.9482%" height="15" fill="rgb(207,163,36)"/><text x="46.8163%" y="639.50">std::rt::lang_start..</text></g><g><title>alloc_free::main::h77183791c68e94c3 (4,608 samples, 12.95%)</title><rect x="46.5663%" y="613" width="12.9482%" height="15" fill="rgb(208,122,22)"/><text x="46.8163%" y="623.50">alloc_free::main::h..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (4,608 samples, 12.95%)</title><rect x="46.5663%" y="597" width="12.9482%" height="15" fill="rgb(207,104,49)"/><text x="46.8163%" y="607.50">alloc_free::quick_s..</text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (512 samples, 1.44%)</title><rect x="58.0758%" y="581" width="1.4387%" height="15" fill="rgb(248,211,50)"/><text x="58.3258%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (512 samples, 1.44%)</title><rect x="58.0758%" y="565" width="1.4387%" height="15" fill="rgb(217,13,45)"/><text x="58.3258%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (512 samples, 1.44%)</title><rect x="58.0758%" y="549" width="1.4387%" height="15" fill="rgb(211,216,49)"/><text x="58.3258%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (512 samples, 1.44%)</title><rect x="58.0758%" y="533" width="1.4387%" height="15" fill="rgb(221,58,53)"/><text x="58.3258%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (512 samples, 1.44%)</title><rect x="58.0758%" y="517" width="1.4387%" height="15" fill="rgb(220,112,41)"/><text x="58.3258%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (512 samples, 1.44%)</title><rect x="58.0758%" y="501" width="1.4387%" height="15" fill="rgb(236,38,28)"/><text x="58.3258%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (512 samples, 1.44%)</title><rect x="58.0758%" y="485" width="1.4387%" height="15" fill="rgb(227,195,22)"/><text x="58.3258%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (512 samples, 1.44%)</title><rect x="58.0758%" y="469" width="1.4387%" height="15" fill="rgb(214,55,33)"/><text x="58.3258%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (512 samples, 1.44%)</title><rect x="58.0758%" y="453" width="1.4387%" height="15" fill="rgb(248,80,13)"/><text x="58.3258%" y="463.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (512 samples, 1.44%)</title><rect x="58.0758%" y="437" width="1.4387%" height="15" fill="rgb(238,52,6)"/><text x="58.3258%" y="447.50"></text></g><g><title>__rg_realloc (512 samples, 1.44%)</title><rect x="58.0758%" y="421" width="1.4387%" height="15" fill="rgb(224,198,47)"/><text x="58.3258%" y="431.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (512 samples, 1.44%)</title><rect x="58.0758%" y="405" width="1.4387%" height="15" fill="rgb(233,171,20)"/><text x="58.3258%" y="415.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (512 samples, 1.44%)</title><rect x="58.0758%" y="389" width="1.4387%" height="15" fill="rgb(241,30,25)"/><text x="58.3258%" y="399.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (512 samples, 1.44%)</title><rect x="58.0758%" y="373" width="1.4387%" height="15" fill="rgb(207,171,38)"/><text x="58.3258%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (2,048 samples, 5.75%)</title><rect x="59.5144%" y="469" width="5.7547%" height="15" fill="rgb(234,70,1)"/><text x="59.7644%" y="479.50">&lt;alloc:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (2,048 samples, 5.75%)</title><rect x="59.5144%" y="453" width="5.7547%" height="15" fill="rgb(232,178,18)"/><text x="59.7644%" y="463.50">alloc::..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (2,048 samples, 5.75%)</title><rect x="59.5144%" y="437" width="5.7547%" height="15" fill="rgb(241,78,40)"/><text x="59.7644%" y="447.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (2,048 samples, 5.75%)</title><rect x="59.5144%" y="421" width="5.7547%" height="15" fill="rgb(222,35,25)"/><text x="59.7644%" y="431.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (2,048 samples, 5.75%)</title><rect x="59.5144%" y="405" width="5.7547%" height="15" fill="rgb(207,92,16)"/><text x="59.7644%" y="415.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (2,048 samples, 5.75%)</title><rect x="59.5144%" y="389" width="5.7547%" height="15" fill="rgb(216,59,51)"/><text x="59.7644%" y="399.50">&lt;alloc:..</text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (2,048 samples, 5.75%)</title><rect x="59.5144%" y="373" width="5.7547%" height="15" fill="rgb(213,80,28)"/><text x="59.7644%" y="383.50">alloc::..</text></g><g><title>__rg_realloc (2,048 samples, 5.75%)</title><rect x="59.5144%" y="357" width="5.7547%" height="15" fill="rgb(220,93,7)"/><text x="59.7644%" y="367.50">__rg_re..</text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (2,048 samples, 5.75%)</title><rect x="59.5144%" y="341" width="5.7547%" height="15" fill="rgb(225,24,44)"/><text x="59.7644%" y="351.50">core::a..</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (2,048 samples, 5.75%)</title><rect x="59.5144%" y="325" width="5.7547%" height="15" fill="rgb(243,74,40)"/><text x="59.7644%" y="335.50">&lt;cogito..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (2,048 samples, 5.75%)</title><rect x="59.5144%" y="309" width="5.7547%" height="15" fill="rgb(228,39,7)"/><text x="59.7644%" y="319.50">cogito:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hd38e573d66fa189a (2,052 samples, 5.77%)</title><rect x="59.5144%" y="869" width="5.7660%" height="15" fill="rgb(227,79,8)"/><text x="59.7644%" y="879.50">&lt;alloc:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h892b955fd48bcfa0 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="853" width="5.7660%" height="15" fill="rgb(236,58,11)"/><text x="59.7644%" y="863.50">alloc::..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="837" width="5.7660%" height="15" fill="rgb(249,63,35)"/><text x="59.7644%" y="847.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="821" width="5.7660%" height="15" fill="rgb(252,114,16)"/><text x="59.7644%" y="831.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="805" width="5.7660%" height="15" fill="rgb(254,151,24)"/><text x="59.7644%" y="815.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (2,052 samples, 5.77%)</title><rect x="59.5144%" y="789" width="5.7660%" height="15" fill="rgb(253,54,39)"/><text x="59.7644%" y="799.50">&lt;alloc:..</text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="773" width="5.7660%" height="15" fill="rgb(243,25,45)"/><text x="59.7644%" y="783.50">alloc::..</text></g><g><title>__rg_realloc (2,052 samples, 5.77%)</title><rect x="59.5144%" y="757" width="5.7660%" height="15" fill="rgb(234,134,9)"/><text x="59.7644%" y="767.50">__rg_re..</text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="741" width="5.7660%" height="15" fill="rgb(227,166,31)"/><text x="59.7644%" y="751.50">core::a..</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (2,052 samples, 5.77%)</title><rect x="59.5144%" y="725" width="5.7660%" height="15" fill="rgb(245,143,41)"/><text x="59.7644%" y="735.50">&lt;cogito..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="709" width="5.7660%" height="15" fill="rgb(238,181,32)"/><text x="59.7644%" y="719.50">cogito:..</text></g><g><title>Unknown (2,052 samples, 5.77%)</title><rect x="59.5144%" y="693" width="5.7660%" height="15" fill="rgb(224,113,18)"/><text x="59.7644%" y="703.50">Unknown</text></g><g><title>_start (2,052 samples, 5.77%)</title><rect x="59.5144%" y="677" width="5.7660%" height="15" fill="rgb(240,229,28)"/><text x="59.7644%" y="687.50">_start</text></g><g><title>__libc_start_main (2,052 samples, 5.77%)</title><rect x="59.5144%" y="661" width="5.7660%" height="15" fill="rgb(250,185,3)"/><text x="59.7644%" y="671.50">__libc_..</text></g><g><title>main (2,052 samples, 5.77%)</title><rect x="59.5144%" y="645" width="5.7660%" height="15" fill="rgb(212,59,25)"/><text x="59.7644%" y="655.50">main</text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="629" width="5.7660%" height="15" fill="rgb(221,87,20)"/><text x="59.7644%" y="639.50">std::rt..</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (2,052 samples, 5.77%)</title><rect x="59.5144%" y="613" width="5.7660%" height="15" fill="rgb(213,74,28)"/><text x="59.7644%" y="623.50">std::rt..</text></g><g><title>__rust_maybe_catch_panic (2,052 samples, 5.77%)</title><rect x="59.5144%" y="597" width="5.7660%" height="15" fill="rgb(224,132,34)"/><text x="59.7644%" y="607.50">__rust_..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="581" width="5.7660%" height="15" fill="rgb(222,101,24)"/><text x="59.7644%" y="591.50">std::pa..</text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (2,052 samples, 5.77%)</title><rect x="59.5144%" y="565" width="5.7660%" height="15" fill="rgb(254,142,4)"/><text x="59.7644%" y="575.50">std::rt..</text></g><g><title>alloc_free::main::h77183791c68e94c3 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="549" width="5.7660%" height="15" fill="rgb(230,229,49)"/><text x="59.7644%" y="559.50">alloc_f..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (2,052 samples, 5.77%)</title><rect x="59.5144%" y="533" width="5.7660%" height="15" fill="rgb(238,70,47)"/><text x="59.7644%" y="543.50">alloc_f..</text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="517" width="5.7660%" height="15" fill="rgb(231,160,17)"/><text x="59.7644%" y="527.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="501" width="5.7660%" height="15" fill="rgb(218,68,53)"/><text x="59.7644%" y="511.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (2,052 samples, 5.77%)</title><rect x="59.5144%" y="485" width="5.7660%" height="15" fill="rgb(236,111,10)"/><text x="59.7644%" y="495.50">&lt;alloc:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect::h94e997aa6cee0170 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="917" width="5.7660%" height="15" fill="rgb(224,34,41)"/><text x="59.7644%" y="927.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h35ddfba81097c259 (2,052 samples, 5.77%)</title><rect x="59.5144%" y="901" width="5.7660%" height="15" fill="rgb(241,118,19)"/><text x="59.7644%" y="911.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h893726bbdb20117f (2,052 samples, 5.77%)</title><rect x="59.5144%" y="885" width="5.7660%" height="15" fill="rgb(238,129,25)"/><text x="59.7644%" y="895.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (256 samples, 0.72%)</title><rect x="65.2804%" y="469" width="0.7193%" height="15" fill="rgb(238,22,31)"/><text x="65.5304%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (256 samples, 0.72%)</title><rect x="65.2804%" y="453" width="0.7193%" height="15" fill="rgb(222,174,48)"/><text x="65.5304%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (256 samples, 0.72%)</title><rect x="65.2804%" y="437" width="0.7193%" height="15" fill="rgb(206,152,40)"/><text x="65.5304%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (256 samples, 0.72%)</title><rect x="65.2804%" y="421" width="0.7193%" height="15" fill="rgb(218,99,54)"/><text x="65.5304%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (256 samples, 0.72%)</title><rect x="65.2804%" y="405" width="0.7193%" height="15" fill="rgb(220,174,26)"/><text x="65.5304%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (256 samples, 0.72%)</title><rect x="65.2804%" y="389" width="0.7193%" height="15" fill="rgb(245,116,9)"/><text x="65.5304%" y="399.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (256 samples, 0.72%)</title><rect x="65.2804%" y="373" width="0.7193%" height="15" fill="rgb(209,72,35)"/><text x="65.5304%" y="383.50"></text></g><g><title>__rg_realloc (256 samples, 0.72%)</title><rect x="65.2804%" y="357" width="0.7193%" height="15" fill="rgb(226,126,21)"/><text x="65.5304%" y="367.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (256 samples, 0.72%)</title><rect x="65.2804%" y="341" width="0.7193%" height="15" fill="rgb(227,192,1)"/><text x="65.5304%" y="351.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (256 samples, 0.72%)</title><rect x="65.2804%" y="325" width="0.7193%" height="15" fill="rgb(237,180,29)"/><text x="65.5304%" y="335.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (256 samples, 0.72%)</title><rect x="65.2804%" y="309" width="0.7193%" height="15" fill="rgb(230,197,35)"/><text x="65.5304%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::hf0611475fd125eb3 (260 samples, 0.73%)</title><rect x="65.2804%" y="869" width="0.7306%" height="15" fill="rgb(246,193,31)"/><text x="65.5304%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared::h1dfaa5912ba718ad (260 samples, 0.73%)</title><rect x="65.2804%" y="853" width="0.7306%" height="15" fill="rgb(241,36,4)"/><text x="65.5304%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (260 samples, 0.73%)</title><rect x="65.2804%" y="837" width="0.7306%" height="15" fill="rgb(241,130,17)"/><text x="65.5304%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (260 samples, 0.73%)</title><rect x="65.2804%" y="821" width="0.7306%" height="15" fill="rgb(206,137,32)"/><text x="65.5304%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (260 samples, 0.73%)</title><rect x="65.2804%" y="805" width="0.7306%" height="15" fill="rgb(237,228,51)"/><text x="65.5304%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (260 samples, 0.73%)</title><rect x="65.2804%" y="789" width="0.7306%" height="15" fill="rgb(243,6,42)"/><text x="65.5304%" y="799.50"></text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (260 samples, 0.73%)</title><rect x="65.2804%" y="773" width="0.7306%" height="15" fill="rgb(251,74,28)"/><text x="65.5304%" y="783.50"></text></g><g><title>__rg_realloc (260 samples, 0.73%)</title><rect x="65.2804%" y="757" width="0.7306%" height="15" fill="rgb(218,20,49)"/><text x="65.5304%" y="767.50"></text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (260 samples, 0.73%)</title><rect x="65.2804%" y="741" width="0.7306%" height="15" fill="rgb(238,28,14)"/><text x="65.5304%" y="751.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (260 samples, 0.73%)</title><rect x="65.2804%" y="725" width="0.7306%" height="15" fill="rgb(229,40,46)"/><text x="65.5304%" y="735.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (260 samples, 0.73%)</title><rect x="65.2804%" y="709" width="0.7306%" height="15" fill="rgb(244,195,20)"/><text x="65.5304%" y="719.50"></text></g><g><title>Unknown (260 samples, 0.73%)</title><rect x="65.2804%" y="693" width="0.7306%" height="15" fill="rgb(253,56,35)"/><text x="65.5304%" y="703.50"></text></g><g><title>_start (260 samples, 0.73%)</title><rect x="65.2804%" y="677" width="0.7306%" height="15" fill="rgb(210,149,44)"/><text x="65.5304%" y="687.50"></text></g><g><title>__libc_start_main (260 samples, 0.73%)</title><rect x="65.2804%" y="661" width="0.7306%" height="15" fill="rgb(240,135,12)"/><text x="65.5304%" y="671.50"></text></g><g><title>main (260 samples, 0.73%)</title><rect x="65.2804%" y="645" width="0.7306%" height="15" fill="rgb(251,24,50)"/><text x="65.5304%" y="655.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (260 samples, 0.73%)</title><rect x="65.2804%" y="629" width="0.7306%" height="15" fill="rgb(243,200,47)"/><text x="65.5304%" y="639.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (260 samples, 0.73%)</title><rect x="65.2804%" y="613" width="0.7306%" height="15" fill="rgb(224,166,26)"/><text x="65.5304%" y="623.50"></text></g><g><title>__rust_maybe_catch_panic (260 samples, 0.73%)</title><rect x="65.2804%" y="597" width="0.7306%" height="15" fill="rgb(233,0,47)"/><text x="65.5304%" y="607.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (260 samples, 0.73%)</title><rect x="65.2804%" y="581" width="0.7306%" height="15" fill="rgb(253,80,5)"/><text x="65.5304%" y="591.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (260 samples, 0.73%)</title><rect x="65.2804%" y="565" width="0.7306%" height="15" fill="rgb(214,133,25)"/><text x="65.5304%" y="575.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (260 samples, 0.73%)</title><rect x="65.2804%" y="549" width="0.7306%" height="15" fill="rgb(209,27,14)"/><text x="65.5304%" y="559.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (260 samples, 0.73%)</title><rect x="65.2804%" y="533" width="0.7306%" height="15" fill="rgb(219,102,51)"/><text x="65.5304%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (260 samples, 0.73%)</title><rect x="65.2804%" y="517" width="0.7306%" height="15" fill="rgb(237,18,16)"/><text x="65.5304%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (260 samples, 0.73%)</title><rect x="65.2804%" y="501" width="0.7306%" height="15" fill="rgb(241,85,17)"/><text x="65.5304%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (260 samples, 0.73%)</title><rect x="65.2804%" y="485" width="0.7306%" height="15" fill="rgb(236,90,42)"/><text x="65.5304%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::ha0a096ffbeacc8c1 (260 samples, 0.73%)</title><rect x="65.2804%" y="917" width="0.7306%" height="15" fill="rgb(249,57,21)"/><text x="65.5304%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::h65fb7e9a5d384093 (260 samples, 0.73%)</title><rect x="65.2804%" y="901" width="0.7306%" height="15" fill="rgb(243,12,36)"/><text x="65.5304%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h48f1e67157d74d30 (260 samples, 0.73%)</title><rect x="65.2804%" y="885" width="0.7306%" height="15" fill="rgb(253,128,47)"/><text x="65.5304%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (4,000 samples, 11.24%)</title><rect x="66.0110%" y="853" width="11.2397%" height="15" fill="rgb(207,33,20)"/><text x="66.2610%" y="863.50">alloc::vec::Vec&lt;T..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (4,000 samples, 11.24%)</title><rect x="66.0110%" y="837" width="11.2397%" height="15" fill="rgb(233,215,35)"/><text x="66.2610%" y="847.50">alloc::raw_vec::R..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (4,000 samples, 11.24%)</title><rect x="66.0110%" y="821" width="11.2397%" height="15" fill="rgb(249,188,52)"/><text x="66.2610%" y="831.50">alloc::raw_vec::R..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc::h6cffe83be2bbe610 (4,000 samples, 11.24%)</title><rect x="66.0110%" y="805" width="11.2397%" height="15" fill="rgb(225,12,32)"/><text x="66.2610%" y="815.50">&lt;alloc::alloc::Gl..</text></g><g><title>alloc::alloc::alloc::hb992b77ffe933998 (4,000 samples, 11.24%)</title><rect x="66.0110%" y="789" width="11.2397%" height="15" fill="rgb(247,98,14)"/><text x="66.2610%" y="799.50">alloc::alloc::all..</text></g><g><title>__rg_alloc (4,000 samples, 11.24%)</title><rect x="66.0110%" y="773" width="11.2397%" height="15" fill="rgb(247,219,48)"/><text x="66.2610%" y="783.50">__rg_alloc</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (4,000 samples, 11.24%)</title><rect x="66.0110%" y="757" width="11.2397%" height="15" fill="rgb(253,60,48)"/><text x="66.2610%" y="767.50">&lt;cogito::AllocRec..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (4,000 samples, 11.24%)</title><rect x="66.0110%" y="741" width="11.2397%" height="15" fill="rgb(245,15,52)"/><text x="66.2610%" y="751.50">cogito::get_backt..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h5b5906b74b21a74e (444 samples, 1.25%)</title><rect x="77.2508%" y="821" width="1.2476%" height="15" fill="rgb(220,133,28)"/><text x="77.5008%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ha0cdcc702f5dc9c1 (444 samples, 1.25%)</title><rect x="77.2508%" y="805" width="1.2476%" height="15" fill="rgb(217,180,4)"/><text x="77.5008%" y="815.50"></text></g><g><title>core::ptr::real_drop_in_place::h1cf8390ffe354c7f (444 samples, 1.25%)</title><rect x="77.2508%" y="789" width="1.2476%" height="15" fill="rgb(251,24,1)"/><text x="77.5008%" y="799.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop::he6982a417c2b7a08 (444 samples, 1.25%)</title><rect x="77.2508%" y="773" width="1.2476%" height="15" fill="rgb(212,185,49)"/><text x="77.5008%" y="783.50"></text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (444 samples, 1.25%)</title><rect x="77.2508%" y="757" width="1.2476%" height="15" fill="rgb(215,175,22)"/><text x="77.5008%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (444 samples, 1.25%)</title><rect x="77.2508%" y="741" width="1.2476%" height="15" fill="rgb(250,205,14)"/><text x="77.5008%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (444 samples, 1.25%)</title><rect x="77.2508%" y="725" width="1.2476%" height="15" fill="rgb(225,211,22)"/><text x="77.5008%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (444 samples, 1.25%)</title><rect x="77.2508%" y="709" width="1.2476%" height="15" fill="rgb(251,179,42)"/><text x="77.5008%" y="719.50"></text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (444 samples, 1.25%)</title><rect x="77.2508%" y="693" width="1.2476%" height="15" fill="rgb(208,216,51)"/><text x="77.5008%" y="703.50"></text></g><g><title>__rg_dealloc (444 samples, 1.25%)</title><rect x="77.2508%" y="677" width="1.2476%" height="15" fill="rgb(235,36,11)"/><text x="77.5008%" y="687.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (444 samples, 1.25%)</title><rect x="77.2508%" y="661" width="1.2476%" height="15" fill="rgb(213,189,28)"/><text x="77.5008%" y="671.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (444 samples, 1.25%)</title><rect x="77.2508%" y="645" width="1.2476%" height="15" fill="rgb(227,203,42)"/><text x="77.5008%" y="655.50"></text></g><g><title>Unknown (444 samples, 1.25%)</title><rect x="77.2508%" y="629" width="1.2476%" height="15" fill="rgb(244,72,36)"/><text x="77.5008%" y="639.50"></text></g><g><title>_start (444 samples, 1.25%)</title><rect x="77.2508%" y="613" width="1.2476%" height="15" fill="rgb(213,53,17)"/><text x="77.5008%" y="623.50"></text></g><g><title>__libc_start_main (444 samples, 1.25%)</title><rect x="77.2508%" y="597" width="1.2476%" height="15" fill="rgb(207,167,3)"/><text x="77.5008%" y="607.50"></text></g><g><title>main (444 samples, 1.25%)</title><rect x="77.2508%" y="581" width="1.2476%" height="15" fill="rgb(216,98,30)"/><text x="77.5008%" y="591.50"></text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (444 samples, 1.25%)</title><rect x="77.2508%" y="565" width="1.2476%" height="15" fill="rgb(236,123,15)"/><text x="77.5008%" y="575.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (444 samples, 1.25%)</title><rect x="77.2508%" y="549" width="1.2476%" height="15" fill="rgb(248,81,50)"/><text x="77.5008%" y="559.50"></text></g><g><title>__rust_maybe_catch_panic (444 samples, 1.25%)</title><rect x="77.2508%" y="533" width="1.2476%" height="15" fill="rgb(214,120,4)"/><text x="77.5008%" y="543.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (444 samples, 1.25%)</title><rect x="77.2508%" y="517" width="1.2476%" height="15" fill="rgb(208,179,34)"/><text x="77.5008%" y="527.50"></text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (444 samples, 1.25%)</title><rect x="77.2508%" y="501" width="1.2476%" height="15" fill="rgb(227,140,7)"/><text x="77.5008%" y="511.50"></text></g><g><title>alloc_free::main::h77183791c68e94c3 (444 samples, 1.25%)</title><rect x="77.2508%" y="485" width="1.2476%" height="15" fill="rgb(214,22,6)"/><text x="77.5008%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (444 samples, 1.25%)</title><rect x="77.2508%" y="469" width="1.2476%" height="15" fill="rgb(207,137,27)"/><text x="77.5008%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (440 samples, 1.24%)</title><rect x="77.2620%" y="453" width="1.2364%" height="15" fill="rgb(210,8,46)"/><text x="77.5120%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (440 samples, 1.24%)</title><rect x="77.2620%" y="437" width="1.2364%" height="15" fill="rgb(240,16,54)"/><text x="77.5120%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (440 samples, 1.24%)</title><rect x="77.2620%" y="421" width="1.2364%" height="15" fill="rgb(211,209,29)"/><text x="77.5120%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (440 samples, 1.24%)</title><rect x="77.2620%" y="405" width="1.2364%" height="15" fill="rgb(226,228,24)"/><text x="77.5120%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (440 samples, 1.24%)</title><rect x="77.2620%" y="389" width="1.2364%" height="15" fill="rgb(222,84,9)"/><text x="77.5120%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (440 samples, 1.24%)</title><rect x="77.2620%" y="373" width="1.2364%" height="15" fill="rgb(234,203,30)"/><text x="77.5120%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (440 samples, 1.24%)</title><rect x="77.2620%" y="357" width="1.2364%" height="15" fill="rgb(238,109,14)"/><text x="77.5120%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (440 samples, 1.24%)</title><rect x="77.2620%" y="341" width="1.2364%" height="15" fill="rgb(233,206,34)"/><text x="77.5120%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc::h6cffe83be2bbe610 (440 samples, 1.24%)</title><rect x="77.2620%" y="325" width="1.2364%" height="15" fill="rgb(220,167,47)"/><text x="77.5120%" y="335.50"></text></g><g><title>alloc::alloc::alloc::hb992b77ffe933998 (440 samples, 1.24%)</title><rect x="77.2620%" y="309" width="1.2364%" height="15" fill="rgb(238,105,10)"/><text x="77.5120%" y="319.50"></text></g><g><title>__rg_alloc (440 samples, 1.24%)</title><rect x="77.2620%" y="293" width="1.2364%" height="15" fill="rgb(213,227,17)"/><text x="77.5120%" y="303.50"></text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (440 samples, 1.24%)</title><rect x="77.2620%" y="277" width="1.2364%" height="15" fill="rgb(217,132,38)"/><text x="77.5120%" y="287.50"></text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (440 samples, 1.24%)</title><rect x="77.2620%" y="261" width="1.2364%" height="15" fill="rgb(242,146,4)"/><text x="77.5120%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (8,000 samples, 22.48%)</title><rect x="66.0110%" y="917" width="22.4795%" height="15" fill="rgb(212,61,9)"/><text x="66.2610%" y="927.50">core::iter::traits::iterator::Iterat..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (8,000 samples, 22.48%)</title><rect x="66.0110%" y="901" width="22.4795%" height="15" fill="rgb(247,126,22)"/><text x="66.2610%" y="911.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::t..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (8,000 samples, 22.48%)</title><rect x="66.0110%" y="885" width="22.4795%" height="15" fill="rgb(220,196,2)"/><text x="66.2610%" y="895.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::S..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (8,000 samples, 22.48%)</title><rect x="66.0110%" y="869" width="22.4795%" height="15" fill="rgb(208,46,4)"/><text x="66.2610%" y="879.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::S..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::h3585e3f2b748c15f (4,000 samples, 11.24%)</title><rect x="77.2508%" y="853" width="11.2397%" height="15" fill="rgb(252,104,46)"/><text x="77.5008%" y="863.50">core::iter::trait..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h795708515757aa64 (4,000 samples, 11.24%)</title><rect x="77.2508%" y="837" width="11.2397%" height="15" fill="rgb(237,152,48)"/><text x="77.5008%" y="847.50">&lt;core::iter::adap..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::h3dc055e1da02411d (3,556 samples, 9.99%)</title><rect x="78.4984%" y="821" width="9.9921%" height="15" fill="rgb(221,59,37)"/><text x="78.7484%" y="831.50">core::iter::tr..</text></g><g><title>core::ptr::real_drop_in_place::h1cf8390ffe354c7f (3,556 samples, 9.99%)</title><rect x="78.4984%" y="805" width="9.9921%" height="15" fill="rgb(209,202,51)"/><text x="78.7484%" y="815.50">core::ptr::rea..</text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop::he6982a417c2b7a08 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="789" width="9.9921%" height="15" fill="rgb(228,81,30)"/><text x="78.7484%" y="799.50">&lt;alloc::vec::I..</text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (3,556 samples, 9.99%)</title><rect x="78.4984%" y="773" width="9.9921%" height="15" fill="rgb(227,42,39)"/><text x="78.7484%" y="783.50">core::ptr::rea..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="757" width="9.9921%" height="15" fill="rgb(221,26,2)"/><text x="78.7484%" y="767.50">&lt;alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="741" width="9.9921%" height="15" fill="rgb(254,61,31)"/><text x="78.7484%" y="751.50">alloc::raw_vec..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="725" width="9.9921%" height="15" fill="rgb(222,173,38)"/><text x="78.7484%" y="735.50">&lt;alloc::alloc:..</text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (3,556 samples, 9.99%)</title><rect x="78.4984%" y="709" width="9.9921%" height="15" fill="rgb(218,50,12)"/><text x="78.7484%" y="719.50">alloc::alloc::..</text></g><g><title>__rg_dealloc (3,556 samples, 9.99%)</title><rect x="78.4984%" y="693" width="9.9921%" height="15" fill="rgb(223,88,40)"/><text x="78.7484%" y="703.50">__rg_dealloc</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (3,556 samples, 9.99%)</title><rect x="78.4984%" y="677" width="9.9921%" height="15" fill="rgb(237,54,19)"/><text x="78.7484%" y="687.50">&lt;cogito::Alloc..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="661" width="9.9921%" height="15" fill="rgb(251,129,25)"/><text x="78.7484%" y="671.50">cogito::get_ba..</text></g><g><title>Unknown (3,556 samples, 9.99%)</title><rect x="78.4984%" y="645" width="9.9921%" height="15" fill="rgb(238,97,19)"/><text x="78.7484%" y="655.50">Unknown</text></g><g><title>_start (3,556 samples, 9.99%)</title><rect x="78.4984%" y="629" width="9.9921%" height="15" fill="rgb(240,169,18)"/><text x="78.7484%" y="639.50">_start</text></g><g><title>__libc_start_main (3,556 samples, 9.99%)</title><rect x="78.4984%" y="613" width="9.9921%" height="15" fill="rgb(230,187,49)"/><text x="78.7484%" y="623.50">__libc_start_m..</text></g><g><title>main (3,556 samples, 9.99%)</title><rect x="78.4984%" y="597" width="9.9921%" height="15" fill="rgb(209,44,26)"/><text x="78.7484%" y="607.50">main</text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="581" width="9.9921%" height="15" fill="rgb(244,0,6)"/><text x="78.7484%" y="591.50">std::rt::lang_..</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (3,556 samples, 9.99%)</title><rect x="78.4984%" y="565" width="9.9921%" height="15" fill="rgb(248,18,21)"/><text x="78.7484%" y="575.50">std::rt::lang_..</text></g><g><title>__rust_maybe_catch_panic (3,556 samples, 9.99%)</title><rect x="78.4984%" y="549" width="9.9921%" height="15" fill="rgb(245,180,19)"/><text x="78.7484%" y="559.50">__rust_maybe_c..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="533" width="9.9921%" height="15" fill="rgb(252,118,36)"/><text x="78.7484%" y="543.50">std::panicking..</text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (3,556 samples, 9.99%)</title><rect x="78.4984%" y="517" width="9.9921%" height="15" fill="rgb(210,224,19)"/><text x="78.7484%" y="527.50">std::rt::lang_..</text></g><g><title>alloc_free::main::h77183791c68e94c3 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="501" width="9.9921%" height="15" fill="rgb(218,30,24)"/><text x="78.7484%" y="511.50">alloc_free::ma..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (3,556 samples, 9.99%)</title><rect x="78.4984%" y="485" width="9.9921%" height="15" fill="rgb(219,75,50)"/><text x="78.7484%" y="495.50">alloc_free::qu..</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (3,556 samples, 9.99%)</title><rect x="78.4984%" y="469" width="9.9921%" height="15" fill="rgb(234,72,50)"/><text x="78.7484%" y="479.50">alloc_free::qu..</text></g><g><title>core::iter::traits::iterator::Iterator::collect::hd45909d5527678ef (3,556 samples, 9.99%)</title><rect x="78.4984%" y="453" width="9.9921%" height="15" fill="rgb(219,100,48)"/><text x="78.7484%" y="463.50">core::iter::tr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter::hff3f58b59ba4950f (3,556 samples, 9.99%)</title><rect x="78.4984%" y="437" width="9.9921%" height="15" fill="rgb(253,5,41)"/><text x="78.7484%" y="447.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::hdd15d061390de902 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="421" width="9.9921%" height="15" fill="rgb(247,181,11)"/><text x="78.7484%" y="431.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::h0fe0d9165a402fcf (3,556 samples, 9.99%)</title><rect x="78.4984%" y="405" width="9.9921%" height="15" fill="rgb(222,223,25)"/><text x="78.7484%" y="415.50">&lt;alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="389" width="9.9921%" height="15" fill="rgb(214,198,28)"/><text x="78.7484%" y="399.50">alloc::vec::Ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="373" width="9.9921%" height="15" fill="rgb(230,46,43)"/><text x="78.7484%" y="383.50">alloc::raw_vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="357" width="9.9921%" height="15" fill="rgb(233,65,53)"/><text x="78.7484%" y="367.50">alloc::raw_vec..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc::h6cffe83be2bbe610 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="341" width="9.9921%" height="15" fill="rgb(221,121,27)"/><text x="78.7484%" y="351.50">&lt;alloc::alloc:..</text></g><g><title>alloc::alloc::alloc::hb992b77ffe933998 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="325" width="9.9921%" height="15" fill="rgb(247,70,47)"/><text x="78.7484%" y="335.50">alloc::alloc::..</text></g><g><title>__rg_alloc (3,556 samples, 9.99%)</title><rect x="78.4984%" y="309" width="9.9921%" height="15" fill="rgb(228,85,35)"/><text x="78.7484%" y="319.50">__rg_alloc</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="293" width="9.9921%" height="15" fill="rgb(209,50,18)"/><text x="78.7484%" y="303.50">&lt;cogito::Alloc..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (3,556 samples, 9.99%)</title><rect x="78.4984%" y="277" width="9.9921%" height="15" fill="rgb(250,19,35)"/><text x="78.7484%" y="287.50">cogito::get_ba..</text></g><g><title>all (35,588 samples, 100%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(253,107,29)"/><text x="0.2500%" y="1119.50"></text></g><g><title>Unknown (35,588 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(252,179,29)"/><text x="0.2500%" y="1103.50">Unknown</text></g><g><title>_start (35,588 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(238,194,6)"/><text x="0.2500%" y="1087.50">_start</text></g><g><title>__libc_start_main (35,588 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(238,164,29)"/><text x="0.2500%" y="1071.50">__libc_start_main</text></g><g><title>main (35,588 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(224,25,9)"/><text x="0.2500%" y="1055.50">main</text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (35,588 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(244,153,23)"/><text x="0.2500%" y="1039.50">std::rt::lang_start::h8769ddc666803f00</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (35,588 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(212,203,14)"/><text x="0.2500%" y="1023.50">std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce</text></g><g><title>__rust_maybe_catch_panic (35,588 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(220,164,20)"/><text x="0.2500%" y="1007.50">__rust_maybe_catch_panic</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (35,588 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(222,203,48)"/><text x="0.2500%" y="991.50">std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0</text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (35,588 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(215,159,22)"/><text x="0.2500%" y="975.50">std::rt::lang_start::{{closure}}::hec053916d3ae1e1e</text></g><g><title>alloc_free::main::h77183791c68e94c3 (35,588 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(216,183,47)"/><text x="0.2500%" y="959.50">alloc_free::main::h77183791c68e94c3</text></g><g><title>alloc_free::quick_sort::h5cfe105b9bd1f52c (33,536 samples, 94.23%)</title><rect x="5.7660%" y="933" width="94.2340%" height="15" fill="rgb(229,195,25)"/><text x="6.0160%" y="943.50">alloc_free::quick_sort::h5cfe105b9bd1f52c</text></g><g><title>core::ptr::real_drop_in_place::h065749e7cfc69f30 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="917" width="11.5095%" height="15" fill="rgb(224,132,51)"/><text x="88.7405%" y="927.50">core::ptr::real_d..</text></g><g><title>core::ptr::real_drop_in_place::hdf6847e33e909dac (4,096 samples, 11.51%)</title><rect x="88.4905%" y="901" width="11.5095%" height="15" fill="rgb(240,63,7)"/><text x="88.7405%" y="911.50">core::ptr::real_d..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::haaa0657336c0eee3 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="885" width="11.5095%" height="15" fill="rgb(249,182,41)"/><text x="88.7405%" y="895.50">&lt;alloc::raw_vec::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer::h97ff2accd4552468 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="869" width="11.5095%" height="15" fill="rgb(243,47,26)"/><text x="88.7405%" y="879.50">alloc::raw_vec::R..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc::h3da61a103a0cab61 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="853" width="11.5095%" height="15" fill="rgb(233,48,2)"/><text x="88.7405%" y="863.50">&lt;alloc::alloc::Gl..</text></g><g><title>alloc::alloc::dealloc::h48fd5538d7ea515b (4,096 samples, 11.51%)</title><rect x="88.4905%" y="837" width="11.5095%" height="15" fill="rgb(244,165,34)"/><text x="88.7405%" y="847.50">alloc::alloc::dea..</text></g><g><title>__rg_dealloc (4,096 samples, 11.51%)</title><rect x="88.4905%" y="821" width="11.5095%" height="15" fill="rgb(207,89,7)"/><text x="88.7405%" y="831.50">__rg_dealloc</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::dealloc::h2f5e4df71bfe129c (4,096 samples, 11.51%)</title><rect x="88.4905%" y="805" width="11.5095%" height="15" fill="rgb(244,117,36)"/><text x="88.7405%" y="815.50">&lt;cogito::AllocRec..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="789" width="11.5095%" height="15" fill="rgb(226,144,34)"/><text x="88.7405%" y="799.50">cogito::get_backt..</text></g><g><title>Unknown (4,096 samples, 11.51%)</title><rect x="88.4905%" y="773" width="11.5095%" height="15" fill="rgb(213,23,19)"/><text x="88.7405%" y="783.50">Unknown</text></g><g><title>_start (4,096 samples, 11.51%)</title><rect x="88.4905%" y="757" width="11.5095%" height="15" fill="rgb(217,75,12)"/><text x="88.7405%" y="767.50">_start</text></g><g><title>__libc_start_main (4,096 samples, 11.51%)</title><rect x="88.4905%" y="741" width="11.5095%" height="15" fill="rgb(224,159,17)"/><text x="88.7405%" y="751.50">__libc_start_main</text></g><g><title>main (4,096 samples, 11.51%)</title><rect x="88.4905%" y="725" width="11.5095%" height="15" fill="rgb(217,118,1)"/><text x="88.7405%" y="735.50">main</text></g><g><title>std::rt::lang_start::h8769ddc666803f00 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="709" width="11.5095%" height="15" fill="rgb(232,180,48)"/><text x="88.7405%" y="719.50">std::rt::lang_sta..</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (4,096 samples, 11.51%)</title><rect x="88.4905%" y="693" width="11.5095%" height="15" fill="rgb(230,27,33)"/><text x="88.7405%" y="703.50">std::rt::lang_sta..</text></g><g><title>__rust_maybe_catch_panic (4,096 samples, 11.51%)</title><rect x="88.4905%" y="677" width="11.5095%" height="15" fill="rgb(205,31,21)"/><text x="88.7405%" y="687.50">__rust_maybe_catc..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="661" width="11.5095%" height="15" fill="rgb(253,59,4)"/><text x="88.7405%" y="671.50">std::panicking::t..</text></g><g><title>std::rt::lang_start::{{closure}}::hec053916d3ae1e1e (4,096 samples, 11.51%)</title><rect x="88.4905%" y="645" width="11.5095%" height="15" fill="rgb(224,201,9)"/><text x="88.7405%" y="655.50">std::rt::lang_sta..</text></g><g><title>alloc_free::main::h77183791c68e94c3 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="629" width="11.5095%" height="15" fill="rgb(229,206,30)"/><text x="88.7405%" y="639.50">alloc_free::main:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::push::h3944fd884ea9bef2 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="613" width="11.5095%" height="15" fill="rgb(212,67,47)"/><text x="88.7405%" y="623.50">alloc::vec::Vec&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve::h69e15af7d29acbf0 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="597" width="11.5095%" height="15" fill="rgb(211,96,50)"/><text x="88.7405%" y="607.50">alloc::vec::Vec&lt;T..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::h99fbe71b6b66bb49 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="581" width="11.5095%" height="15" fill="rgb(252,114,18)"/><text x="88.7405%" y="591.50">alloc::raw_vec::R..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal::h0ea904ea9dc449f5 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="565" width="11.5095%" height="15" fill="rgb(223,58,37)"/><text x="88.7405%" y="575.50">alloc::raw_vec::R..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc::heaa8bdeac49e928d (4,096 samples, 11.51%)</title><rect x="88.4905%" y="549" width="11.5095%" height="15" fill="rgb(237,70,4)"/><text x="88.7405%" y="559.50">&lt;alloc::alloc::Gl..</text></g><g><title>alloc::alloc::realloc::h58a929d6847f2407 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="533" width="11.5095%" height="15" fill="rgb(244,85,46)"/><text x="88.7405%" y="543.50">alloc::alloc::rea..</text></g><g><title>__rg_realloc (4,096 samples, 11.51%)</title><rect x="88.4905%" y="517" width="11.5095%" height="15" fill="rgb(223,39,52)"/><text x="88.7405%" y="527.50">__rg_realloc</text></g><g><title>core::alloc::GlobalAlloc::realloc::h0aa4fbfae1e58883 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="501" width="11.5095%" height="15" fill="rgb(218,200,14)"/><text x="88.7405%" y="511.50">core::alloc::Glob..</text></g><g><title>&lt;cogito::AllocRecorder&lt;T&gt; as core::alloc::GlobalAlloc&gt;::alloc::h7f423f8a4331de58 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="485" width="11.5095%" height="15" fill="rgb(208,171,16)"/><text x="88.7405%" y="495.50">&lt;cogito::AllocRec..</text></g><g><title>cogito::get_backtrace::h1cd76ab8b0294941 (4,096 samples, 11.51%)</title><rect x="88.4905%" y="469" width="11.5095%" height="15" fill="rgb(234,200,18)"/><text x="88.7405%" y="479.50">cogito::get_backt..</text></g></svg></svg>
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1158" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1141.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1141.00"> </text><svg id="frames" x="10" width="1180"><g><title>__rg_realloc (2,052 samples, 5.87%)</title><rect x="0.0000%" y="949" width="5.8729%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="959.50">__rg_re..</text></g><g><title>Unknown (2,052 samples, 5.87%)</title><rect x="0.0000%" y="933" width="5.8729%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="943.50">Unknown</text></g><g><title>_start (2,052 samples, 5.87%)</title><rect x="0.0000%" y="917" width="5.8729%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="927.50">_start</text></g><g><title>__libc_start_main (2,052 samples, 5.87%)</title><rect x="0.0000%" y="901" width="5.8729%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="911.50">__libc_..</text></g><g><title>main (2,052 samples, 5.87%)</title><rect x="0.0000%" y="885" width="5.8729%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (2,052 samples, 5.87%)</title><rect x="0.0000%" y="869" width="5.8729%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="879.50">std::rt..</text></g><g><title>__rust_maybe_catch_panic (2,052 samples, 5.87%)</title><rect x="0.0000%" y="853" width="5.8729%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="863.50">__rust_..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (2,052 samples, 5.87%)</title><rect x="0.0000%" y="837" width="5.8729%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="847.50">std::pa..</text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (2,052 samples, 5.87%)</title><rect x="0.0000%" y="821" width="5.8729%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="831.50">std::rt..</text></g><g><title>alloc_free::main::hc80b97a251692aa3 (2,052 samples, 5.87%)</title><rect x="0.0000%" y="805" width="5.8729%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="815.50">alloc_f..</text></g><g><title>__rg_realloc (2,048 samples, 5.86%)</title><rect x="0.0114%" y="789" width="5.8615%" height="15" fill="rgb(250,228,42)"/><text x="0.2614%" y="799.50">__rg_re..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (516 samples, 1.48%)</title><rect x="5.8729%" y="933" width="1.4768%" height="15" fill="rgb(240,193,28)"/><text x="6.1229%" y="943.50"></text></g><g><title>__rg_realloc (516 samples, 1.48%)</title><rect x="5.8729%" y="917" width="1.4768%" height="15" fill="rgb(216,20,37)"/><text x="6.1229%" y="927.50"></text></g><g><title>Unknown (516 samples, 1.48%)</title><rect x="5.8729%" y="901" width="1.4768%" height="15" fill="rgb(206,188,39)"/><text x="6.1229%" y="911.50"></text></g><g><title>_start (516 samples, 1.48%)</title><rect x="5.8729%" y="885" width="1.4768%" height="15" fill="rgb(217,207,13)"/><text x="6.1229%" y="895.50"></text></g><g><title>__libc_start_main (516 samples, 1.48%)</title><rect x="5.8729%" y="869" width="1.4768%" height="15" fill="rgb(231,73,38)"/><text x="6.1229%" y="879.50"></text></g><g><title>main (516 samples, 1.48%)</title><rect x="5.8729%" y="853" width="1.4768%" height="15" fill="rgb(225,20,46)"/><text x="6.1229%" y="863.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (516 samples, 1.48%)</title><rect x="5.8729%" y="837" width="1.4768%" height="15" fill="rgb(210,31,41)"/><text x="6.1229%" y="847.50"></text></g><g><title>__rust_maybe_catch_panic (516 samples, 1.48%)</title><rect x="5.8729%" y="821" width="1.4768%" height="15" fill="rgb(221,200,47)"/><text x="6.1229%" y="831.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (516 samples, 1.48%)</title><rect x="5.8729%" y="805" width="1.4768%" height="15" fill="rgb(226,26,5)"/><text x="6.1229%" y="815.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (516 samples, 1.48%)</title><rect x="5.8729%" y="789" width="1.4768%" height="15" fill="rgb(249,33,26)"/><text x="6.1229%" y="799.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (516 samples, 1.48%)</title><rect x="5.8729%" y="773" width="1.4768%" height="15" fill="rgb(235,183,28)"/><text x="6.1229%" y="783.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (516 samples, 1.48%)</title><rect x="5.8729%" y="757" width="1.4768%" height="15" fill="rgb(221,5,38)"/><text x="6.1229%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (516 samples, 1.48%)</title><rect x="5.8729%" y="741" width="1.4768%" height="15" fill="rgb(247,18,42)"/><text x="6.1229%" y="751.50"></text></g><g><title>__rg_realloc (512 samples, 1.47%)</title><rect x="5.8844%" y="725" width="1.4654%" height="15" fill="rgb(241,131,45)"/><text x="6.1344%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (7,244 samples, 20.73%)</title><rect x="7.3497%" y="933" width="20.7327%" height="15" fill="rgb(249,31,29)"/><text x="7.5997%" y="943.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h260bd8b6ecb4ec80 (3,244 samples, 9.28%)</title><rect x="18.7979%" y="917" width="9.2845%" height="15" fill="rgb(225,111,53)"/><text x="19.0479%" y="927.50">&lt;core::iter::..</text></g><g><title>Unknown (3,244 samples, 9.28%)</title><rect x="18.7979%" y="901" width="9.2845%" height="15" fill="rgb(238,160,17)"/><text x="19.0479%" y="911.50">Unknown</text></g><g><title>_start (3,244 samples, 9.28%)</title><rect x="18.7979%" y="885" width="9.2845%" height="15" fill="rgb(214,148,48)"/><text x="19.0479%" y="895.50">_start</text></g><g><title>__libc_start_main (3,244 samples, 9.28%)</title><rect x="18.7979%" y="869" width="9.2845%" height="15" fill="rgb(232,36,49)"/><text x="19.0479%" y="879.50">__libc_start_..</text></g><g><title>main (3,244 samples, 9.28%)</title><rect x="18.7979%" y="853" width="9.2845%" height="15" fill="rgb(209,103,24)"/><text x="19.0479%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (3,244 samples, 9.28%)</title><rect x="18.7979%" y="837" width="9.2845%" height="15" fill="rgb(229,88,8)"/><text x="19.0479%" y="847.50">std::rt::lang..</text></g><g><title>__rust_maybe_catch_panic (3,244 samples, 9.28%)</title><rect x="18.7979%" y="821" width="9.2845%" height="15" fill="rgb(213,181,19)"/><text x="19.0479%" y="831.50">__rust_maybe_..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (3,244 samples, 9.28%)</title><rect x="18.7979%" y="805" width="9.2845%" height="15" fill="rgb(254,191,54)"/><text x="19.0479%" y="815.50">std::panickin..</text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (3,244 samples, 9.28%)</title><rect x="18.7979%" y="789" width="9.2845%" height="15" fill="rgb(241,83,37)"/><text x="19.0479%" y="799.50">std::rt::lang..</text></g><g><title>alloc_free::main::hc80b97a251692aa3 (3,244 samples, 9.28%)</title><rect x="18.7979%" y="773" width="9.2845%" height="15" fill="rgb(233,36,39)"/><text x="19.0479%" y="783.50">alloc_free::m..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (3,244 samples, 9.28%)</title><rect x="18.7979%" y="757" width="9.2845%" height="15" fill="rgb(226,3,54)"/><text x="19.0479%" y="767.50">alloc_free::q..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (3,240 samples, 9.27%)</title><rect x="18.8094%" y="741" width="9.2730%" height="15" fill="rgb(245,192,40)"/><text x="19.0594%" y="751.50">alloc_free::q..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (3,240 samples, 9.27%)</title><rect x="18.8094%" y="725" width="9.2730%" height="15" fill="rgb(238,167,29)"/><text x="19.0594%" y="735.50">&lt;alloc::vec::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (2,052 samples, 5.87%)</title><rect x="28.0824%" y="933" width="5.8729%" height="15" fill="rgb(232,182,51)"/><text x="28.3324%" y="943.50">&lt;alloc:..</text></g><g><title>__rg_realloc (2,052 samples, 5.87%)</title><rect x="28.0824%" y="917" width="5.8729%" height="15" fill="rgb(231,60,39)"/><text x="28.3324%" y="927.50">__rg_re..</text></g><g><title>Unknown (2,052 samples, 5.87%)</title><rect x="28.0824%" y="901" width="5.8729%" height="15" fill="rgb(208,69,12)"/><text x="28.3324%" y="911.50">Unknown</text></g><g><title>_start (2,052 samples, 5.87%)</title><rect x="28.0824%" y="885" width="5.8729%" height="15" fill="rgb(235,93,37)"/><text x="28.3324%" y="895.50">_start</text></g><g><title>__libc_start_main (2,052 samples, 5.87%)</title><rect x="28.0824%" y="869" width="5.8729%" height="15" fill="rgb(213,116,39)"/><text x="28.3324%" y="879.50">__libc_..</text></g><g><title>main (2,052 samples, 5.87%)</title><rect x="28.0824%" y="853" width="5.8729%" height="15" fill="rgb(222,207,29)"/><text x="28.3324%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (2,052 samples, 5.87%)</title><rect x="28.0824%" y="837" width="5.8729%" height="15" fill="rgb(206,96,30)"/><text x="28.3324%" y="847.50">std::rt..</text></g><g><title>__rust_maybe_catch_panic (2,052 samples, 5.87%)</title><rect x="28.0824%" y="821" width="5.8729%" height="15" fill="rgb(218,138,4)"/><text x="28.3324%" y="831.50">__rust_..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (2,052 samples, 5.87%)</title><rect x="28.0824%" y="805" width="5.8729%" height="15" fill="rgb(250,191,14)"/><text x="28.3324%" y="815.50">std::pa..</text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (2,052 samples, 5.87%)</title><rect x="28.0824%" y="789" width="5.8729%" height="15" fill="rgb(239,60,40)"/><text x="28.3324%" y="799.50">std::rt..</text></g><g><title>alloc_free::main::hc80b97a251692aa3 (2,052 samples, 5.87%)</title><rect x="28.0824%" y="773" width="5.8729%" height="15" fill="rgb(206,27,48)"/><text x="28.3324%" y="783.50">alloc_f..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (2,052 samples, 5.87%)</title><rect x="28.0824%" y="757" width="5.8729%" height="15" fill="rgb(225,35,8)"/><text x="28.3324%" y="767.50">alloc_f..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (2,052 samples, 5.87%)</title><rect x="28.0824%" y="741" width="5.8729%" height="15" fill="rgb(250,213,24)"/><text x="28.3324%" y="751.50">&lt;alloc:..</text></g><g><title>__rg_realloc (2,048 samples, 5.86%)</title><rect x="28.0939%" y="725" width="5.8615%" height="15" fill="rgb(247,123,22)"/><text x="28.3439%" y="735.50">__rg_re..</text></g><g><title>Unknown (4,096 samples, 11.72%)</title><rect x="33.9554%" y="933" width="11.7230%" height="15" fill="rgb(231,138,38)"/><text x="34.2054%" y="943.50">Unknown</text></g><g><title>_start (4,096 samples, 11.72%)</title><rect x="33.9554%" y="917" width="11.7230%" height="15" fill="rgb(231,145,46)"/><text x="34.2054%" y="927.50">_start</text></g><g><title>__libc_start_main (4,096 samples, 11.72%)</title><rect x="33.9554%" y="901" width="11.7230%" height="15" fill="rgb(251,118,11)"/><text x="34.2054%" y="911.50">__libc_start_main</text></g><g><title>main (4,096 samples, 11.72%)</title><rect x="33.9554%" y="885" width="11.7230%" height="15" fill="rgb(217,147,25)"/><text x="34.2054%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (4,096 samples, 11.72%)</title><rect x="33.9554%" y="869" width="11.7230%" height="15" fill="rgb(247,81,37)"/><text x="34.2054%" y="879.50">std::rt::lang_sta..</text></g><g><title>__rust_maybe_catch_panic (4,096 samples, 11.72%)</title><rect x="33.9554%" y="853" width="11.7230%" height="15" fill="rgb(209,12,38)"/><text x="34.2054%" y="863.50">__rust_maybe_catc..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (4,096 samples, 11.72%)</title><rect x="33.9554%" y="837" width="11.7230%" height="15" fill="rgb(227,1,9)"/><text x="34.2054%" y="847.50">std::panicking::t..</text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (4,096 samples, 11.72%)</title><rect x="33.9554%" y="821" width="11.7230%" height="15" fill="rgb(248,47,43)"/><text x="34.2054%" y="831.50">std::rt::lang_sta..</text></g><g><title>alloc_free::main::hc80b97a251692aa3 (4,096 samples, 11.72%)</title><rect x="33.9554%" y="805" width="11.7230%" height="15" fill="rgb(221,10,30)"/><text x="34.2054%" y="815.50">alloc_free::main:..</text></g><g><title>__rg_realloc (4,096 samples, 11.72%)</title><rect x="33.9554%" y="789" width="11.7230%" height="15" fill="rgb(210,229,1)"/><text x="34.2054%" y="799.50">__rg_realloc</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (2,052 samples, 5.87%)</title><rect x="45.6783%" y="917" width="5.8729%" height="15" fill="rgb(222,148,37)"/><text x="45.9283%" y="927.50">&lt;alloc:..</text></g><g><title>__rg_realloc (2,052 samples, 5.87%)</title><rect x="45.6783%" y="901" width="5.8729%" height="15" fill="rgb(234,67,33)"/><text x="45.9283%" y="911.50">__rg_re..</text></g><g><title>Unknown (2,052 samples, 5.87%)</title><rect x="45.6783%" y="885" width="5.8729%" height="15" fill="rgb(247,98,35)"/><text x="45.9283%" y="895.50">Unknown</text></g><g><title>_start (2,052 samples, 5.87%)</title><rect x="45.6783%" y="869" width="5.8729%" height="15" fill="rgb(247,138,52)"/><text x="45.9283%" y="879.50">_start</text></g><g><title>__libc_start_main (2,052 samples, 5.87%)</title><rect x="45.6783%" y="853" width="5.8729%" height="15" fill="rgb(213,79,30)"/><text x="45.9283%" y="863.50">__libc_..</text></g><g><title>main (2,052 samples, 5.87%)</title><rect x="45.6783%" y="837" width="5.8729%" height="15" fill="rgb(246,177,23)"/><text x="45.9283%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (2,052 samples, 5.87%)</title><rect x="45.6783%" y="821" width="5.8729%" height="15" fill="rgb(230,62,27)"/><text x="45.9283%" y="831.50">std::rt..</text></g><g><title>__rust_maybe_catch_panic (2,052 samples, 5.87%)</title><rect x="45.6783%" y="805" width="5.8729%" height="15" fill="rgb(216,154,8)"/><text x="45.9283%" y="815.50">__rust_..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (2,052 samples, 5.87%)</title><rect x="45.6783%" y="789" width="5.8729%" height="15" fill="rgb(244,35,45)"/><text x="45.9283%" y="799.50">std::pa..</text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (2,052 samples, 5.87%)</title><rect x="45.6783%" y="773" width="5.8729%" height="15" fill="rgb(251,115,12)"/><text x="45.9283%" y="783.50">std::rt..</text></g><g><title>alloc_free::main::hc80b97a251692aa3 (2,052 samples, 5.87%)</title><rect x="45.6783%" y="757" width="5.8729%" height="15" fill="rgb(240,54,50)"/><text x="45.9283%" y="767.50">alloc_f..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (2,052 samples, 5.87%)</title><rect x="45.6783%" y="741" width="5.8729%" height="15" fill="rgb(233,84,52)"/><text x="45.9283%" y="751.50">alloc_f..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (2,052 samples, 5.87%)</title><rect x="45.6783%" y="725" width="5.8729%" height="15" fill="rgb(207,117,47)"/><text x="45.9283%" y="735.50">alloc_f..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (2,052 samples, 5.87%)</title><rect x="45.6783%" y="709" width="5.8729%" height="15" fill="rgb(249,43,39)"/><text x="45.9283%" y="719.50">&lt;alloc:..</text></g><g><title>__rg_realloc (2,048 samples, 5.86%)</title><rect x="45.6898%" y="693" width="5.8615%" height="15" fill="rgb(209,38,44)"/><text x="45.9398%" y="703.50">__rg_re..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (768 samples, 2.20%)</title><rect x="51.5512%" y="917" width="2.1981%" height="15" fill="rgb(236,212,23)"/><text x="51.8012%" y="927.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h260bd8b6ecb4ec80 (768 samples, 2.20%)</title><rect x="51.5512%" y="901" width="2.1981%" height="15" fill="rgb(242,79,21)"/><text x="51.8012%" y="911.50">&lt;..</text></g><g><title>Unknown (768 samples, 2.20%)</title><rect x="51.5512%" y="885" width="2.1981%" height="15" fill="rgb(211,96,35)"/><text x="51.8012%" y="895.50">U..</text></g><g><title>_start (768 samples, 2.20%)</title><rect x="51.5512%" y="869" width="2.1981%" height="15" fill="rgb(253,215,40)"/><text x="51.8012%" y="879.50">_..</text></g><g><title>__libc_start_main (768 samples, 2.20%)</title><rect x="51.5512%" y="853" width="2.1981%" height="15" fill="rgb(211,81,21)"/><text x="51.8012%" y="863.50">_..</text></g><g><title>main (768 samples, 2.20%)</title><rect x="51.5512%" y="837" width="2.1981%" height="15" fill="rgb(208,190,38)"/><text x="51.8012%" y="847.50">m..</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (768 samples, 2.20%)</title><rect x="51.5512%" y="821" width="2.1981%" height="15" fill="rgb(235,213,38)"/><text x="51.8012%" y="831.50">s..</text></g><g><title>__rust_maybe_catch_panic (768 samples, 2.20%)</title><rect x="51.5512%" y="805" width="2.1981%" height="15" fill="rgb(237,122,38)"/><text x="51.8012%" y="815.50">_..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (768 samples, 2.20%)</title><rect x="51.5512%" y="789" width="2.1981%" height="15" fill="rgb(244,218,35)"/><text x="51.8012%" y="799.50">s..</text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (768 samples, 2.20%)</title><rect x="51.5512%" y="773" width="2.1981%" height="15" fill="rgb(240,68,47)"/><text x="51.8012%" y="783.50">s..</text></g><g><title>alloc_free::main::hc80b97a251692aa3 (768 samples, 2.20%)</title><rect x="51.5512%" y="757" width="2.1981%" height="15" fill="rgb(210,16,53)"/><text x="51.8012%" y="767.50">a..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (768 samples, 2.20%)</title><rect x="51.5512%" y="741" width="2.1981%" height="15" fill="rgb(235,124,12)"/><text x="51.8012%" y="751.50">a..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (768 samples, 2.20%)</title><rect x="51.5512%" y="725" width="2.1981%" height="15" fill="rgb(224,169,11)"/><text x="51.8012%" y="735.50">a..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (764 samples, 2.19%)</title><rect x="51.5627%" y="709" width="2.1866%" height="15" fill="rgb(250,166,2)"/><text x="51.8127%" y="719.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (764 samples, 2.19%)</title><rect x="51.5627%" y="693" width="2.1866%" height="15" fill="rgb(242,216,29)"/><text x="51.8127%" y="703.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (516 samples, 1.48%)</title><rect x="53.7493%" y="917" width="1.4768%" height="15" fill="rgb(230,116,27)"/><text x="53.9993%" y="927.50"></text></g><g><title>__rg_realloc (516 samples, 1.48%)</title><rect x="53.7493%" y="901" width="1.4768%" height="15" fill="rgb(228,99,48)"/><text x="53.9993%" y="911.50"></text></g><g><title>Unknown (516 samples, 1.48%)</title><rect x="53.7493%" y="885" width="1.4768%" height="15" fill="rgb(253,11,6)"/><text x="53.9993%" y="895.50"></text></g><g><title>_start (516 samples, 1.48%)</title><rect x="53.7493%" y="869" width="1.4768%" height="15" fill="rgb(247,143,39)"/><text x="53.9993%" y="879.50"></text></g><g><title>__libc_start_main (516 samples, 1.48%)</title><rect x="53.7493%" y="853" width="1.4768%" height="15" fill="rgb(236,97,10)"/><text x="53.9993%" y="863.50"></text></g><g><title>main (516 samples, 1.48%)</title><rect x="53.7493%" y="837" width="1.4768%" height="15" fill="rgb(233,208,19)"/><text x="53.9993%" y="847.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (516 samples, 1.48%)</title><rect x="53.7493%" y="821" width="1.4768%" height="15" fill="rgb(216,164,2)"/><text x="53.9993%" y="831.50"></text></g><g><title>__rust_maybe_catch_panic (516 samples, 1.48%)</title><rect x="53.7493%" y="805" width="1.4768%" height="15" fill="rgb(220,129,5)"/><text x="53.9993%" y="815.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (516 samples, 1.48%)</title><rect x="53.7493%" y="789" width="1.4768%" height="15" fill="rgb(242,17,10)"/><text x="53.9993%" y="799.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (516 samples, 1.48%)</title><rect x="53.7493%" y="773" width="1.4768%" height="15" fill="rgb(242,107,0)"/><text x="53.9993%" y="783.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (516 samples, 1.48%)</title><rect x="53.7493%" y="757" width="1.4768%" height="15" fill="rgb(251,28,31)"/><text x="53.9993%" y="767.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (516 samples, 1.48%)</title><rect x="53.7493%" y="741" width="1.4768%" height="15" fill="rgb(233,223,10)"/><text x="53.9993%" y="751.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (516 samples, 1.48%)</title><rect x="53.7493%" y="725" width="1.4768%" height="15" fill="rgb(215,21,27)"/><text x="53.9993%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (516 samples, 1.48%)</title><rect x="53.7493%" y="709" width="1.4768%" height="15" fill="rgb(232,23,21)"/><text x="53.9993%" y="719.50"></text></g><g><title>__rg_realloc (512 samples, 1.47%)</title><rect x="53.7607%" y="693" width="1.4654%" height="15" fill="rgb(244,5,23)"/><text x="54.0107%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (1,024 samples, 2.93%)</title><rect x="55.2261%" y="757" width="2.9307%" height="15" fill="rgb(226,81,46)"/><text x="55.4761%" y="767.50">&lt;a..</text></g><g><title>__rg_realloc (1,024 samples, 2.93%)</title><rect x="55.2261%" y="741" width="2.9307%" height="15" fill="rgb(247,70,30)"/><text x="55.4761%" y="751.50">__..</text></g><g><title>Unknown (5,120 samples, 14.65%)</title><rect x="55.2261%" y="917" width="14.6537%" height="15" fill="rgb(212,68,19)"/><text x="55.4761%" y="927.50">Unknown</text></g><g><title>_start (5,120 samples, 14.65%)</title><rect x="55.2261%" y="901" width="14.6537%" height="15" fill="rgb(240,187,13)"/><text x="55.4761%" y="911.50">_start</text></g><g><title>__libc_start_main (5,120 samples, 14.65%)</title><rect x="55.2261%" y="885" width="14.6537%" height="15" fill="rgb(223,113,26)"/><text x="55.4761%" y="895.50">__libc_start_main</text></g><g><title>main (5,120 samples, 14.65%)</title><rect x="55.2261%" y="869" width="14.6537%" height="15" fill="rgb(206,192,2)"/><text x="55.4761%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (5,120 samples, 14.65%)</title><rect x="55.2261%" y="853" width="14.6537%" height="15" fill="rgb(241,108,4)"/><text x="55.4761%" y="863.50">std::rt::lang_start_in..</text></g><g><title>__rust_maybe_catch_panic (5,120 samples, 14.65%)</title><rect x="55.2261%" y="837" width="14.6537%" height="15" fill="rgb(247,173,49)"/><text x="55.4761%" y="847.50">__rust_maybe_catch_pan..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (5,120 samples, 14.65%)</title><rect x="55.2261%" y="821" width="14.6537%" height="15" fill="rgb(224,114,35)"/><text x="55.4761%" y="831.50">std::panicking::try::d..</text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (5,120 samples, 14.65%)</title><rect x="55.2261%" y="805" width="14.6537%" height="15" fill="rgb(245,159,27)"/><text x="55.4761%" y="815.50">std::rt::lang_start::{..</text></g><g><title>alloc_free::main::hc80b97a251692aa3 (5,120 samples, 14.65%)</title><rect x="55.2261%" y="789" width="14.6537%" height="15" fill="rgb(245,172,44)"/><text x="55.4761%" y="799.50">alloc_free::main::hc80..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (5,120 samples, 14.65%)</title><rect x="55.2261%" y="773" width="14.6537%" height="15" fill="rgb(236,23,11)"/><text x="55.4761%" y="783.50">alloc_free::quick_sort..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (4,096 samples, 11.72%)</title><rect x="58.1568%" y="757" width="11.7230%" height="15" fill="rgb(205,117,38)"/><text x="58.4068%" y="767.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>__rg_realloc (4,096 samples, 11.72%)</title><rect x="58.1568%" y="741" width="11.7230%" height="15" fill="rgb(237,72,25)"/><text x="58.4068%" y="751.50">__rg_realloc</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (260 samples, 0.74%)</title><rect x="69.8798%" y="901" width="0.7441%" height="15" fill="rgb(244,70,9)"/><text x="70.1298%" y="911.50"></text></g><g><title>__rg_realloc (260 samples, 0.74%)</title><rect x="69.8798%" y="885" width="0.7441%" height="15" fill="rgb(217,125,39)"/><text x="70.1298%" y="895.50"></text></g><g><title>Unknown (260 samples, 0.74%)</title><rect x="69.8798%" y="869" width="0.7441%" height="15" fill="rgb(235,36,10)"/><text x="70.1298%" y="879.50"></text></g><g><title>_start (260 samples, 0.74%)</title><rect x="69.8798%" y="853" width="0.7441%" height="15" fill="rgb(251,123,47)"/><text x="70.1298%" y="863.50"></text></g><g><title>__libc_start_main (260 samples, 0.74%)</title><rect x="69.8798%" y="837" width="0.7441%" height="15" fill="rgb(221,13,13)"/><text x="70.1298%" y="847.50"></text></g><g><title>main (260 samples, 0.74%)</title><rect x="69.8798%" y="821" width="0.7441%" height="15" fill="rgb(238,131,9)"/><text x="70.1298%" y="831.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (260 samples, 0.74%)</title><rect x="69.8798%" y="805" width="0.7441%" height="15" fill="rgb(211,50,8)"/><text x="70.1298%" y="815.50"></text></g><g><title>__rust_maybe_catch_panic (260 samples, 0.74%)</title><rect x="69.8798%" y="789" width="0.7441%" height="15" fill="rgb(245,182,24)"/><text x="70.1298%" y="799.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (260 samples, 0.74%)</title><rect x="69.8798%" y="773" width="0.7441%" height="15" fill="rgb(242,14,37)"/><text x="70.1298%" y="783.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (260 samples, 0.74%)</title><rect x="69.8798%" y="757" width="0.7441%" height="15" fill="rgb(246,228,12)"/><text x="70.1298%" y="767.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (260 samples, 0.74%)</title><rect x="69.8798%" y="741" width="0.7441%" height="15" fill="rgb(213,55,15)"/><text x="70.1298%" y="751.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (260 samples, 0.74%)</title><rect x="69.8798%" y="725" width="0.7441%" height="15" fill="rgb(209,9,3)"/><text x="70.1298%" y="735.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (260 samples, 0.74%)</title><rect x="69.8798%" y="709" width="0.7441%" height="15" fill="rgb(230,59,30)"/><text x="70.1298%" y="719.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (260 samples, 0.74%)</title><rect x="69.8798%" y="693" width="0.7441%" height="15" fill="rgb(209,121,21)"/><text x="70.1298%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (260 samples, 0.74%)</title><rect x="69.8798%" y="677" width="0.7441%" height="15" fill="rgb(220,109,13)"/><text x="70.1298%" y="687.50"></text></g><g><title>__rg_realloc (256 samples, 0.73%)</title><rect x="69.8912%" y="661" width="0.7327%" height="15" fill="rgb(232,18,1)"/><text x="70.1412%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (420 samples, 1.20%)</title><rect x="70.6239%" y="901" width="1.2021%" height="15" fill="rgb(215,41,42)"/><text x="70.8739%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h260bd8b6ecb4ec80 (420 samples, 1.20%)</title><rect x="70.6239%" y="885" width="1.2021%" height="15" fill="rgb(224,123,36)"/><text x="70.8739%" y="895.50"></text></g><g><title>Unknown (420 samples, 1.20%)</title><rect x="70.6239%" y="869" width="1.2021%" height="15" fill="rgb(240,125,3)"/><text x="70.8739%" y="879.50"></text></g><g><title>_start (420 samples, 1.20%)</title><rect x="70.6239%" y="853" width="1.2021%" height="15" fill="rgb(205,98,50)"/><text x="70.8739%" y="863.50"></text></g><g><title>__libc_start_main (420 samples, 1.20%)</title><rect x="70.6239%" y="837" width="1.2021%" height="15" fill="rgb(205,185,37)"/><text x="70.8739%" y="847.50"></text></g><g><title>main (420 samples, 1.20%)</title><rect x="70.6239%" y="821" width="1.2021%" height="15" fill="rgb(238,207,15)"/><text x="70.8739%" y="831.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (420 samples, 1.20%)</title><rect x="70.6239%" y="805" width="1.2021%" height="15" fill="rgb(213,199,42)"/><text x="70.8739%" y="815.50"></text></g><g><title>__rust_maybe_catch_panic (420 samples, 1.20%)</title><rect x="70.6239%" y="789" width="1.2021%" height="15" fill="rgb(235,201,11)"/><text x="70.8739%" y="799.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (420 samples, 1.20%)</title><rect x="70.6239%" y="773" width="1.2021%" height="15" fill="rgb(207,46,11)"/><text x="70.8739%" y="783.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (420 samples, 1.20%)</title><rect x="70.6239%" y="757" width="1.2021%" height="15" fill="rgb(241,35,35)"/><text x="70.8739%" y="767.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (420 samples, 1.20%)</title><rect x="70.6239%" y="741" width="1.2021%" height="15" fill="rgb(243,32,47)"/><text x="70.8739%" y="751.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (420 samples, 1.20%)</title><rect x="70.6239%" y="725" width="1.2021%" height="15" fill="rgb(247,202,23)"/><text x="70.8739%" y="735.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (420 samples, 1.20%)</title><rect x="70.6239%" y="709" width="1.2021%" height="15" fill="rgb(219,102,11)"/><text x="70.8739%" y="719.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (420 samples, 1.20%)</title><rect x="70.6239%" y="693" width="1.2021%" height="15" fill="rgb(243,110,44)"/><text x="70.8739%" y="703.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (416 samples, 1.19%)</title><rect x="70.6354%" y="677" width="1.1906%" height="15" fill="rgb(222,74,54)"/><text x="70.8854%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (416 samples, 1.19%)</title><rect x="70.6354%" y="661" width="1.1906%" height="15" fill="rgb(216,99,12)"/><text x="70.8854%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (260 samples, 0.74%)</title><rect x="71.8260%" y="901" width="0.7441%" height="15" fill="rgb(226,22,26)"/><text x="72.0760%" y="911.50"></text></g><g><title>__rg_realloc (260 samples, 0.74%)</title><rect x="71.8260%" y="885" width="0.7441%" height="15" fill="rgb(217,163,10)"/><text x="72.0760%" y="895.50"></text></g><g><title>Unknown (260 samples, 0.74%)</title><rect x="71.8260%" y="869" width="0.7441%" height="15" fill="rgb(213,25,53)"/><text x="72.0760%" y="879.50"></text></g><g><title>_start (260 samples, 0.74%)</title><rect x="71.8260%" y="853" width="0.7441%" height="15" fill="rgb(252,105,26)"/><text x="72.0760%" y="863.50"></text></g><g><title>__libc_start_main (260 samples, 0.74%)</title><rect x="71.8260%" y="837" width="0.7441%" height="15" fill="rgb(220,39,43)"/><text x="72.0760%" y="847.50"></text></g><g><title>main (260 samples, 0.74%)</title><rect x="71.8260%" y="821" width="0.7441%" height="15" fill="rgb(229,68,48)"/><text x="72.0760%" y="831.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (260 samples, 0.74%)</title><rect x="71.8260%" y="805" width="0.7441%" height="15" fill="rgb(252,8,32)"/><text x="72.0760%" y="815.50"></text></g><g><title>__rust_maybe_catch_panic (260 samples, 0.74%)</title><rect x="71.8260%" y="789" width="0.7441%" height="15" fill="rgb(223,20,43)"/><text x="72.0760%" y="799.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (260 samples, 0.74%)</title><rect x="71.8260%" y="773" width="0.7441%" height="15" fill="rgb(229,81,49)"/><text x="72.0760%" y="783.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (260 samples, 0.74%)</title><rect x="71.8260%" y="757" width="0.7441%" height="15" fill="rgb(236,28,36)"/><text x="72.0760%" y="767.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (260 samples, 0.74%)</title><rect x="71.8260%" y="741" width="0.7441%" height="15" fill="rgb(249,185,26)"/><text x="72.0760%" y="751.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (260 samples, 0.74%)</title><rect x="71.8260%" y="725" width="0.7441%" height="15" fill="rgb(249,174,33)"/><text x="72.0760%" y="735.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (260 samples, 0.74%)</title><rect x="71.8260%" y="709" width="0.7441%" height="15" fill="rgb(233,201,37)"/><text x="72.0760%" y="719.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (260 samples, 0.74%)</title><rect x="71.8260%" y="693" width="0.7441%" height="15" fill="rgb(221,78,26)"/><text x="72.0760%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (260 samples, 0.74%)</title><rect x="71.8260%" y="677" width="0.7441%" height="15" fill="rgb(250,127,30)"/><text x="72.0760%" y="687.50"></text></g><g><title>__rg_realloc (256 samples, 0.73%)</title><rect x="71.8374%" y="661" width="0.7327%" height="15" fill="rgb(230,49,44)"/><text x="72.0874%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (4,096 samples, 11.72%)</title><rect x="72.5701%" y="725" width="11.7230%" height="15" fill="rgb(229,67,23)"/><text x="72.8201%" y="735.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>__rg_realloc (4,096 samples, 11.72%)</title><rect x="72.5701%" y="709" width="11.7230%" height="15" fill="rgb(249,83,47)"/><text x="72.8201%" y="719.50">__rg_realloc</text></g><g><title>Unknown (5,120 samples, 14.65%)</title><rect x="72.5701%" y="901" width="14.6537%" height="15" fill="rgb(215,43,3)"/><text x="72.8201%" y="911.50">Unknown</text></g><g><title>_start (5,120 samples, 14.65%)</title><rect x="72.5701%" y="885" width="14.6537%" height="15" fill="rgb(238,154,13)"/><text x="72.8201%" y="895.50">_start</text></g><g><title>__libc_start_main (5,120 samples, 14.65%)</title><rect x="72.5701%" y="869" width="14.6537%" height="15" fill="rgb(219,56,2)"/><text x="72.8201%" y="879.50">__libc_start_main</text></g><g><title>main (5,120 samples, 14.65%)</title><rect x="72.5701%" y="853" width="14.6537%" height="15" fill="rgb(233,0,4)"/><text x="72.8201%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (5,120 samples, 14.65%)</title><rect x="72.5701%" y="837" width="14.6537%" height="15" fill="rgb(235,30,7)"/><text x="72.8201%" y="847.50">std::rt::lang_start_in..</text></g><g><title>__rust_maybe_catch_panic (5,120 samples, 14.65%)</title><rect x="72.5701%" y="821" width="14.6537%" height="15" fill="rgb(250,79,13)"/><text x="72.8201%" y="831.50">__rust_maybe_catch_pan..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (5,120 samples, 14.65%)</title><rect x="72.5701%" y="805" width="14.6537%" height="15" fill="rgb(211,146,34)"/><text x="72.8201%" y="815.50">std::panicking::try::d..</text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (5,120 samples, 14.65%)</title><rect x="72.5701%" y="789" width="14.6537%" height="15" fill="rgb(228,22,38)"/><text x="72.8201%" y="799.50">std::rt::lang_start::{..</text></g><g><title>alloc_free::main::hc80b97a251692aa3 (5,120 samples, 14.65%)</title><rect x="72.5701%" y="773" width="14.6537%" height="15" fill="rgb(235,168,5)"/><text x="72.8201%" y="783.50">alloc_free::main::hc80..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (5,120 samples, 14.65%)</title><rect x="72.5701%" y="757" width="14.6537%" height="15" fill="rgb(221,155,16)"/><text x="72.8201%" y="767.50">alloc_free::quick_sort..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (5,120 samples, 14.65%)</title><rect x="72.5701%" y="741" width="14.6537%" height="15" fill="rgb(215,215,53)"/><text x="72.8201%" y="751.50">alloc_free::quick_sort..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (1,024 samples, 2.93%)</title><rect x="84.2931%" y="725" width="2.9307%" height="15" fill="rgb(223,4,10)"/><text x="84.5431%" y="735.50">&lt;a..</text></g><g><title>__rg_realloc (1,024 samples, 2.93%)</title><rect x="84.2931%" y="709" width="2.9307%" height="15" fill="rgb(234,103,6)"/><text x="84.5431%" y="719.50">__..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (260 samples, 0.74%)</title><rect x="87.2238%" y="885" width="0.7441%" height="15" fill="rgb(227,97,0)"/><text x="87.4738%" y="895.50"></text></g><g><title>__rg_realloc (260 samples, 0.74%)</title><rect x="87.2238%" y="869" width="0.7441%" height="15" fill="rgb(234,150,53)"/><text x="87.4738%" y="879.50"></text></g><g><title>Unknown (260 samples, 0.74%)</title><rect x="87.2238%" y="853" width="0.7441%" height="15" fill="rgb(228,201,54)"/><text x="87.4738%" y="863.50"></text></g><g><title>_start (260 samples, 0.74%)</title><rect x="87.2238%" y="837" width="0.7441%" height="15" fill="rgb(222,22,37)"/><text x="87.4738%" y="847.50"></text></g><g><title>__libc_start_main (260 samples, 0.74%)</title><rect x="87.2238%" y="821" width="0.7441%" height="15" fill="rgb(237,53,32)"/><text x="87.4738%" y="831.50"></text></g><g><title>main (260 samples, 0.74%)</title><rect x="87.2238%" y="805" width="0.7441%" height="15" fill="rgb(233,25,53)"/><text x="87.4738%" y="815.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (260 samples, 0.74%)</title><rect x="87.2238%" y="789" width="0.7441%" height="15" fill="rgb(210,40,34)"/><text x="87.4738%" y="799.50"></text></g><g><title>__rust_maybe_catch_panic (260 samples, 0.74%)</title><rect x="87.2238%" y="773" width="0.7441%" height="15" fill="rgb(241,220,44)"/><text x="87.4738%" y="783.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (260 samples, 0.74%)</title><rect x="87.2238%" y="757" width="0.7441%" height="15" fill="rgb(235,28,35)"/><text x="87.4738%" y="767.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (260 samples, 0.74%)</title><rect x="87.2238%" y="741" width="0.7441%" height="15" fill="rgb(210,56,17)"/><text x="87.4738%" y="751.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (260 samples, 0.74%)</title><rect x="87.2238%" y="725" width="0.7441%" height="15" fill="rgb(224,130,29)"/><text x="87.4738%" y="735.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (260 samples, 0.74%)</title><rect x="87.2238%" y="709" width="0.7441%" height="15" fill="rgb(235,212,8)"/><text x="87.4738%" y="719.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (260 samples, 0.74%)</title><rect x="87.2238%" y="693" width="0.7441%" height="15" fill="rgb(223,33,50)"/><text x="87.4738%" y="703.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (260 samples, 0.74%)</title><rect x="87.2238%" y="677" width="0.7441%" height="15" fill="rgb(219,149,13)"/><text x="87.4738%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (260 samples, 0.74%)</title><rect x="87.2238%" y="661" width="0.7441%" height="15" fill="rgb(250,156,29)"/><text x="87.4738%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (260 samples, 0.74%)</title><rect x="87.2238%" y="645" width="0.7441%" height="15" fill="rgb(216,193,19)"/><text x="87.4738%" y="655.50"></text></g><g><title>__rg_realloc (256 samples, 0.73%)</title><rect x="87.2353%" y="629" width="0.7327%" height="15" fill="rgb(216,135,14)"/><text x="87.4853%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (96 samples, 0.27%)</title><rect x="87.9679%" y="885" width="0.2748%" height="15" fill="rgb(241,47,5)"/><text x="88.2179%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h260bd8b6ecb4ec80 (96 samples, 0.27%)</title><rect x="87.9679%" y="869" width="0.2748%" height="15" fill="rgb(233,42,35)"/><text x="88.2179%" y="879.50"></text></g><g><title>Unknown (96 samples, 0.27%)</title><rect x="87.9679%" y="853" width="0.2748%" height="15" fill="rgb(231,13,6)"/><text x="88.2179%" y="863.50"></text></g><g><title>_start (96 samples, 0.27%)</title><rect x="87.9679%" y="837" width="0.2748%" height="15" fill="rgb(207,181,40)"/><text x="88.2179%" y="847.50"></text></g><g><title>__libc_start_main (96 samples, 0.27%)</title><rect x="87.9679%" y="821" width="0.2748%" height="15" fill="rgb(254,173,49)"/><text x="88.2179%" y="831.50"></text></g><g><title>main (96 samples, 0.27%)</title><rect x="87.9679%" y="805" width="0.2748%" height="15" fill="rgb(221,1,38)"/><text x="88.2179%" y="815.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (96 samples, 0.27%)</title><rect x="87.9679%" y="789" width="0.2748%" height="15" fill="rgb(206,124,46)"/><text x="88.2179%" y="799.50"></text></g><g><title>__rust_maybe_catch_panic (96 samples, 0.27%)</title><rect x="87.9679%" y="773" width="0.2748%" height="15" fill="rgb(249,21,11)"/><text x="88.2179%" y="783.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (96 samples, 0.27%)</title><rect x="87.9679%" y="757" width="0.2748%" height="15" fill="rgb(222,201,40)"/><text x="88.2179%" y="767.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (96 samples, 0.27%)</title><rect x="87.9679%" y="741" width="0.2748%" height="15" fill="rgb(235,61,29)"/><text x="88.2179%" y="751.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (96 samples, 0.27%)</title><rect x="87.9679%" y="725" width="0.2748%" height="15" fill="rgb(219,207,3)"/><text x="88.2179%" y="735.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (96 samples, 0.27%)</title><rect x="87.9679%" y="709" width="0.2748%" height="15" fill="rgb(222,56,46)"/><text x="88.2179%" y="719.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (96 samples, 0.27%)</title><rect x="87.9679%" y="693" width="0.2748%" height="15" fill="rgb(239,76,54)"/><text x="88.2179%" y="703.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (96 samples, 0.27%)</title><rect x="87.9679%" y="677" width="0.2748%" height="15" fill="rgb(231,124,27)"/><text x="88.2179%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (96 samples, 0.27%)</title><rect x="87.9679%" y="661" width="0.2748%" height="15" fill="rgb(249,195,6)"/><text x="88.2179%" y="671.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (92 samples, 0.26%)</title><rect x="87.9794%" y="645" width="0.2633%" height="15" fill="rgb(237,174,47)"/><text x="88.2294%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (92 samples, 0.26%)</title><rect x="87.9794%" y="629" width="0.2633%" height="15" fill="rgb(206,201,31)"/><text x="88.2294%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (68 samples, 0.19%)</title><rect x="88.2427%" y="885" width="0.1946%" height="15" fill="rgb(231,57,52)"/><text x="88.4927%" y="895.50"></text></g><g><title>__rg_realloc (68 samples, 0.19%)</title><rect x="88.2427%" y="869" width="0.1946%" height="15" fill="rgb(248,177,22)"/><text x="88.4927%" y="879.50"></text></g><g><title>Unknown (68 samples, 0.19%)</title><rect x="88.2427%" y="853" width="0.1946%" height="15" fill="rgb(215,211,37)"/><text x="88.4927%" y="863.50"></text></g><g><title>_start (68 samples, 0.19%)</title><rect x="88.2427%" y="837" width="0.1946%" height="15" fill="rgb(241,128,51)"/><text x="88.4927%" y="847.50"></text></g><g><title>__libc_start_main (68 samples, 0.19%)</title><rect x="88.2427%" y="821" width="0.1946%" height="15" fill="rgb(227,165,31)"/><text x="88.4927%" y="831.50"></text></g><g><title>main (68 samples, 0.19%)</title><rect x="88.2427%" y="805" width="0.1946%" height="15" fill="rgb(228,167,24)"/><text x="88.4927%" y="815.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (68 samples, 0.19%)</title><rect x="88.2427%" y="789" width="0.1946%" height="15" fill="rgb(228,143,12)"/><text x="88.4927%" y="799.50"></text></g><g><title>__rust_maybe_catch_panic (68 samples, 0.19%)</title><rect x="88.2427%" y="773" width="0.1946%" height="15" fill="rgb(249,149,8)"/><text x="88.4927%" y="783.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (68 samples, 0.19%)</title><rect x="88.2427%" y="757" width="0.1946%" height="15" fill="rgb(243,35,44)"/><text x="88.4927%" y="767.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (68 samples, 0.19%)</title><rect x="88.2427%" y="741" width="0.1946%" height="15" fill="rgb(246,89,9)"/><text x="88.4927%" y="751.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (68 samples, 0.19%)</title><rect x="88.2427%" y="725" width="0.1946%" height="15" fill="rgb(233,213,13)"/><text x="88.4927%" y="735.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (68 samples, 0.19%)</title><rect x="88.2427%" y="709" width="0.1946%" height="15" fill="rgb(233,141,41)"/><text x="88.4927%" y="719.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (68 samples, 0.19%)</title><rect x="88.2427%" y="693" width="0.1946%" height="15" fill="rgb(239,167,4)"/><text x="88.4927%" y="703.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (68 samples, 0.19%)</title><rect x="88.2427%" y="677" width="0.1946%" height="15" fill="rgb(209,217,16)"/><text x="88.4927%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (68 samples, 0.19%)</title><rect x="88.2427%" y="661" width="0.1946%" height="15" fill="rgb(219,88,35)"/><text x="88.4927%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (68 samples, 0.19%)</title><rect x="88.2427%" y="645" width="0.1946%" height="15" fill="rgb(220,193,23)"/><text x="88.4927%" y="655.50"></text></g><g><title>__rg_realloc (64 samples, 0.18%)</title><rect x="88.2541%" y="629" width="0.1832%" height="15" fill="rgb(230,90,52)"/><text x="88.5041%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (512 samples, 1.47%)</title><rect x="88.4373%" y="693" width="1.4654%" height="15" fill="rgb(252,106,19)"/><text x="88.6873%" y="703.50"></text></g><g><title>__rg_realloc (512 samples, 1.47%)</title><rect x="88.4373%" y="677" width="1.4654%" height="15" fill="rgb(206,74,20)"/><text x="88.6873%" y="687.50"></text></g><g><title>Unknown (1,024 samples, 2.93%)</title><rect x="88.4373%" y="885" width="2.9307%" height="15" fill="rgb(230,138,44)"/><text x="88.6873%" y="895.50">Un..</text></g><g><title>_start (1,024 samples, 2.93%)</title><rect x="88.4373%" y="869" width="2.9307%" height="15" fill="rgb(235,182,43)"/><text x="88.6873%" y="879.50">_s..</text></g><g><title>__libc_start_main (1,024 samples, 2.93%)</title><rect x="88.4373%" y="853" width="2.9307%" height="15" fill="rgb(242,16,51)"/><text x="88.6873%" y="863.50">__..</text></g><g><title>main (1,024 samples, 2.93%)</title><rect x="88.4373%" y="837" width="2.9307%" height="15" fill="rgb(248,9,4)"/><text x="88.6873%" y="847.50">ma..</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (1,024 samples, 2.93%)</title><rect x="88.4373%" y="821" width="2.9307%" height="15" fill="rgb(210,31,22)"/><text x="88.6873%" y="831.50">st..</text></g><g><title>__rust_maybe_catch_panic (1,024 samples, 2.93%)</title><rect x="88.4373%" y="805" width="2.9307%" height="15" fill="rgb(239,54,39)"/><text x="88.6873%" y="815.50">__..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (1,024 samples, 2.93%)</title><rect x="88.4373%" y="789" width="2.9307%" height="15" fill="rgb(230,99,41)"/><text x="88.6873%" y="799.50">st..</text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (1,024 samples, 2.93%)</title><rect x="88.4373%" y="773" width="2.9307%" height="15" fill="rgb(253,106,12)"/><text x="88.6873%" y="783.50">st..</text></g><g><title>alloc_free::main::hc80b97a251692aa3 (1,024 samples, 2.93%)</title><rect x="88.4373%" y="757" width="2.9307%" height="15" fill="rgb(213,46,41)"/><text x="88.6873%" y="767.50">al..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (1,024 samples, 2.93%)</title><rect x="88.4373%" y="741" width="2.9307%" height="15" fill="rgb(215,133,35)"/><text x="88.6873%" y="751.50">al..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (1,024 samples, 2.93%)</title><rect x="88.4373%" y="725" width="2.9307%" height="15" fill="rgb(213,28,5)"/><text x="88.6873%" y="735.50">al..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (1,024 samples, 2.93%)</title><rect x="88.4373%" y="709" width="2.9307%" height="15" fill="rgb(215,77,49)"/><text x="88.6873%" y="719.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (512 samples, 1.47%)</title><rect x="89.9027%" y="693" width="1.4654%" height="15" fill="rgb(248,100,22)"/><text x="90.1527%" y="703.50"></text></g><g><title>__rg_realloc (512 samples, 1.47%)</title><rect x="89.9027%" y="677" width="1.4654%" height="15" fill="rgb(208,67,9)"/><text x="90.1527%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (80 samples, 0.23%)</title><rect x="91.4024%" y="869" width="0.2290%" height="15" fill="rgb(219,133,21)"/><text x="91.6524%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h260bd8b6ecb4ec80 (80 samples, 0.23%)</title><rect x="91.4024%" y="853" width="0.2290%" height="15" fill="rgb(246,46,29)"/><text x="91.6524%" y="863.50"></text></g><g><title>Unknown (80 samples, 0.23%)</title><rect x="91.4024%" y="837" width="0.2290%" height="15" fill="rgb(246,185,52)"/><text x="91.6524%" y="847.50"></text></g><g><title>_start (80 samples, 0.23%)</title><rect x="91.4024%" y="821" width="0.2290%" height="15" fill="rgb(252,136,11)"/><text x="91.6524%" y="831.50"></text></g><g><title>__libc_start_main (80 samples, 0.23%)</title><rect x="91.4024%" y="805" width="0.2290%" height="15" fill="rgb(219,138,53)"/><text x="91.6524%" y="815.50"></text></g><g><title>main (80 samples, 0.23%)</title><rect x="91.4024%" y="789" width="0.2290%" height="15" fill="rgb(211,51,23)"/><text x="91.6524%" y="799.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (80 samples, 0.23%)</title><rect x="91.4024%" y="773" width="0.2290%" height="15" fill="rgb(247,221,28)"/><text x="91.6524%" y="783.50"></text></g><g><title>__rust_maybe_catch_panic (80 samples, 0.23%)</title><rect x="91.4024%" y="757" width="0.2290%" height="15" fill="rgb(251,222,45)"/><text x="91.6524%" y="767.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (80 samples, 0.23%)</title><rect x="91.4024%" y="741" width="0.2290%" height="15" fill="rgb(217,162,53)"/><text x="91.6524%" y="751.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (80 samples, 0.23%)</title><rect x="91.4024%" y="725" width="0.2290%" height="15" fill="rgb(229,93,14)"/><text x="91.6524%" y="735.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (80 samples, 0.23%)</title><rect x="91.4024%" y="709" width="0.2290%" height="15" fill="rgb(209,67,49)"/><text x="91.6524%" y="719.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="91.4024%" y="693" width="0.2290%" height="15" fill="rgb(213,87,29)"/><text x="91.6524%" y="703.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="91.4024%" y="677" width="0.2290%" height="15" fill="rgb(205,151,52)"/><text x="91.6524%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="91.4024%" y="661" width="0.2290%" height="15" fill="rgb(253,215,39)"/><text x="91.6524%" y="671.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="91.4024%" y="645" width="0.2290%" height="15" fill="rgb(221,220,41)"/><text x="91.6524%" y="655.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="91.4024%" y="629" width="0.2290%" height="15" fill="rgb(218,133,21)"/><text x="91.6524%" y="639.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (76 samples, 0.22%)</title><rect x="91.4139%" y="613" width="0.2175%" height="15" fill="rgb(221,193,43)"/><text x="91.6639%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (76 samples, 0.22%)</title><rect x="91.4139%" y="597" width="0.2175%" height="15" fill="rgb(240,128,52)"/><text x="91.6639%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (68 samples, 0.19%)</title><rect x="91.6314%" y="869" width="0.1946%" height="15" fill="rgb(253,114,12)"/><text x="91.8814%" y="879.50"></text></g><g><title>__rg_realloc (68 samples, 0.19%)</title><rect x="91.6314%" y="853" width="0.1946%" height="15" fill="rgb(215,223,47)"/><text x="91.8814%" y="863.50"></text></g><g><title>Unknown (68 samples, 0.19%)</title><rect x="91.6314%" y="837" width="0.1946%" height="15" fill="rgb(248,225,23)"/><text x="91.8814%" y="847.50"></text></g><g><title>_start (68 samples, 0.19%)</title><rect x="91.6314%" y="821" width="0.1946%" height="15" fill="rgb(250,108,0)"/><text x="91.8814%" y="831.50"></text></g><g><title>__libc_start_main (68 samples, 0.19%)</title><rect x="91.6314%" y="805" width="0.1946%" height="15" fill="rgb(228,208,7)"/><text x="91.8814%" y="815.50"></text></g><g><title>main (68 samples, 0.19%)</title><rect x="91.6314%" y="789" width="0.1946%" height="15" fill="rgb(244,45,10)"/><text x="91.8814%" y="799.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (68 samples, 0.19%)</title><rect x="91.6314%" y="773" width="0.1946%" height="15" fill="rgb(207,125,25)"/><text x="91.8814%" y="783.50"></text></g><g><title>__rust_maybe_catch_panic (68 samples, 0.19%)</title><rect x="91.6314%" y="757" width="0.1946%" height="15" fill="rgb(210,195,18)"/><text x="91.8814%" y="767.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (68 samples, 0.19%)</title><rect x="91.6314%" y="741" width="0.1946%" height="15" fill="rgb(249,80,12)"/><text x="91.8814%" y="751.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (68 samples, 0.19%)</title><rect x="91.6314%" y="725" width="0.1946%" height="15" fill="rgb(221,65,9)"/><text x="91.8814%" y="735.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (68 samples, 0.19%)</title><rect x="91.6314%" y="709" width="0.1946%" height="15" fill="rgb(235,49,36)"/><text x="91.8814%" y="719.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (68 samples, 0.19%)</title><rect x="91.6314%" y="693" width="0.1946%" height="15" fill="rgb(225,32,20)"/><text x="91.8814%" y="703.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (68 samples, 0.19%)</title><rect x="91.6314%" y="677" width="0.1946%" height="15" fill="rgb(215,141,46)"/><text x="91.8814%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (68 samples, 0.19%)</title><rect x="91.6314%" y="661" width="0.1946%" height="15" fill="rgb(250,160,47)"/><text x="91.8814%" y="671.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (68 samples, 0.19%)</title><rect x="91.6314%" y="645" width="0.1946%" height="15" fill="rgb(216,222,40)"/><text x="91.8814%" y="655.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (68 samples, 0.19%)</title><rect x="91.6314%" y="629" width="0.1946%" height="15" fill="rgb(234,217,39)"/><text x="91.8814%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (68 samples, 0.19%)</title><rect x="91.6314%" y="613" width="0.1946%" height="15" fill="rgb(207,178,40)"/><text x="91.8814%" y="623.50"></text></g><g><title>__rg_realloc (64 samples, 0.18%)</title><rect x="91.6428%" y="597" width="0.1832%" height="15" fill="rgb(221,136,13)"/><text x="91.8928%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (512 samples, 1.47%)</title><rect x="91.8260%" y="661" width="1.4654%" height="15" fill="rgb(249,199,10)"/><text x="92.0760%" y="671.50"></text></g><g><title>__rg_realloc (512 samples, 1.47%)</title><rect x="91.8260%" y="645" width="1.4654%" height="15" fill="rgb(249,222,13)"/><text x="92.0760%" y="655.50"></text></g><g><title>Unknown (640 samples, 1.83%)</title><rect x="91.8260%" y="869" width="1.8317%" height="15" fill="rgb(244,185,38)"/><text x="92.0760%" y="879.50">U..</text></g><g><title>_start (640 samples, 1.83%)</title><rect x="91.8260%" y="853" width="1.8317%" height="15" fill="rgb(236,202,9)"/><text x="92.0760%" y="863.50">_..</text></g><g><title>__libc_start_main (640 samples, 1.83%)</title><rect x="91.8260%" y="837" width="1.8317%" height="15" fill="rgb(250,229,37)"/><text x="92.0760%" y="847.50">_..</text></g><g><title>main (640 samples, 1.83%)</title><rect x="91.8260%" y="821" width="1.8317%" height="15" fill="rgb(206,174,23)"/><text x="92.0760%" y="831.50">m..</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (640 samples, 1.83%)</title><rect x="91.8260%" y="805" width="1.8317%" height="15" fill="rgb(211,33,43)"/><text x="92.0760%" y="815.50">s..</text></g><g><title>__rust_maybe_catch_panic (640 samples, 1.83%)</title><rect x="91.8260%" y="789" width="1.8317%" height="15" fill="rgb(245,58,50)"/><text x="92.0760%" y="799.50">_..</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (640 samples, 1.83%)</title><rect x="91.8260%" y="773" width="1.8317%" height="15" fill="rgb(244,68,36)"/><text x="92.0760%" y="783.50">s..</text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (640 samples, 1.83%)</title><rect x="91.8260%" y="757" width="1.8317%" height="15" fill="rgb(232,229,15)"/><text x="92.0760%" y="767.50">s..</text></g><g><title>alloc_free::main::hc80b97a251692aa3 (640 samples, 1.83%)</title><rect x="91.8260%" y="741" width="1.8317%" height="15" fill="rgb(254,30,23)"/><text x="92.0760%" y="751.50">a..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (640 samples, 1.83%)</title><rect x="91.8260%" y="725" width="1.8317%" height="15" fill="rgb(235,160,14)"/><text x="92.0760%" y="735.50">a..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (640 samples, 1.83%)</title><rect x="91.8260%" y="709" width="1.8317%" height="15" fill="rgb(212,155,44)"/><text x="92.0760%" y="719.50">a..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (640 samples, 1.83%)</title><rect x="91.8260%" y="693" width="1.8317%" height="15" fill="rgb(226,2,50)"/><text x="92.0760%" y="703.50">a..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (640 samples, 1.83%)</title><rect x="91.8260%" y="677" width="1.8317%" height="15" fill="rgb(234,177,6)"/><text x="92.0760%" y="687.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (128 samples, 0.37%)</title><rect x="93.2914%" y="661" width="0.3663%" height="15" fill="rgb(217,24,9)"/><text x="93.5414%" y="671.50"></text></g><g><title>__rg_realloc (128 samples, 0.37%)</title><rect x="93.2914%" y="645" width="0.3663%" height="15" fill="rgb(220,13,46)"/><text x="93.5414%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (52 samples, 0.15%)</title><rect x="93.7149%" y="853" width="0.1488%" height="15" fill="rgb(239,221,27)"/><text x="93.9649%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h260bd8b6ecb4ec80 (52 samples, 0.15%)</title><rect x="93.7149%" y="837" width="0.1488%" height="15" fill="rgb(222,198,25)"/><text x="93.9649%" y="847.50"></text></g><g><title>Unknown (52 samples, 0.15%)</title><rect x="93.7149%" y="821" width="0.1488%" height="15" fill="rgb(211,99,13)"/><text x="93.9649%" y="831.50"></text></g><g><title>_start (52 samples, 0.15%)</title><rect x="93.7149%" y="805" width="0.1488%" height="15" fill="rgb(232,111,31)"/><text x="93.9649%" y="815.50"></text></g><g><title>__libc_start_main (52 samples, 0.15%)</title><rect x="93.7149%" y="789" width="0.1488%" height="15" fill="rgb(245,82,37)"/><text x="93.9649%" y="799.50"></text></g><g><title>main (52 samples, 0.15%)</title><rect x="93.7149%" y="773" width="0.1488%" height="15" fill="rgb(227,149,46)"/><text x="93.9649%" y="783.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (52 samples, 0.15%)</title><rect x="93.7149%" y="757" width="0.1488%" height="15" fill="rgb(218,36,50)"/><text x="93.9649%" y="767.50"></text></g><g><title>__rust_maybe_catch_panic (52 samples, 0.15%)</title><rect x="93.7149%" y="741" width="0.1488%" height="15" fill="rgb(226,80,48)"/><text x="93.9649%" y="751.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (52 samples, 0.15%)</title><rect x="93.7149%" y="725" width="0.1488%" height="15" fill="rgb(238,224,15)"/><text x="93.9649%" y="735.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (52 samples, 0.15%)</title><rect x="93.7149%" y="709" width="0.1488%" height="15" fill="rgb(241,136,10)"/><text x="93.9649%" y="719.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (52 samples, 0.15%)</title><rect x="93.7149%" y="693" width="0.1488%" height="15" fill="rgb(208,32,45)"/><text x="93.9649%" y="703.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (52 samples, 0.15%)</title><rect x="93.7149%" y="677" width="0.1488%" height="15" fill="rgb(207,135,9)"/><text x="93.9649%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (52 samples, 0.15%)</title><rect x="93.7149%" y="661" width="0.1488%" height="15" fill="rgb(206,86,44)"/><text x="93.9649%" y="671.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (52 samples, 0.15%)</title><rect x="93.7149%" y="645" width="0.1488%" height="15" fill="rgb(245,177,15)"/><text x="93.9649%" y="655.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (52 samples, 0.15%)</title><rect x="93.7149%" y="629" width="0.1488%" height="15" fill="rgb(206,64,50)"/><text x="93.9649%" y="639.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (52 samples, 0.15%)</title><rect x="93.7149%" y="613" width="0.1488%" height="15" fill="rgb(234,36,40)"/><text x="93.9649%" y="623.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (52 samples, 0.15%)</title><rect x="93.7149%" y="597" width="0.1488%" height="15" fill="rgb(213,64,8)"/><text x="93.9649%" y="607.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="93.7264%" y="581" width="0.1374%" height="15" fill="rgb(210,75,36)"/><text x="93.9764%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (44 samples, 0.13%)</title><rect x="93.7378%" y="565" width="0.1259%" height="15" fill="rgb(229,88,21)"/><text x="93.9878%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (36 samples, 0.10%)</title><rect x="93.8638%" y="853" width="0.1030%" height="15" fill="rgb(252,204,47)"/><text x="94.1138%" y="863.50"></text></g><g><title>__rg_realloc (36 samples, 0.10%)</title><rect x="93.8638%" y="837" width="0.1030%" height="15" fill="rgb(208,77,27)"/><text x="94.1138%" y="847.50"></text></g><g><title>Unknown (36 samples, 0.10%)</title><rect x="93.8638%" y="821" width="0.1030%" height="15" fill="rgb(221,76,26)"/><text x="94.1138%" y="831.50"></text></g><g><title>_start (36 samples, 0.10%)</title><rect x="93.8638%" y="805" width="0.1030%" height="15" fill="rgb(225,139,18)"/><text x="94.1138%" y="815.50"></text></g><g><title>__libc_start_main (36 samples, 0.10%)</title><rect x="93.8638%" y="789" width="0.1030%" height="15" fill="rgb(230,137,11)"/><text x="94.1138%" y="799.50"></text></g><g><title>main (36 samples, 0.10%)</title><rect x="93.8638%" y="773" width="0.1030%" height="15" fill="rgb(212,28,1)"/><text x="94.1138%" y="783.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (36 samples, 0.10%)</title><rect x="93.8638%" y="757" width="0.1030%" height="15" fill="rgb(248,164,17)"/><text x="94.1138%" y="767.50"></text></g><g><title>__rust_maybe_catch_panic (36 samples, 0.10%)</title><rect x="93.8638%" y="741" width="0.1030%" height="15" fill="rgb(222,171,42)"/><text x="94.1138%" y="751.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (36 samples, 0.10%)</title><rect x="93.8638%" y="725" width="0.1030%" height="15" fill="rgb(243,84,45)"/><text x="94.1138%" y="735.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (36 samples, 0.10%)</title><rect x="93.8638%" y="709" width="0.1030%" height="15" fill="rgb(252,49,23)"/><text x="94.1138%" y="719.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (36 samples, 0.10%)</title><rect x="93.8638%" y="693" width="0.1030%" height="15" fill="rgb(215,19,7)"/><text x="94.1138%" y="703.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="93.8638%" y="677" width="0.1030%" height="15" fill="rgb(238,81,41)"/><text x="94.1138%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="93.8638%" y="661" width="0.1030%" height="15" fill="rgb(210,199,37)"/><text x="94.1138%" y="671.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="93.8638%" y="645" width="0.1030%" height="15" fill="rgb(244,192,49)"/><text x="94.1138%" y="655.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="93.8638%" y="629" width="0.1030%" height="15" fill="rgb(226,211,11)"/><text x="94.1138%" y="639.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="93.8638%" y="613" width="0.1030%" height="15" fill="rgb(236,162,54)"/><text x="94.1138%" y="623.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="93.8638%" y="597" width="0.1030%" height="15" fill="rgb(220,229,9)"/><text x="94.1138%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (36 samples, 0.10%)</title><rect x="93.8638%" y="581" width="0.1030%" height="15" fill="rgb(250,87,22)"/><text x="94.1138%" y="591.50"></text></g><g><title>Unknown (144 samples, 0.41%)</title><rect x="93.9668%" y="853" width="0.4121%" height="15" fill="rgb(239,43,17)"/><text x="94.2168%" y="863.50"></text></g><g><title>_start (144 samples, 0.41%)</title><rect x="93.9668%" y="837" width="0.4121%" height="15" fill="rgb(231,177,25)"/><text x="94.2168%" y="847.50"></text></g><g><title>__libc_start_main (144 samples, 0.41%)</title><rect x="93.9668%" y="821" width="0.4121%" height="15" fill="rgb(219,179,1)"/><text x="94.2168%" y="831.50"></text></g><g><title>main (144 samples, 0.41%)</title><rect x="93.9668%" y="805" width="0.4121%" height="15" fill="rgb(238,219,53)"/><text x="94.2168%" y="815.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (144 samples, 0.41%)</title><rect x="93.9668%" y="789" width="0.4121%" height="15" fill="rgb(232,167,36)"/><text x="94.2168%" y="799.50"></text></g><g><title>__rust_maybe_catch_panic (144 samples, 0.41%)</title><rect x="93.9668%" y="773" width="0.4121%" height="15" fill="rgb(244,19,51)"/><text x="94.2168%" y="783.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (144 samples, 0.41%)</title><rect x="93.9668%" y="757" width="0.4121%" height="15" fill="rgb(224,6,22)"/><text x="94.2168%" y="767.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (144 samples, 0.41%)</title><rect x="93.9668%" y="741" width="0.4121%" height="15" fill="rgb(224,145,5)"/><text x="94.2168%" y="751.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (144 samples, 0.41%)</title><rect x="93.9668%" y="725" width="0.4121%" height="15" fill="rgb(234,130,49)"/><text x="94.2168%" y="735.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (144 samples, 0.41%)</title><rect x="93.9668%" y="709" width="0.4121%" height="15" fill="rgb(254,6,2)"/><text x="94.2168%" y="719.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (144 samples, 0.41%)</title><rect x="93.9668%" y="693" width="0.4121%" height="15" fill="rgb(208,96,46)"/><text x="94.2168%" y="703.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (144 samples, 0.41%)</title><rect x="93.9668%" y="677" width="0.4121%" height="15" fill="rgb(239,3,39)"/><text x="94.2168%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (144 samples, 0.41%)</title><rect x="93.9668%" y="661" width="0.4121%" height="15" fill="rgb(233,210,1)"/><text x="94.2168%" y="671.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (144 samples, 0.41%)</title><rect x="93.9668%" y="645" width="0.4121%" height="15" fill="rgb(244,137,37)"/><text x="94.2168%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (128 samples, 0.37%)</title><rect x="94.0126%" y="629" width="0.3663%" height="15" fill="rgb(240,136,2)"/><text x="94.2626%" y="639.50"></text></g><g><title>__rg_realloc (128 samples, 0.37%)</title><rect x="94.0126%" y="613" width="0.3663%" height="15" fill="rgb(239,18,37)"/><text x="94.2626%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (44 samples, 0.13%)</title><rect x="94.4362%" y="837" width="0.1259%" height="15" fill="rgb(218,185,22)"/><text x="94.6862%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h260bd8b6ecb4ec80 (44 samples, 0.13%)</title><rect x="94.4362%" y="821" width="0.1259%" height="15" fill="rgb(225,218,4)"/><text x="94.6862%" y="831.50"></text></g><g><title>Unknown (44 samples, 0.13%)</title><rect x="94.4362%" y="805" width="0.1259%" height="15" fill="rgb(230,182,32)"/><text x="94.6862%" y="815.50"></text></g><g><title>_start (44 samples, 0.13%)</title><rect x="94.4362%" y="789" width="0.1259%" height="15" fill="rgb(242,56,43)"/><text x="94.6862%" y="799.50"></text></g><g><title>__libc_start_main (44 samples, 0.13%)</title><rect x="94.4362%" y="773" width="0.1259%" height="15" fill="rgb(233,99,24)"/><text x="94.6862%" y="783.50"></text></g><g><title>main (44 samples, 0.13%)</title><rect x="94.4362%" y="757" width="0.1259%" height="15" fill="rgb(234,209,42)"/><text x="94.6862%" y="767.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (44 samples, 0.13%)</title><rect x="94.4362%" y="741" width="0.1259%" height="15" fill="rgb(227,7,12)"/><text x="94.6862%" y="751.50"></text></g><g><title>__rust_maybe_catch_panic (44 samples, 0.13%)</title><rect x="94.4362%" y="725" width="0.1259%" height="15" fill="rgb(245,203,43)"/><text x="94.6862%" y="735.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (44 samples, 0.13%)</title><rect x="94.4362%" y="709" width="0.1259%" height="15" fill="rgb(238,205,33)"/><text x="94.6862%" y="719.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (44 samples, 0.13%)</title><rect x="94.4362%" y="693" width="0.1259%" height="15" fill="rgb(231,56,7)"/><text x="94.6862%" y="703.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (44 samples, 0.13%)</title><rect x="94.4362%" y="677" width="0.1259%" height="15" fill="rgb(244,186,29)"/><text x="94.6862%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="94.4362%" y="661" width="0.1259%" height="15" fill="rgb(234,111,31)"/><text x="94.6862%" y="671.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="94.4362%" y="645" width="0.1259%" height="15" fill="rgb(241,149,10)"/><text x="94.6862%" y="655.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="94.4362%" y="629" width="0.1259%" height="15" fill="rgb(249,206,44)"/><text x="94.6862%" y="639.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="94.4362%" y="613" width="0.1259%" height="15" fill="rgb(251,153,30)"/><text x="94.6862%" y="623.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="94.4362%" y="597" width="0.1259%" height="15" fill="rgb(239,152,38)"/><text x="94.6862%" y="607.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="94.4362%" y="581" width="0.1259%" height="15" fill="rgb(249,139,47)"/><text x="94.6862%" y="591.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="94.4362%" y="565" width="0.1259%" height="15" fill="rgb(244,64,35)"/><text x="94.6862%" y="575.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="94.4476%" y="549" width="0.1145%" height="15" fill="rgb(216,46,15)"/><text x="94.6976%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (36 samples, 0.10%)</title><rect x="94.4591%" y="533" width="0.1030%" height="15" fill="rgb(250,74,19)"/><text x="94.7091%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (36 samples, 0.10%)</title><rect x="94.5621%" y="837" width="0.1030%" height="15" fill="rgb(249,42,33)"/><text x="94.8121%" y="847.50"></text></g><g><title>__rg_realloc (36 samples, 0.10%)</title><rect x="94.5621%" y="821" width="0.1030%" height="15" fill="rgb(242,149,17)"/><text x="94.8121%" y="831.50"></text></g><g><title>Unknown (36 samples, 0.10%)</title><rect x="94.5621%" y="805" width="0.1030%" height="15" fill="rgb(244,29,21)"/><text x="94.8121%" y="815.50"></text></g><g><title>_start (36 samples, 0.10%)</title><rect x="94.5621%" y="789" width="0.1030%" height="15" fill="rgb(220,130,37)"/><text x="94.8121%" y="799.50"></text></g><g><title>__libc_start_main (36 samples, 0.10%)</title><rect x="94.5621%" y="773" width="0.1030%" height="15" fill="rgb(211,67,2)"/><text x="94.8121%" y="783.50"></text></g><g><title>main (36 samples, 0.10%)</title><rect x="94.5621%" y="757" width="0.1030%" height="15" fill="rgb(235,68,52)"/><text x="94.8121%" y="767.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (36 samples, 0.10%)</title><rect x="94.5621%" y="741" width="0.1030%" height="15" fill="rgb(246,142,3)"/><text x="94.8121%" y="751.50"></text></g><g><title>__rust_maybe_catch_panic (36 samples, 0.10%)</title><rect x="94.5621%" y="725" width="0.1030%" height="15" fill="rgb(241,25,7)"/><text x="94.8121%" y="735.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (36 samples, 0.10%)</title><rect x="94.5621%" y="709" width="0.1030%" height="15" fill="rgb(242,119,39)"/><text x="94.8121%" y="719.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (36 samples, 0.10%)</title><rect x="94.5621%" y="693" width="0.1030%" height="15" fill="rgb(241,98,45)"/><text x="94.8121%" y="703.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (36 samples, 0.10%)</title><rect x="94.5621%" y="677" width="0.1030%" height="15" fill="rgb(254,28,30)"/><text x="94.8121%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="94.5621%" y="661" width="0.1030%" height="15" fill="rgb(241,142,54)"/><text x="94.8121%" y="671.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="94.5621%" y="645" width="0.1030%" height="15" fill="rgb(222,85,15)"/><text x="94.8121%" y="655.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="94.5621%" y="629" width="0.1030%" height="15" fill="rgb(210,85,47)"/><text x="94.8121%" y="639.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="94.5621%" y="613" width="0.1030%" height="15" fill="rgb(224,206,25)"/><text x="94.8121%" y="623.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="94.5621%" y="597" width="0.1030%" height="15" fill="rgb(243,201,19)"/><text x="94.8121%" y="607.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="94.5621%" y="581" width="0.1030%" height="15" fill="rgb(236,59,4)"/><text x="94.8121%" y="591.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="94.5621%" y="565" width="0.1030%" height="15" fill="rgb(254,179,45)"/><text x="94.8121%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (36 samples, 0.10%)</title><rect x="94.5621%" y="549" width="0.1030%" height="15" fill="rgb(226,14,10)"/><text x="94.8121%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (36 samples, 0.10%)</title><rect x="94.6651%" y="597" width="0.1030%" height="15" fill="rgb(244,27,41)"/><text x="94.9151%" y="607.50"></text></g><g><title>Unknown (104 samples, 0.30%)</title><rect x="94.6651%" y="837" width="0.2977%" height="15" fill="rgb(235,35,32)"/><text x="94.9151%" y="847.50"></text></g><g><title>_start (104 samples, 0.30%)</title><rect x="94.6651%" y="821" width="0.2977%" height="15" fill="rgb(218,68,31)"/><text x="94.9151%" y="831.50"></text></g><g><title>__libc_start_main (104 samples, 0.30%)</title><rect x="94.6651%" y="805" width="0.2977%" height="15" fill="rgb(207,120,37)"/><text x="94.9151%" y="815.50"></text></g><g><title>main (104 samples, 0.30%)</title><rect x="94.6651%" y="789" width="0.2977%" height="15" fill="rgb(227,98,0)"/><text x="94.9151%" y="799.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (104 samples, 0.30%)</title><rect x="94.6651%" y="773" width="0.2977%" height="15" fill="rgb(207,7,3)"/><text x="94.9151%" y="783.50"></text></g><g><title>__rust_maybe_catch_panic (104 samples, 0.30%)</title><rect x="94.6651%" y="757" width="0.2977%" height="15" fill="rgb(206,98,19)"/><text x="94.9151%" y="767.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (104 samples, 0.30%)</title><rect x="94.6651%" y="741" width="0.2977%" height="15" fill="rgb(217,5,26)"/><text x="94.9151%" y="751.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (104 samples, 0.30%)</title><rect x="94.6651%" y="725" width="0.2977%" height="15" fill="rgb(235,190,38)"/><text x="94.9151%" y="735.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (104 samples, 0.30%)</title><rect x="94.6651%" y="709" width="0.2977%" height="15" fill="rgb(247,86,24)"/><text x="94.9151%" y="719.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (104 samples, 0.30%)</title><rect x="94.6651%" y="693" width="0.2977%" height="15" fill="rgb(205,101,16)"/><text x="94.9151%" y="703.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (104 samples, 0.30%)</title><rect x="94.6651%" y="677" width="0.2977%" height="15" fill="rgb(246,168,33)"/><text x="94.9151%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (104 samples, 0.30%)</title><rect x="94.6651%" y="661" width="0.2977%" height="15" fill="rgb(231,114,1)"/><text x="94.9151%" y="671.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (104 samples, 0.30%)</title><rect x="94.6651%" y="645" width="0.2977%" height="15" fill="rgb(207,184,53)"/><text x="94.9151%" y="655.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (104 samples, 0.30%)</title><rect x="94.6651%" y="629" width="0.2977%" height="15" fill="rgb(224,95,51)"/><text x="94.9151%" y="639.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (104 samples, 0.30%)</title><rect x="94.6651%" y="613" width="0.2977%" height="15" fill="rgb(212,188,45)"/><text x="94.9151%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (68 samples, 0.19%)</title><rect x="94.7682%" y="597" width="0.1946%" height="15" fill="rgb(223,154,38)"/><text x="95.0182%" y="607.50"></text></g><g><title>__rg_realloc (64 samples, 0.18%)</title><rect x="94.7796%" y="581" width="0.1832%" height="15" fill="rgb(251,22,52)"/><text x="95.0296%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (36 samples, 0.10%)</title><rect x="95.1002%" y="565" width="0.1030%" height="15" fill="rgb(229,209,22)"/><text x="95.3502%" y="575.50"></text></g><g><title>Unknown (104 samples, 0.30%)</title><rect x="95.1002%" y="821" width="0.2977%" height="15" fill="rgb(234,138,34)"/><text x="95.3502%" y="831.50"></text></g><g><title>_start (104 samples, 0.30%)</title><rect x="95.1002%" y="805" width="0.2977%" height="15" fill="rgb(212,95,11)"/><text x="95.3502%" y="815.50"></text></g><g><title>__libc_start_main (104 samples, 0.30%)</title><rect x="95.1002%" y="789" width="0.2977%" height="15" fill="rgb(240,179,47)"/><text x="95.3502%" y="799.50"></text></g><g><title>main (104 samples, 0.30%)</title><rect x="95.1002%" y="773" width="0.2977%" height="15" fill="rgb(240,163,11)"/><text x="95.3502%" y="783.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (104 samples, 0.30%)</title><rect x="95.1002%" y="757" width="0.2977%" height="15" fill="rgb(236,37,12)"/><text x="95.3502%" y="767.50"></text></g><g><title>__rust_maybe_catch_panic (104 samples, 0.30%)</title><rect x="95.1002%" y="741" width="0.2977%" height="15" fill="rgb(232,164,16)"/><text x="95.3502%" y="751.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (104 samples, 0.30%)</title><rect x="95.1002%" y="725" width="0.2977%" height="15" fill="rgb(244,205,15)"/><text x="95.3502%" y="735.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (104 samples, 0.30%)</title><rect x="95.1002%" y="709" width="0.2977%" height="15" fill="rgb(223,117,47)"/><text x="95.3502%" y="719.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (104 samples, 0.30%)</title><rect x="95.1002%" y="693" width="0.2977%" height="15" fill="rgb(244,107,35)"/><text x="95.3502%" y="703.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (104 samples, 0.30%)</title><rect x="95.1002%" y="677" width="0.2977%" height="15" fill="rgb(205,140,8)"/><text x="95.3502%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (104 samples, 0.30%)</title><rect x="95.1002%" y="661" width="0.2977%" height="15" fill="rgb(228,84,46)"/><text x="95.3502%" y="671.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (104 samples, 0.30%)</title><rect x="95.1002%" y="645" width="0.2977%" height="15" fill="rgb(254,188,9)"/><text x="95.3502%" y="655.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (104 samples, 0.30%)</title><rect x="95.1002%" y="629" width="0.2977%" height="15" fill="rgb(206,112,54)"/><text x="95.3502%" y="639.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (104 samples, 0.30%)</title><rect x="95.1002%" y="613" width="0.2977%" height="15" fill="rgb(216,84,49)"/><text x="95.3502%" y="623.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (104 samples, 0.30%)</title><rect x="95.1002%" y="597" width="0.2977%" height="15" fill="rgb(214,194,35)"/><text x="95.3502%" y="607.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (104 samples, 0.30%)</title><rect x="95.1002%" y="581" width="0.2977%" height="15" fill="rgb(249,28,3)"/><text x="95.3502%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (68 samples, 0.19%)</title><rect x="95.2032%" y="565" width="0.1946%" height="15" fill="rgb(222,56,52)"/><text x="95.4532%" y="575.50"></text></g><g><title>__rg_realloc (64 samples, 0.18%)</title><rect x="95.2147%" y="549" width="0.1832%" height="15" fill="rgb(245,217,50)"/><text x="95.4647%" y="559.50"></text></g><g><title>Unknown (40 samples, 0.11%)</title><rect x="95.5352%" y="805" width="0.1145%" height="15" fill="rgb(213,201,24)"/><text x="95.7852%" y="815.50"></text></g><g><title>_start (40 samples, 0.11%)</title><rect x="95.5352%" y="789" width="0.1145%" height="15" fill="rgb(248,116,28)"/><text x="95.7852%" y="799.50"></text></g><g><title>__libc_start_main (40 samples, 0.11%)</title><rect x="95.5352%" y="773" width="0.1145%" height="15" fill="rgb(219,72,43)"/><text x="95.7852%" y="783.50"></text></g><g><title>main (40 samples, 0.11%)</title><rect x="95.5352%" y="757" width="0.1145%" height="15" fill="rgb(209,138,14)"/><text x="95.7852%" y="767.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (40 samples, 0.11%)</title><rect x="95.5352%" y="741" width="0.1145%" height="15" fill="rgb(222,18,33)"/><text x="95.7852%" y="751.50"></text></g><g><title>__rust_maybe_catch_panic (40 samples, 0.11%)</title><rect x="95.5352%" y="725" width="0.1145%" height="15" fill="rgb(213,199,7)"/><text x="95.7852%" y="735.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (40 samples, 0.11%)</title><rect x="95.5352%" y="709" width="0.1145%" height="15" fill="rgb(250,110,10)"/><text x="95.7852%" y="719.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (40 samples, 0.11%)</title><rect x="95.5352%" y="693" width="0.1145%" height="15" fill="rgb(248,123,6)"/><text x="95.7852%" y="703.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (40 samples, 0.11%)</title><rect x="95.5352%" y="677" width="0.1145%" height="15" fill="rgb(206,91,31)"/><text x="95.7852%" y="687.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="95.5352%" y="661" width="0.1145%" height="15" fill="rgb(211,154,13)"/><text x="95.7852%" y="671.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="95.5352%" y="645" width="0.1145%" height="15" fill="rgb(225,148,7)"/><text x="95.7852%" y="655.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="95.5352%" y="629" width="0.1145%" height="15" fill="rgb(220,160,43)"/><text x="95.7852%" y="639.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="95.5352%" y="613" width="0.1145%" height="15" fill="rgb(213,52,39)"/><text x="95.7852%" y="623.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="95.5352%" y="597" width="0.1145%" height="15" fill="rgb(243,137,7)"/><text x="95.7852%" y="607.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="95.5352%" y="581" width="0.1145%" height="15" fill="rgb(230,79,13)"/><text x="95.7852%" y="591.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="95.5352%" y="565" width="0.1145%" height="15" fill="rgb(247,105,23)"/><text x="95.7852%" y="575.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="95.5352%" y="549" width="0.1145%" height="15" fill="rgb(223,179,41)"/><text x="95.7852%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (36 samples, 0.10%)</title><rect x="95.9817%" y="469" width="0.1030%" height="15" fill="rgb(218,9,34)"/><text x="96.2317%" y="479.50"></text></g><g><title>Unknown (48 samples, 0.14%)</title><rect x="95.9817%" y="773" width="0.1374%" height="15" fill="rgb(222,106,8)"/><text x="96.2317%" y="783.50"></text></g><g><title>_start (48 samples, 0.14%)</title><rect x="95.9817%" y="757" width="0.1374%" height="15" fill="rgb(211,220,0)"/><text x="96.2317%" y="767.50"></text></g><g><title>__libc_start_main (48 samples, 0.14%)</title><rect x="95.9817%" y="741" width="0.1374%" height="15" fill="rgb(229,52,16)"/><text x="96.2317%" y="751.50"></text></g><g><title>main (48 samples, 0.14%)</title><rect x="95.9817%" y="725" width="0.1374%" height="15" fill="rgb(212,155,18)"/><text x="96.2317%" y="735.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (48 samples, 0.14%)</title><rect x="95.9817%" y="709" width="0.1374%" height="15" fill="rgb(242,21,14)"/><text x="96.2317%" y="719.50"></text></g><g><title>__rust_maybe_catch_panic (48 samples, 0.14%)</title><rect x="95.9817%" y="693" width="0.1374%" height="15" fill="rgb(222,19,48)"/><text x="96.2317%" y="703.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (48 samples, 0.14%)</title><rect x="95.9817%" y="677" width="0.1374%" height="15" fill="rgb(232,45,27)"/><text x="96.2317%" y="687.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (48 samples, 0.14%)</title><rect x="95.9817%" y="661" width="0.1374%" height="15" fill="rgb(249,103,42)"/><text x="96.2317%" y="671.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (48 samples, 0.14%)</title><rect x="95.9817%" y="645" width="0.1374%" height="15" fill="rgb(246,81,33)"/><text x="96.2317%" y="655.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="95.9817%" y="629" width="0.1374%" height="15" fill="rgb(252,33,42)"/><text x="96.2317%" y="639.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="95.9817%" y="613" width="0.1374%" height="15" fill="rgb(209,212,41)"/><text x="96.2317%" y="623.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="95.9817%" y="597" width="0.1374%" height="15" fill="rgb(207,154,6)"/><text x="96.2317%" y="607.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="95.9817%" y="581" width="0.1374%" height="15" fill="rgb(223,64,47)"/><text x="96.2317%" y="591.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="95.9817%" y="565" width="0.1374%" height="15" fill="rgb(211,161,38)"/><text x="96.2317%" y="575.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="95.9817%" y="549" width="0.1374%" height="15" fill="rgb(219,138,40)"/><text x="96.2317%" y="559.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="95.9817%" y="533" width="0.1374%" height="15" fill="rgb(241,228,46)"/><text x="96.2317%" y="543.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="95.9817%" y="517" width="0.1374%" height="15" fill="rgb(223,209,38)"/><text x="96.2317%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="95.9817%" y="501" width="0.1374%" height="15" fill="rgb(236,164,45)"/><text x="96.2317%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="95.9817%" y="485" width="0.1374%" height="15" fill="rgb(231,15,5)"/><text x="96.2317%" y="495.50"></text></g><g><title>Unknown (56 samples, 0.16%)</title><rect x="96.7144%" y="725" width="0.1603%" height="15" fill="rgb(252,35,15)"/><text x="96.9644%" y="735.50"></text></g><g><title>_start (56 samples, 0.16%)</title><rect x="96.7144%" y="709" width="0.1603%" height="15" fill="rgb(248,181,18)"/><text x="96.9644%" y="719.50"></text></g><g><title>__libc_start_main (56 samples, 0.16%)</title><rect x="96.7144%" y="693" width="0.1603%" height="15" fill="rgb(233,39,42)"/><text x="96.9644%" y="703.50"></text></g><g><title>main (56 samples, 0.16%)</title><rect x="96.7144%" y="677" width="0.1603%" height="15" fill="rgb(238,110,33)"/><text x="96.9644%" y="687.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (56 samples, 0.16%)</title><rect x="96.7144%" y="661" width="0.1603%" height="15" fill="rgb(233,195,10)"/><text x="96.9644%" y="671.50"></text></g><g><title>__rust_maybe_catch_panic (56 samples, 0.16%)</title><rect x="96.7144%" y="645" width="0.1603%" height="15" fill="rgb(254,105,3)"/><text x="96.9644%" y="655.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (56 samples, 0.16%)</title><rect x="96.7144%" y="629" width="0.1603%" height="15" fill="rgb(221,225,9)"/><text x="96.9644%" y="639.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (56 samples, 0.16%)</title><rect x="96.7144%" y="613" width="0.1603%" height="15" fill="rgb(224,227,45)"/><text x="96.9644%" y="623.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (56 samples, 0.16%)</title><rect x="96.7144%" y="597" width="0.1603%" height="15" fill="rgb(229,198,43)"/><text x="96.9644%" y="607.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="96.7144%" y="581" width="0.1603%" height="15" fill="rgb(206,209,35)"/><text x="96.9644%" y="591.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="96.7144%" y="565" width="0.1603%" height="15" fill="rgb(245,195,53)"/><text x="96.9644%" y="575.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="96.7144%" y="549" width="0.1603%" height="15" fill="rgb(240,92,26)"/><text x="96.9644%" y="559.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="96.7144%" y="533" width="0.1603%" height="15" fill="rgb(207,40,23)"/><text x="96.9644%" y="543.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="96.7144%" y="517" width="0.1603%" height="15" fill="rgb(223,111,35)"/><text x="96.9644%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="96.7144%" y="501" width="0.1603%" height="15" fill="rgb(229,147,28)"/><text x="96.9644%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="96.7144%" y="485" width="0.1603%" height="15" fill="rgb(211,29,28)"/><text x="96.9644%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="96.7144%" y="469" width="0.1603%" height="15" fill="rgb(228,72,33)"/><text x="96.9644%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="96.7144%" y="453" width="0.1603%" height="15" fill="rgb(205,214,31)"/><text x="96.9644%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="96.7144%" y="437" width="0.1603%" height="15" fill="rgb(224,111,15)"/><text x="96.9644%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="96.7144%" y="421" width="0.1603%" height="15" fill="rgb(253,21,26)"/><text x="96.9644%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="96.7144%" y="405" width="0.1603%" height="15" fill="rgb(245,139,43)"/><text x="96.9644%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="96.7144%" y="389" width="0.1603%" height="15" fill="rgb(252,170,7)"/><text x="96.9644%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (36 samples, 0.10%)</title><rect x="96.7716%" y="373" width="0.1030%" height="15" fill="rgb(231,118,14)"/><text x="97.0216%" y="383.50"></text></g><g><title>Unknown (48 samples, 0.14%)</title><rect x="97.0120%" y="709" width="0.1374%" height="15" fill="rgb(238,83,0)"/><text x="97.2620%" y="719.50"></text></g><g><title>_start (48 samples, 0.14%)</title><rect x="97.0120%" y="693" width="0.1374%" height="15" fill="rgb(221,39,39)"/><text x="97.2620%" y="703.50"></text></g><g><title>__libc_start_main (48 samples, 0.14%)</title><rect x="97.0120%" y="677" width="0.1374%" height="15" fill="rgb(222,119,46)"/><text x="97.2620%" y="687.50"></text></g><g><title>main (48 samples, 0.14%)</title><rect x="97.0120%" y="661" width="0.1374%" height="15" fill="rgb(222,165,49)"/><text x="97.2620%" y="671.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (48 samples, 0.14%)</title><rect x="97.0120%" y="645" width="0.1374%" height="15" fill="rgb(219,113,52)"/><text x="97.2620%" y="655.50"></text></g><g><title>__rust_maybe_catch_panic (48 samples, 0.14%)</title><rect x="97.0120%" y="629" width="0.1374%" height="15" fill="rgb(214,7,15)"/><text x="97.2620%" y="639.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (48 samples, 0.14%)</title><rect x="97.0120%" y="613" width="0.1374%" height="15" fill="rgb(235,32,4)"/><text x="97.2620%" y="623.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (48 samples, 0.14%)</title><rect x="97.0120%" y="597" width="0.1374%" height="15" fill="rgb(238,90,54)"/><text x="97.2620%" y="607.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (48 samples, 0.14%)</title><rect x="97.0120%" y="581" width="0.1374%" height="15" fill="rgb(213,208,19)"/><text x="97.2620%" y="591.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="565" width="0.1374%" height="15" fill="rgb(233,156,4)"/><text x="97.2620%" y="575.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="549" width="0.1374%" height="15" fill="rgb(207,194,5)"/><text x="97.2620%" y="559.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="533" width="0.1374%" height="15" fill="rgb(206,111,30)"/><text x="97.2620%" y="543.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="517" width="0.1374%" height="15" fill="rgb(243,70,54)"/><text x="97.2620%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="501" width="0.1374%" height="15" fill="rgb(242,28,8)"/><text x="97.2620%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="485" width="0.1374%" height="15" fill="rgb(219,106,18)"/><text x="97.2620%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="469" width="0.1374%" height="15" fill="rgb(244,222,10)"/><text x="97.2620%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="453" width="0.1374%" height="15" fill="rgb(236,179,52)"/><text x="97.2620%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="437" width="0.1374%" height="15" fill="rgb(213,23,39)"/><text x="97.2620%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="421" width="0.1374%" height="15" fill="rgb(238,48,10)"/><text x="97.2620%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="405" width="0.1374%" height="15" fill="rgb(251,196,23)"/><text x="97.2620%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="389" width="0.1374%" height="15" fill="rgb(250,152,24)"/><text x="97.2620%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="373" width="0.1374%" height="15" fill="rgb(209,150,17)"/><text x="97.2620%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.0120%" y="357" width="0.1374%" height="15" fill="rgb(234,202,34)"/><text x="97.2620%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (36 samples, 0.10%)</title><rect x="97.0464%" y="341" width="0.1030%" height="15" fill="rgb(253,148,53)"/><text x="97.2964%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (36 samples, 0.10%)</title><rect x="97.3669%" y="677" width="0.1030%" height="15" fill="rgb(218,129,16)"/><text x="97.6169%" y="687.50"></text></g><g><title>__rg_realloc (36 samples, 0.10%)</title><rect x="97.3669%" y="661" width="0.1030%" height="15" fill="rgb(216,85,19)"/><text x="97.6169%" y="671.50"></text></g><g><title>Unknown (36 samples, 0.10%)</title><rect x="97.3669%" y="645" width="0.1030%" height="15" fill="rgb(235,228,7)"/><text x="97.6169%" y="655.50"></text></g><g><title>_start (36 samples, 0.10%)</title><rect x="97.3669%" y="629" width="0.1030%" height="15" fill="rgb(245,175,0)"/><text x="97.6169%" y="639.50"></text></g><g><title>__libc_start_main (36 samples, 0.10%)</title><rect x="97.3669%" y="613" width="0.1030%" height="15" fill="rgb(208,168,36)"/><text x="97.6169%" y="623.50"></text></g><g><title>main (36 samples, 0.10%)</title><rect x="97.3669%" y="597" width="0.1030%" height="15" fill="rgb(246,171,24)"/><text x="97.6169%" y="607.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (36 samples, 0.10%)</title><rect x="97.3669%" y="581" width="0.1030%" height="15" fill="rgb(215,142,24)"/><text x="97.6169%" y="591.50"></text></g><g><title>__rust_maybe_catch_panic (36 samples, 0.10%)</title><rect x="97.3669%" y="565" width="0.1030%" height="15" fill="rgb(250,187,7)"/><text x="97.6169%" y="575.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (36 samples, 0.10%)</title><rect x="97.3669%" y="549" width="0.1030%" height="15" fill="rgb(228,66,33)"/><text x="97.6169%" y="559.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (36 samples, 0.10%)</title><rect x="97.3669%" y="533" width="0.1030%" height="15" fill="rgb(234,215,21)"/><text x="97.6169%" y="543.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (36 samples, 0.10%)</title><rect x="97.3669%" y="517" width="0.1030%" height="15" fill="rgb(222,191,20)"/><text x="97.6169%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="501" width="0.1030%" height="15" fill="rgb(245,79,54)"/><text x="97.6169%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="485" width="0.1030%" height="15" fill="rgb(240,10,37)"/><text x="97.6169%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="469" width="0.1030%" height="15" fill="rgb(214,192,32)"/><text x="97.6169%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="453" width="0.1030%" height="15" fill="rgb(209,36,54)"/><text x="97.6169%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="437" width="0.1030%" height="15" fill="rgb(220,10,11)"/><text x="97.6169%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="421" width="0.1030%" height="15" fill="rgb(221,106,17)"/><text x="97.6169%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="405" width="0.1030%" height="15" fill="rgb(251,142,44)"/><text x="97.6169%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="389" width="0.1030%" height="15" fill="rgb(238,13,15)"/><text x="97.6169%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="373" width="0.1030%" height="15" fill="rgb(208,107,27)"/><text x="97.6169%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="357" width="0.1030%" height="15" fill="rgb(205,136,37)"/><text x="97.6169%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="341" width="0.1030%" height="15" fill="rgb(250,205,27)"/><text x="97.6169%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="325" width="0.1030%" height="15" fill="rgb(210,80,43)"/><text x="97.6169%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="309" width="0.1030%" height="15" fill="rgb(247,160,36)"/><text x="97.6169%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="293" width="0.1030%" height="15" fill="rgb(234,13,49)"/><text x="97.6169%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="277" width="0.1030%" height="15" fill="rgb(234,122,0)"/><text x="97.6169%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="261" width="0.1030%" height="15" fill="rgb(207,146,38)"/><text x="97.6169%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="97.3669%" y="245" width="0.1030%" height="15" fill="rgb(207,177,25)"/><text x="97.6169%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (36 samples, 0.10%)</title><rect x="97.3669%" y="229" width="0.1030%" height="15" fill="rgb(211,178,42)"/><text x="97.6169%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (48 samples, 0.14%)</title><rect x="97.4699%" y="677" width="0.1374%" height="15" fill="rgb(230,69,54)"/><text x="97.7199%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h260bd8b6ecb4ec80 (48 samples, 0.14%)</title><rect x="97.4699%" y="661" width="0.1374%" height="15" fill="rgb(214,135,41)"/><text x="97.7199%" y="671.50"></text></g><g><title>Unknown (48 samples, 0.14%)</title><rect x="97.4699%" y="645" width="0.1374%" height="15" fill="rgb(237,67,25)"/><text x="97.7199%" y="655.50"></text></g><g><title>_start (48 samples, 0.14%)</title><rect x="97.4699%" y="629" width="0.1374%" height="15" fill="rgb(222,189,50)"/><text x="97.7199%" y="639.50"></text></g><g><title>__libc_start_main (48 samples, 0.14%)</title><rect x="97.4699%" y="613" width="0.1374%" height="15" fill="rgb(245,148,34)"/><text x="97.7199%" y="623.50"></text></g><g><title>main (48 samples, 0.14%)</title><rect x="97.4699%" y="597" width="0.1374%" height="15" fill="rgb(222,29,6)"/><text x="97.7199%" y="607.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (48 samples, 0.14%)</title><rect x="97.4699%" y="581" width="0.1374%" height="15" fill="rgb(221,189,43)"/><text x="97.7199%" y="591.50"></text></g><g><title>__rust_maybe_catch_panic (48 samples, 0.14%)</title><rect x="97.4699%" y="565" width="0.1374%" height="15" fill="rgb(207,36,27)"/><text x="97.7199%" y="575.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (48 samples, 0.14%)</title><rect x="97.4699%" y="549" width="0.1374%" height="15" fill="rgb(217,90,24)"/><text x="97.7199%" y="559.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (48 samples, 0.14%)</title><rect x="97.4699%" y="533" width="0.1374%" height="15" fill="rgb(224,66,35)"/><text x="97.7199%" y="543.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (48 samples, 0.14%)</title><rect x="97.4699%" y="517" width="0.1374%" height="15" fill="rgb(221,13,50)"/><text x="97.7199%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="501" width="0.1374%" height="15" fill="rgb(236,68,49)"/><text x="97.7199%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="485" width="0.1374%" height="15" fill="rgb(229,146,28)"/><text x="97.7199%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="469" width="0.1374%" height="15" fill="rgb(225,31,38)"/><text x="97.7199%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="453" width="0.1374%" height="15" fill="rgb(250,208,3)"/><text x="97.7199%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="437" width="0.1374%" height="15" fill="rgb(246,54,23)"/><text x="97.7199%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="421" width="0.1374%" height="15" fill="rgb(243,76,11)"/><text x="97.7199%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="405" width="0.1374%" height="15" fill="rgb(245,21,50)"/><text x="97.7199%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="389" width="0.1374%" height="15" fill="rgb(228,9,43)"/><text x="97.7199%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="373" width="0.1374%" height="15" fill="rgb(208,100,47)"/><text x="97.7199%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="357" width="0.1374%" height="15" fill="rgb(232,26,8)"/><text x="97.7199%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="341" width="0.1374%" height="15" fill="rgb(216,166,38)"/><text x="97.7199%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="325" width="0.1374%" height="15" fill="rgb(251,202,51)"/><text x="97.7199%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="309" width="0.1374%" height="15" fill="rgb(254,216,34)"/><text x="97.7199%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="293" width="0.1374%" height="15" fill="rgb(251,32,27)"/><text x="97.7199%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="277" width="0.1374%" height="15" fill="rgb(208,127,28)"/><text x="97.7199%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="261" width="0.1374%" height="15" fill="rgb(224,137,22)"/><text x="97.7199%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="97.4699%" y="245" width="0.1374%" height="15" fill="rgb(254,70,32)"/><text x="97.7199%" y="255.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="97.4814%" y="229" width="0.1259%" height="15" fill="rgb(229,75,37)"/><text x="97.7314%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (40 samples, 0.11%)</title><rect x="97.4928%" y="213" width="0.1145%" height="15" fill="rgb(252,64,23)"/><text x="97.7428%" y="223.50"></text></g><g><title>Unknown (40 samples, 0.11%)</title><rect x="97.6417%" y="677" width="0.1145%" height="15" fill="rgb(232,162,48)"/><text x="97.8917%" y="687.50"></text></g><g><title>_start (40 samples, 0.11%)</title><rect x="97.6417%" y="661" width="0.1145%" height="15" fill="rgb(246,160,12)"/><text x="97.8917%" y="671.50"></text></g><g><title>__libc_start_main (40 samples, 0.11%)</title><rect x="97.6417%" y="645" width="0.1145%" height="15" fill="rgb(247,166,0)"/><text x="97.8917%" y="655.50"></text></g><g><title>main (40 samples, 0.11%)</title><rect x="97.6417%" y="629" width="0.1145%" height="15" fill="rgb(249,219,21)"/><text x="97.8917%" y="639.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (40 samples, 0.11%)</title><rect x="97.6417%" y="613" width="0.1145%" height="15" fill="rgb(205,209,3)"/><text x="97.8917%" y="623.50"></text></g><g><title>__rust_maybe_catch_panic (40 samples, 0.11%)</title><rect x="97.6417%" y="597" width="0.1145%" height="15" fill="rgb(243,44,1)"/><text x="97.8917%" y="607.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (40 samples, 0.11%)</title><rect x="97.6417%" y="581" width="0.1145%" height="15" fill="rgb(206,159,16)"/><text x="97.8917%" y="591.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (40 samples, 0.11%)</title><rect x="97.6417%" y="565" width="0.1145%" height="15" fill="rgb(244,77,30)"/><text x="97.8917%" y="575.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (40 samples, 0.11%)</title><rect x="97.6417%" y="549" width="0.1145%" height="15" fill="rgb(218,69,12)"/><text x="97.8917%" y="559.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="533" width="0.1145%" height="15" fill="rgb(212,87,7)"/><text x="97.8917%" y="543.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="517" width="0.1145%" height="15" fill="rgb(245,114,25)"/><text x="97.8917%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="501" width="0.1145%" height="15" fill="rgb(210,61,42)"/><text x="97.8917%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="485" width="0.1145%" height="15" fill="rgb(211,52,33)"/><text x="97.8917%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="469" width="0.1145%" height="15" fill="rgb(234,58,33)"/><text x="97.8917%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="453" width="0.1145%" height="15" fill="rgb(220,115,36)"/><text x="97.8917%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="437" width="0.1145%" height="15" fill="rgb(243,153,54)"/><text x="97.8917%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="421" width="0.1145%" height="15" fill="rgb(251,47,18)"/><text x="97.8917%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="405" width="0.1145%" height="15" fill="rgb(242,102,42)"/><text x="97.8917%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="389" width="0.1145%" height="15" fill="rgb(234,31,38)"/><text x="97.8917%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="373" width="0.1145%" height="15" fill="rgb(221,117,51)"/><text x="97.8917%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="357" width="0.1145%" height="15" fill="rgb(212,20,18)"/><text x="97.8917%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="341" width="0.1145%" height="15" fill="rgb(245,133,36)"/><text x="97.8917%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="325" width="0.1145%" height="15" fill="rgb(212,6,19)"/><text x="97.8917%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="309" width="0.1145%" height="15" fill="rgb(218,1,36)"/><text x="97.8917%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="97.6417%" y="293" width="0.1145%" height="15" fill="rgb(246,84,54)"/><text x="97.8917%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (68 samples, 0.19%)</title><rect x="97.9393%" y="245" width="0.1946%" height="15" fill="rgb(242,110,6)"/><text x="98.1893%" y="255.50"></text></g><g><title>__rg_realloc (64 samples, 0.18%)</title><rect x="97.9508%" y="229" width="0.1832%" height="15" fill="rgb(214,47,5)"/><text x="98.2008%" y="239.50"></text></g><g><title>Unknown (80 samples, 0.23%)</title><rect x="97.9393%" y="661" width="0.2290%" height="15" fill="rgb(218,159,25)"/><text x="98.1893%" y="671.50"></text></g><g><title>_start (80 samples, 0.23%)</title><rect x="97.9393%" y="645" width="0.2290%" height="15" fill="rgb(215,211,28)"/><text x="98.1893%" y="655.50"></text></g><g><title>__libc_start_main (80 samples, 0.23%)</title><rect x="97.9393%" y="629" width="0.2290%" height="15" fill="rgb(238,59,32)"/><text x="98.1893%" y="639.50"></text></g><g><title>main (80 samples, 0.23%)</title><rect x="97.9393%" y="613" width="0.2290%" height="15" fill="rgb(226,82,3)"/><text x="98.1893%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (80 samples, 0.23%)</title><rect x="97.9393%" y="597" width="0.2290%" height="15" fill="rgb(240,164,32)"/><text x="98.1893%" y="607.50"></text></g><g><title>__rust_maybe_catch_panic (80 samples, 0.23%)</title><rect x="97.9393%" y="581" width="0.2290%" height="15" fill="rgb(232,46,7)"/><text x="98.1893%" y="591.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (80 samples, 0.23%)</title><rect x="97.9393%" y="565" width="0.2290%" height="15" fill="rgb(229,129,53)"/><text x="98.1893%" y="575.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (80 samples, 0.23%)</title><rect x="97.9393%" y="549" width="0.2290%" height="15" fill="rgb(234,188,29)"/><text x="98.1893%" y="559.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (80 samples, 0.23%)</title><rect x="97.9393%" y="533" width="0.2290%" height="15" fill="rgb(246,141,4)"/><text x="98.1893%" y="543.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="517" width="0.2290%" height="15" fill="rgb(229,23,39)"/><text x="98.1893%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="501" width="0.2290%" height="15" fill="rgb(206,12,3)"/><text x="98.1893%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="485" width="0.2290%" height="15" fill="rgb(252,226,20)"/><text x="98.1893%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="469" width="0.2290%" height="15" fill="rgb(216,123,35)"/><text x="98.1893%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="453" width="0.2290%" height="15" fill="rgb(212,68,40)"/><text x="98.1893%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="437" width="0.2290%" height="15" fill="rgb(254,125,32)"/><text x="98.1893%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="421" width="0.2290%" height="15" fill="rgb(253,97,22)"/><text x="98.1893%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="405" width="0.2290%" height="15" fill="rgb(241,101,14)"/><text x="98.1893%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="389" width="0.2290%" height="15" fill="rgb(238,103,29)"/><text x="98.1893%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="373" width="0.2290%" height="15" fill="rgb(233,195,47)"/><text x="98.1893%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="357" width="0.2290%" height="15" fill="rgb(246,218,30)"/><text x="98.1893%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="341" width="0.2290%" height="15" fill="rgb(219,145,47)"/><text x="98.1893%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="325" width="0.2290%" height="15" fill="rgb(243,12,26)"/><text x="98.1893%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="309" width="0.2290%" height="15" fill="rgb(214,87,16)"/><text x="98.1893%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="293" width="0.2290%" height="15" fill="rgb(208,99,42)"/><text x="98.1893%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="277" width="0.2290%" height="15" fill="rgb(253,99,2)"/><text x="98.1893%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (80 samples, 0.23%)</title><rect x="97.9393%" y="261" width="0.2290%" height="15" fill="rgb(220,168,23)"/><text x="98.1893%" y="271.50"></text></g><g><title>Unknown (56 samples, 0.16%)</title><rect x="98.3057%" y="645" width="0.1603%" height="15" fill="rgb(242,38,24)"/><text x="98.5557%" y="655.50"></text></g><g><title>_start (56 samples, 0.16%)</title><rect x="98.3057%" y="629" width="0.1603%" height="15" fill="rgb(225,182,9)"/><text x="98.5557%" y="639.50"></text></g><g><title>__libc_start_main (56 samples, 0.16%)</title><rect x="98.3057%" y="613" width="0.1603%" height="15" fill="rgb(243,178,37)"/><text x="98.5557%" y="623.50"></text></g><g><title>main (56 samples, 0.16%)</title><rect x="98.3057%" y="597" width="0.1603%" height="15" fill="rgb(232,139,19)"/><text x="98.5557%" y="607.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (56 samples, 0.16%)</title><rect x="98.3057%" y="581" width="0.1603%" height="15" fill="rgb(225,201,24)"/><text x="98.5557%" y="591.50"></text></g><g><title>__rust_maybe_catch_panic (56 samples, 0.16%)</title><rect x="98.3057%" y="565" width="0.1603%" height="15" fill="rgb(221,47,46)"/><text x="98.5557%" y="575.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (56 samples, 0.16%)</title><rect x="98.3057%" y="549" width="0.1603%" height="15" fill="rgb(249,23,13)"/><text x="98.5557%" y="559.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (56 samples, 0.16%)</title><rect x="98.3057%" y="533" width="0.1603%" height="15" fill="rgb(219,9,5)"/><text x="98.5557%" y="543.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (56 samples, 0.16%)</title><rect x="98.3057%" y="517" width="0.1603%" height="15" fill="rgb(254,171,16)"/><text x="98.5557%" y="527.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="501" width="0.1603%" height="15" fill="rgb(230,171,20)"/><text x="98.5557%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="485" width="0.1603%" height="15" fill="rgb(210,71,41)"/><text x="98.5557%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="469" width="0.1603%" height="15" fill="rgb(206,173,20)"/><text x="98.5557%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="453" width="0.1603%" height="15" fill="rgb(233,88,34)"/><text x="98.5557%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="437" width="0.1603%" height="15" fill="rgb(223,209,46)"/><text x="98.5557%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="421" width="0.1603%" height="15" fill="rgb(250,43,18)"/><text x="98.5557%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="405" width="0.1603%" height="15" fill="rgb(208,13,10)"/><text x="98.5557%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="389" width="0.1603%" height="15" fill="rgb(212,200,36)"/><text x="98.5557%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="373" width="0.1603%" height="15" fill="rgb(225,90,30)"/><text x="98.5557%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="357" width="0.1603%" height="15" fill="rgb(236,182,39)"/><text x="98.5557%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="341" width="0.1603%" height="15" fill="rgb(212,144,35)"/><text x="98.5557%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="325" width="0.1603%" height="15" fill="rgb(228,63,44)"/><text x="98.5557%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="309" width="0.1603%" height="15" fill="rgb(228,109,6)"/><text x="98.5557%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="293" width="0.1603%" height="15" fill="rgb(238,117,24)"/><text x="98.5557%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="277" width="0.1603%" height="15" fill="rgb(242,26,26)"/><text x="98.5557%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="261" width="0.1603%" height="15" fill="rgb(221,92,48)"/><text x="98.5557%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="245" width="0.1603%" height="15" fill="rgb(209,209,32)"/><text x="98.5557%" y="255.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (56 samples, 0.16%)</title><rect x="98.3057%" y="229" width="0.1603%" height="15" fill="rgb(221,70,22)"/><text x="98.5557%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (36 samples, 0.10%)</title><rect x="98.3629%" y="213" width="0.1030%" height="15" fill="rgb(248,145,5)"/><text x="98.6129%" y="223.50"></text></g><g><title>Unknown (40 samples, 0.11%)</title><rect x="98.5919%" y="629" width="0.1145%" height="15" fill="rgb(226,116,26)"/><text x="98.8419%" y="639.50"></text></g><g><title>_start (40 samples, 0.11%)</title><rect x="98.5919%" y="613" width="0.1145%" height="15" fill="rgb(244,5,17)"/><text x="98.8419%" y="623.50"></text></g><g><title>__libc_start_main (40 samples, 0.11%)</title><rect x="98.5919%" y="597" width="0.1145%" height="15" fill="rgb(252,159,33)"/><text x="98.8419%" y="607.50"></text></g><g><title>main (40 samples, 0.11%)</title><rect x="98.5919%" y="581" width="0.1145%" height="15" fill="rgb(206,71,0)"/><text x="98.8419%" y="591.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (40 samples, 0.11%)</title><rect x="98.5919%" y="565" width="0.1145%" height="15" fill="rgb(233,118,54)"/><text x="98.8419%" y="575.50"></text></g><g><title>__rust_maybe_catch_panic (40 samples, 0.11%)</title><rect x="98.5919%" y="549" width="0.1145%" height="15" fill="rgb(234,83,48)"/><text x="98.8419%" y="559.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (40 samples, 0.11%)</title><rect x="98.5919%" y="533" width="0.1145%" height="15" fill="rgb(228,3,54)"/><text x="98.8419%" y="543.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (40 samples, 0.11%)</title><rect x="98.5919%" y="517" width="0.1145%" height="15" fill="rgb(226,155,13)"/><text x="98.8419%" y="527.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (40 samples, 0.11%)</title><rect x="98.5919%" y="501" width="0.1145%" height="15" fill="rgb(241,28,37)"/><text x="98.8419%" y="511.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="485" width="0.1145%" height="15" fill="rgb(233,93,10)"/><text x="98.8419%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="469" width="0.1145%" height="15" fill="rgb(225,113,19)"/><text x="98.8419%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="453" width="0.1145%" height="15" fill="rgb(241,2,18)"/><text x="98.8419%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="437" width="0.1145%" height="15" fill="rgb(228,207,21)"/><text x="98.8419%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="421" width="0.1145%" height="15" fill="rgb(213,211,35)"/><text x="98.8419%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="405" width="0.1145%" height="15" fill="rgb(209,83,10)"/><text x="98.8419%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="389" width="0.1145%" height="15" fill="rgb(209,164,1)"/><text x="98.8419%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="373" width="0.1145%" height="15" fill="rgb(213,184,43)"/><text x="98.8419%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="357" width="0.1145%" height="15" fill="rgb(231,61,34)"/><text x="98.8419%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="341" width="0.1145%" height="15" fill="rgb(235,75,3)"/><text x="98.8419%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="325" width="0.1145%" height="15" fill="rgb(220,106,47)"/><text x="98.8419%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="309" width="0.1145%" height="15" fill="rgb(210,196,33)"/><text x="98.8419%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="293" width="0.1145%" height="15" fill="rgb(229,154,42)"/><text x="98.8419%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="277" width="0.1145%" height="15" fill="rgb(228,114,26)"/><text x="98.8419%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="261" width="0.1145%" height="15" fill="rgb(208,144,1)"/><text x="98.8419%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="245" width="0.1145%" height="15" fill="rgb(239,112,37)"/><text x="98.8419%" y="255.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="229" width="0.1145%" height="15" fill="rgb(210,96,50)"/><text x="98.8419%" y="239.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="213" width="0.1145%" height="15" fill="rgb(222,178,2)"/><text x="98.8419%" y="223.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.5919%" y="197" width="0.1145%" height="15" fill="rgb(226,74,18)"/><text x="98.8419%" y="207.50"></text></g><g><title>Unknown (40 samples, 0.11%)</title><rect x="98.8208%" y="613" width="0.1145%" height="15" fill="rgb(225,67,54)"/><text x="99.0708%" y="623.50"></text></g><g><title>_start (40 samples, 0.11%)</title><rect x="98.8208%" y="597" width="0.1145%" height="15" fill="rgb(251,92,32)"/><text x="99.0708%" y="607.50"></text></g><g><title>__libc_start_main (40 samples, 0.11%)</title><rect x="98.8208%" y="581" width="0.1145%" height="15" fill="rgb(228,149,22)"/><text x="99.0708%" y="591.50"></text></g><g><title>main (40 samples, 0.11%)</title><rect x="98.8208%" y="565" width="0.1145%" height="15" fill="rgb(243,54,13)"/><text x="99.0708%" y="575.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (40 samples, 0.11%)</title><rect x="98.8208%" y="549" width="0.1145%" height="15" fill="rgb(243,180,28)"/><text x="99.0708%" y="559.50"></text></g><g><title>__rust_maybe_catch_panic (40 samples, 0.11%)</title><rect x="98.8208%" y="533" width="0.1145%" height="15" fill="rgb(208,167,24)"/><text x="99.0708%" y="543.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (40 samples, 0.11%)</title><rect x="98.8208%" y="517" width="0.1145%" height="15" fill="rgb(245,73,45)"/><text x="99.0708%" y="527.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (40 samples, 0.11%)</title><rect x="98.8208%" y="501" width="0.1145%" height="15" fill="rgb(237,203,48)"/><text x="99.0708%" y="511.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (40 samples, 0.11%)</title><rect x="98.8208%" y="485" width="0.1145%" height="15" fill="rgb(211,197,16)"/><text x="99.0708%" y="495.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="469" width="0.1145%" height="15" fill="rgb(243,99,51)"/><text x="99.0708%" y="479.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="453" width="0.1145%" height="15" fill="rgb(215,123,29)"/><text x="99.0708%" y="463.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="437" width="0.1145%" height="15" fill="rgb(239,186,37)"/><text x="99.0708%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="421" width="0.1145%" height="15" fill="rgb(252,136,39)"/><text x="99.0708%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="405" width="0.1145%" height="15" fill="rgb(223,213,32)"/><text x="99.0708%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="389" width="0.1145%" height="15" fill="rgb(233,115,5)"/><text x="99.0708%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="373" width="0.1145%" height="15" fill="rgb(207,226,44)"/><text x="99.0708%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="357" width="0.1145%" height="15" fill="rgb(208,126,0)"/><text x="99.0708%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="341" width="0.1145%" height="15" fill="rgb(244,66,21)"/><text x="99.0708%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="325" width="0.1145%" height="15" fill="rgb(222,97,12)"/><text x="99.0708%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="309" width="0.1145%" height="15" fill="rgb(219,213,19)"/><text x="99.0708%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="293" width="0.1145%" height="15" fill="rgb(252,169,30)"/><text x="99.0708%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="277" width="0.1145%" height="15" fill="rgb(206,32,51)"/><text x="99.0708%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="261" width="0.1145%" height="15" fill="rgb(250,172,42)"/><text x="99.0708%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="245" width="0.1145%" height="15" fill="rgb(209,34,43)"/><text x="99.0708%" y="255.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="229" width="0.1145%" height="15" fill="rgb(223,11,35)"/><text x="99.0708%" y="239.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="213" width="0.1145%" height="15" fill="rgb(251,219,26)"/><text x="99.0708%" y="223.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="197" width="0.1145%" height="15" fill="rgb(231,119,3)"/><text x="99.0708%" y="207.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="181" width="0.1145%" height="15" fill="rgb(216,97,11)"/><text x="99.0708%" y="191.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="98.8208%" y="165" width="0.1145%" height="15" fill="rgb(223,59,9)"/><text x="99.0708%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (36 samples, 0.10%)</title><rect x="98.9353%" y="597" width="0.1030%" height="15" fill="rgb(233,93,31)"/><text x="99.1853%" y="607.50"></text></g><g><title>__rg_realloc (36 samples, 0.10%)</title><rect x="98.9353%" y="581" width="0.1030%" height="15" fill="rgb(239,81,33)"/><text x="99.1853%" y="591.50"></text></g><g><title>Unknown (36 samples, 0.10%)</title><rect x="98.9353%" y="565" width="0.1030%" height="15" fill="rgb(213,120,34)"/><text x="99.1853%" y="575.50"></text></g><g><title>_start (36 samples, 0.10%)</title><rect x="98.9353%" y="549" width="0.1030%" height="15" fill="rgb(243,49,53)"/><text x="99.1853%" y="559.50"></text></g><g><title>__libc_start_main (36 samples, 0.10%)</title><rect x="98.9353%" y="533" width="0.1030%" height="15" fill="rgb(247,216,33)"/><text x="99.1853%" y="543.50"></text></g><g><title>main (36 samples, 0.10%)</title><rect x="98.9353%" y="517" width="0.1030%" height="15" fill="rgb(226,26,14)"/><text x="99.1853%" y="527.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (36 samples, 0.10%)</title><rect x="98.9353%" y="501" width="0.1030%" height="15" fill="rgb(215,49,53)"/><text x="99.1853%" y="511.50"></text></g><g><title>__rust_maybe_catch_panic (36 samples, 0.10%)</title><rect x="98.9353%" y="485" width="0.1030%" height="15" fill="rgb(245,162,40)"/><text x="99.1853%" y="495.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (36 samples, 0.10%)</title><rect x="98.9353%" y="469" width="0.1030%" height="15" fill="rgb(229,68,17)"/><text x="99.1853%" y="479.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (36 samples, 0.10%)</title><rect x="98.9353%" y="453" width="0.1030%" height="15" fill="rgb(213,182,10)"/><text x="99.1853%" y="463.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (36 samples, 0.10%)</title><rect x="98.9353%" y="437" width="0.1030%" height="15" fill="rgb(245,125,30)"/><text x="99.1853%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="421" width="0.1030%" height="15" fill="rgb(232,202,2)"/><text x="99.1853%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="405" width="0.1030%" height="15" fill="rgb(237,140,51)"/><text x="99.1853%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="389" width="0.1030%" height="15" fill="rgb(236,157,25)"/><text x="99.1853%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="373" width="0.1030%" height="15" fill="rgb(219,209,0)"/><text x="99.1853%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="357" width="0.1030%" height="15" fill="rgb(240,116,54)"/><text x="99.1853%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="341" width="0.1030%" height="15" fill="rgb(216,10,36)"/><text x="99.1853%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="325" width="0.1030%" height="15" fill="rgb(222,72,44)"/><text x="99.1853%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="309" width="0.1030%" height="15" fill="rgb(232,159,9)"/><text x="99.1853%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="293" width="0.1030%" height="15" fill="rgb(210,39,32)"/><text x="99.1853%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="277" width="0.1030%" height="15" fill="rgb(216,194,45)"/><text x="99.1853%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="261" width="0.1030%" height="15" fill="rgb(218,18,35)"/><text x="99.1853%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="245" width="0.1030%" height="15" fill="rgb(207,83,51)"/><text x="99.1853%" y="255.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="229" width="0.1030%" height="15" fill="rgb(225,63,43)"/><text x="99.1853%" y="239.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="213" width="0.1030%" height="15" fill="rgb(207,57,36)"/><text x="99.1853%" y="223.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="197" width="0.1030%" height="15" fill="rgb(216,99,33)"/><text x="99.1853%" y="207.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="181" width="0.1030%" height="15" fill="rgb(225,42,16)"/><text x="99.1853%" y="191.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="165" width="0.1030%" height="15" fill="rgb(220,201,45)"/><text x="99.1853%" y="175.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="149" width="0.1030%" height="15" fill="rgb(225,33,4)"/><text x="99.1853%" y="159.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="133" width="0.1030%" height="15" fill="rgb(224,33,50)"/><text x="99.1853%" y="143.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="117" width="0.1030%" height="15" fill="rgb(246,198,51)"/><text x="99.1853%" y="127.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="101" width="0.1030%" height="15" fill="rgb(205,22,4)"/><text x="99.1853%" y="111.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="98.9353%" y="85" width="0.1030%" height="15" fill="rgb(206,3,8)"/><text x="99.1853%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h291ca61c1fe3b28d (36 samples, 0.10%)</title><rect x="98.9353%" y="69" width="0.1030%" height="15" fill="rgb(251,23,15)"/><text x="99.1853%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h74e96bc70234297c (40 samples, 0.11%)</title><rect x="99.1986%" y="581" width="0.1145%" height="15" fill="rgb(252,88,28)"/><text x="99.4486%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold::h260bd8b6ecb4ec80 (40 samples, 0.11%)</title><rect x="99.1986%" y="565" width="0.1145%" height="15" fill="rgb(212,127,14)"/><text x="99.4486%" y="575.50"></text></g><g><title>Unknown (40 samples, 0.11%)</title><rect x="99.1986%" y="549" width="0.1145%" height="15" fill="rgb(247,145,37)"/><text x="99.4486%" y="559.50"></text></g><g><title>_start (40 samples, 0.11%)</title><rect x="99.1986%" y="533" width="0.1145%" height="15" fill="rgb(209,117,53)"/><text x="99.4486%" y="543.50"></text></g><g><title>__libc_start_main (40 samples, 0.11%)</title><rect x="99.1986%" y="517" width="0.1145%" height="15" fill="rgb(212,90,42)"/><text x="99.4486%" y="527.50"></text></g><g><title>main (40 samples, 0.11%)</title><rect x="99.1986%" y="501" width="0.1145%" height="15" fill="rgb(218,164,37)"/><text x="99.4486%" y="511.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (40 samples, 0.11%)</title><rect x="99.1986%" y="485" width="0.1145%" height="15" fill="rgb(246,65,34)"/><text x="99.4486%" y="495.50"></text></g><g><title>__rust_maybe_catch_panic (40 samples, 0.11%)</title><rect x="99.1986%" y="469" width="0.1145%" height="15" fill="rgb(231,100,33)"/><text x="99.4486%" y="479.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (40 samples, 0.11%)</title><rect x="99.1986%" y="453" width="0.1145%" height="15" fill="rgb(228,126,14)"/><text x="99.4486%" y="463.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (40 samples, 0.11%)</title><rect x="99.1986%" y="437" width="0.1145%" height="15" fill="rgb(215,173,21)"/><text x="99.4486%" y="447.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (40 samples, 0.11%)</title><rect x="99.1986%" y="421" width="0.1145%" height="15" fill="rgb(210,6,40)"/><text x="99.4486%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="405" width="0.1145%" height="15" fill="rgb(212,48,18)"/><text x="99.4486%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="389" width="0.1145%" height="15" fill="rgb(230,214,11)"/><text x="99.4486%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="373" width="0.1145%" height="15" fill="rgb(254,105,39)"/><text x="99.4486%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="357" width="0.1145%" height="15" fill="rgb(245,158,5)"/><text x="99.4486%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="341" width="0.1145%" height="15" fill="rgb(249,208,11)"/><text x="99.4486%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="325" width="0.1145%" height="15" fill="rgb(210,39,28)"/><text x="99.4486%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="309" width="0.1145%" height="15" fill="rgb(211,56,53)"/><text x="99.4486%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="293" width="0.1145%" height="15" fill="rgb(226,201,30)"/><text x="99.4486%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="277" width="0.1145%" height="15" fill="rgb(239,101,34)"/><text x="99.4486%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="261" width="0.1145%" height="15" fill="rgb(226,209,5)"/><text x="99.4486%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="245" width="0.1145%" height="15" fill="rgb(250,105,47)"/><text x="99.4486%" y="255.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="229" width="0.1145%" height="15" fill="rgb(230,72,3)"/><text x="99.4486%" y="239.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="213" width="0.1145%" height="15" fill="rgb(232,218,39)"/><text x="99.4486%" y="223.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="197" width="0.1145%" height="15" fill="rgb(248,166,6)"/><text x="99.4486%" y="207.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="181" width="0.1145%" height="15" fill="rgb(247,89,20)"/><text x="99.4486%" y="191.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="165" width="0.1145%" height="15" fill="rgb(248,130,54)"/><text x="99.4486%" y="175.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="149" width="0.1145%" height="15" fill="rgb(234,196,4)"/><text x="99.4486%" y="159.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="133" width="0.1145%" height="15" fill="rgb(250,143,31)"/><text x="99.4486%" y="143.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="117" width="0.1145%" height="15" fill="rgb(211,110,34)"/><text x="99.4486%" y="127.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="101" width="0.1145%" height="15" fill="rgb(215,124,48)"/><text x="99.4486%" y="111.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="85" width="0.1145%" height="15" fill="rgb(216,46,13)"/><text x="99.4486%" y="95.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="69" width="0.1145%" height="15" fill="rgb(205,184,25)"/><text x="99.4486%" y="79.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (40 samples, 0.11%)</title><rect x="99.1986%" y="53" width="0.1145%" height="15" fill="rgb(228,1,10)"/><text x="99.4486%" y="63.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="99.2101%" y="37" width="0.1030%" height="15" fill="rgb(213,116,27)"/><text x="99.4601%" y="47.50"></text></g><g><title>Unknown (48 samples, 0.14%)</title><rect x="99.5421%" y="565" width="0.1374%" height="15" fill="rgb(241,95,50)"/><text x="99.7921%" y="575.50"></text></g><g><title>_start (48 samples, 0.14%)</title><rect x="99.5421%" y="549" width="0.1374%" height="15" fill="rgb(238,48,32)"/><text x="99.7921%" y="559.50"></text></g><g><title>__libc_start_main (48 samples, 0.14%)</title><rect x="99.5421%" y="533" width="0.1374%" height="15" fill="rgb(235,113,49)"/><text x="99.7921%" y="543.50"></text></g><g><title>main (48 samples, 0.14%)</title><rect x="99.5421%" y="517" width="0.1374%" height="15" fill="rgb(205,127,43)"/><text x="99.7921%" y="527.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (48 samples, 0.14%)</title><rect x="99.5421%" y="501" width="0.1374%" height="15" fill="rgb(250,162,2)"/><text x="99.7921%" y="511.50"></text></g><g><title>__rust_maybe_catch_panic (48 samples, 0.14%)</title><rect x="99.5421%" y="485" width="0.1374%" height="15" fill="rgb(220,13,41)"/><text x="99.7921%" y="495.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (48 samples, 0.14%)</title><rect x="99.5421%" y="469" width="0.1374%" height="15" fill="rgb(249,221,25)"/><text x="99.7921%" y="479.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (48 samples, 0.14%)</title><rect x="99.5421%" y="453" width="0.1374%" height="15" fill="rgb(215,208,19)"/><text x="99.7921%" y="463.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (48 samples, 0.14%)</title><rect x="99.5421%" y="437" width="0.1374%" height="15" fill="rgb(236,175,2)"/><text x="99.7921%" y="447.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="421" width="0.1374%" height="15" fill="rgb(241,52,2)"/><text x="99.7921%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="405" width="0.1374%" height="15" fill="rgb(248,140,14)"/><text x="99.7921%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="389" width="0.1374%" height="15" fill="rgb(253,22,42)"/><text x="99.7921%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="373" width="0.1374%" height="15" fill="rgb(234,61,47)"/><text x="99.7921%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="357" width="0.1374%" height="15" fill="rgb(208,226,15)"/><text x="99.7921%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="341" width="0.1374%" height="15" fill="rgb(217,221,4)"/><text x="99.7921%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="325" width="0.1374%" height="15" fill="rgb(212,174,34)"/><text x="99.7921%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="309" width="0.1374%" height="15" fill="rgb(253,83,4)"/><text x="99.7921%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="293" width="0.1374%" height="15" fill="rgb(250,195,49)"/><text x="99.7921%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="277" width="0.1374%" height="15" fill="rgb(241,192,25)"/><text x="99.7921%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="261" width="0.1374%" height="15" fill="rgb(208,124,10)"/><text x="99.7921%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="245" width="0.1374%" height="15" fill="rgb(222,33,0)"/><text x="99.7921%" y="255.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="229" width="0.1374%" height="15" fill="rgb(234,209,28)"/><text x="99.7921%" y="239.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="213" width="0.1374%" height="15" fill="rgb(224,11,23)"/><text x="99.7921%" y="223.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="197" width="0.1374%" height="15" fill="rgb(232,99,1)"/><text x="99.7921%" y="207.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="181" width="0.1374%" height="15" fill="rgb(237,95,45)"/><text x="99.7921%" y="191.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="165" width="0.1374%" height="15" fill="rgb(208,109,11)"/><text x="99.7921%" y="175.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="149" width="0.1374%" height="15" fill="rgb(216,190,48)"/><text x="99.7921%" y="159.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="133" width="0.1374%" height="15" fill="rgb(251,171,36)"/><text x="99.7921%" y="143.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="117" width="0.1374%" height="15" fill="rgb(230,62,22)"/><text x="99.7921%" y="127.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="101" width="0.1374%" height="15" fill="rgb(225,114,35)"/><text x="99.7921%" y="111.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="85" width="0.1374%" height="15" fill="rgb(215,118,42)"/><text x="99.7921%" y="95.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (48 samples, 0.14%)</title><rect x="99.5421%" y="69" width="0.1374%" height="15" fill="rgb(243,119,21)"/><text x="99.7921%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter::h9fbb60f564278adb (36 samples, 0.10%)</title><rect x="99.5764%" y="53" width="0.1030%" height="15" fill="rgb(252,177,53)"/><text x="99.8264%" y="63.50"></text></g><g><title>Unknown (44 samples, 0.13%)</title><rect x="99.7710%" y="549" width="0.1259%" height="15" fill="rgb(237,209,29)"/><text x="100.0210%" y="559.50"></text></g><g><title>_start (44 samples, 0.13%)</title><rect x="99.7710%" y="533" width="0.1259%" height="15" fill="rgb(212,65,23)"/><text x="100.0210%" y="543.50"></text></g><g><title>__libc_start_main (44 samples, 0.13%)</title><rect x="99.7710%" y="517" width="0.1259%" height="15" fill="rgb(230,222,46)"/><text x="100.0210%" y="527.50"></text></g><g><title>main (44 samples, 0.13%)</title><rect x="99.7710%" y="501" width="0.1259%" height="15" fill="rgb(215,135,32)"/><text x="100.0210%" y="511.50"></text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (44 samples, 0.13%)</title><rect x="99.7710%" y="485" width="0.1259%" height="15" fill="rgb(246,101,22)"/><text x="100.0210%" y="495.50"></text></g><g><title>__rust_maybe_catch_panic (44 samples, 0.13%)</title><rect x="99.7710%" y="469" width="0.1259%" height="15" fill="rgb(206,107,13)"/><text x="100.0210%" y="479.50"></text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (44 samples, 0.13%)</title><rect x="99.7710%" y="453" width="0.1259%" height="15" fill="rgb(250,100,44)"/><text x="100.0210%" y="463.50"></text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (44 samples, 0.13%)</title><rect x="99.7710%" y="437" width="0.1259%" height="15" fill="rgb(231,147,38)"/><text x="100.0210%" y="447.50"></text></g><g><title>alloc_free::main::hc80b97a251692aa3 (44 samples, 0.13%)</title><rect x="99.7710%" y="421" width="0.1259%" height="15" fill="rgb(229,8,40)"/><text x="100.0210%" y="431.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="405" width="0.1259%" height="15" fill="rgb(221,135,30)"/><text x="100.0210%" y="415.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="389" width="0.1259%" height="15" fill="rgb(249,193,18)"/><text x="100.0210%" y="399.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="373" width="0.1259%" height="15" fill="rgb(209,133,39)"/><text x="100.0210%" y="383.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="357" width="0.1259%" height="15" fill="rgb(232,100,14)"/><text x="100.0210%" y="367.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="341" width="0.1259%" height="15" fill="rgb(224,185,1)"/><text x="100.0210%" y="351.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="325" width="0.1259%" height="15" fill="rgb(223,139,8)"/><text x="100.0210%" y="335.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="309" width="0.1259%" height="15" fill="rgb(232,213,38)"/><text x="100.0210%" y="319.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="293" width="0.1259%" height="15" fill="rgb(207,94,22)"/><text x="100.0210%" y="303.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="277" width="0.1259%" height="15" fill="rgb(219,183,54)"/><text x="100.0210%" y="287.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="261" width="0.1259%" height="15" fill="rgb(216,185,54)"/><text x="100.0210%" y="271.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="245" width="0.1259%" height="15" fill="rgb(254,217,39)"/><text x="100.0210%" y="255.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="229" width="0.1259%" height="15" fill="rgb(240,178,23)"/><text x="100.0210%" y="239.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="213" width="0.1259%" height="15" fill="rgb(218,11,47)"/><text x="100.0210%" y="223.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="197" width="0.1259%" height="15" fill="rgb(218,51,51)"/><text x="100.0210%" y="207.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="181" width="0.1259%" height="15" fill="rgb(238,126,27)"/><text x="100.0210%" y="191.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="165" width="0.1259%" height="15" fill="rgb(249,202,22)"/><text x="100.0210%" y="175.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="149" width="0.1259%" height="15" fill="rgb(254,195,49)"/><text x="100.0210%" y="159.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="133" width="0.1259%" height="15" fill="rgb(208,123,14)"/><text x="100.0210%" y="143.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="117" width="0.1259%" height="15" fill="rgb(224,200,8)"/><text x="100.0210%" y="127.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="101" width="0.1259%" height="15" fill="rgb(217,61,36)"/><text x="100.0210%" y="111.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="85" width="0.1259%" height="15" fill="rgb(206,35,45)"/><text x="100.0210%" y="95.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="69" width="0.1259%" height="15" fill="rgb(217,65,33)"/><text x="100.0210%" y="79.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="53" width="0.1259%" height="15" fill="rgb(222,158,48)"/><text x="100.0210%" y="63.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (44 samples, 0.13%)</title><rect x="99.7710%" y="37" width="0.1259%" height="15" fill="rgb(254,2,54)"/><text x="100.0210%" y="47.50"></text></g><g><title>all (34,940 samples, 100%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(250,143,38)"/><text x="0.2500%" y="1119.50"></text></g><g><title>Unknown (34,940 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(248,25,0)"/><text x="0.2500%" y="1103.50">Unknown</text></g><g><title>_start (34,940 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(206,152,27)"/><text x="0.2500%" y="1087.50">_start</text></g><g><title>__libc_start_main (34,940 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(240,77,30)"/><text x="0.2500%" y="1071.50">__libc_start_main</text></g><g><title>main (34,940 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(231,5,3)"/><text x="0.2500%" y="1055.50">main</text></g><g><title>std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce (34,940 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(207,226,32)"/><text x="0.2500%" y="1039.50">std::rt::lang_start_internal::hd7efcfd33686f472/std::panic::catch_unwind::h05e542185e35aabf/std::panicking::try::h28c2e2ec1c3871ce</text></g><g><title>__rust_maybe_catch_panic (34,940 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(222,207,47)"/><text x="0.2500%" y="1023.50">__rust_maybe_catch_panic</text></g><g><title>std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0 (34,940 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(229,115,45)"/><text x="0.2500%" y="1007.50">std::panicking::try::do_call::h3210e2ce6a68897b/std::rt::lang_start_internal::{{closure}}::h812f70926ebbddd0</text></g><g><title>std::rt::lang_start::{{closure}}::he79ec0169c9d5a53 (34,940 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(224,191,6)"/><text x="0.2500%" y="991.50">std::rt::lang_start::{{closure}}::he79ec0169c9d5a53</text></g><g><title>alloc_free::main::hc80b97a251692aa3 (34,940 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(230,227,24)"/><text x="0.2500%" y="975.50">alloc_free::main::hc80b97a251692aa3</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (32,888 samples, 94.13%)</title><rect x="5.8729%" y="949" width="94.1271%" height="15" fill="rgb(228,80,19)"/><text x="6.1229%" y="959.50">alloc_free::quick_sort::h63d3b38ac2082f8f</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (18,980 samples, 54.32%)</title><rect x="45.6783%" y="933" width="54.3217%" height="15" fill="rgb(247,229,0)"/><text x="45.9283%" y="943.50">alloc_free::quick_sort::h63d3b38ac2082f8f</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (10,524 samples, 30.12%)</title><rect x="69.8798%" y="917" width="30.1202%" height="15" fill="rgb(237,194,15)"/><text x="70.1298%" y="927.50">alloc_free::quick_sort::h63d3b38ac2082f8f</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (4,464 samples, 12.78%)</title><rect x="87.2238%" y="901" width="12.7762%" height="15" fill="rgb(219,203,20)"/><text x="87.4738%" y="911.50">alloc_free::quick_s..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (3,016 samples, 8.63%)</title><rect x="91.3681%" y="885" width="8.6319%" height="15" fill="rgb(234,128,8)"/><text x="91.6181%" y="895.50">alloc_free::..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (2,216 samples, 6.34%)</title><rect x="93.6577%" y="869" width="6.3423%" height="15" fill="rgb(248,202,8)"/><text x="93.9077%" y="879.50">alloc_fr..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (1,964 samples, 5.62%)</title><rect x="94.3789%" y="853" width="5.6211%" height="15" fill="rgb(206,104,37)"/><text x="94.6289%" y="863.50">alloc_f..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (1,760 samples, 5.04%)</title><rect x="94.9628%" y="837" width="5.0372%" height="15" fill="rgb(223,8,27)"/><text x="95.2128%" y="847.50">alloc_..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (1,608 samples, 4.60%)</title><rect x="95.3978%" y="821" width="4.6022%" height="15" fill="rgb(216,217,28)"/><text x="95.6478%" y="831.50">alloc..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (1,520 samples, 4.35%)</title><rect x="95.6497%" y="805" width="4.3503%" height="15" fill="rgb(249,199,1)"/><text x="95.8997%" y="815.50">alloc..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (1,448 samples, 4.14%)</title><rect x="95.8558%" y="789" width="4.1442%" height="15" fill="rgb(240,85,17)"/><text x="96.1058%" y="799.50">alloc..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (1,356 samples, 3.88%)</title><rect x="96.1191%" y="773" width="3.8809%" height="15" fill="rgb(206,108,45)"/><text x="96.3691%" y="783.50">allo..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (1,284 samples, 3.67%)</title><rect x="96.3251%" y="757" width="3.6749%" height="15" fill="rgb(245,210,41)"/><text x="96.5751%" y="767.50">allo..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (1,196 samples, 3.42%)</title><rect x="96.5770%" y="741" width="3.4230%" height="15" fill="rgb(206,13,37)"/><text x="96.8270%" y="751.50">all..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (1,092 samples, 3.13%)</title><rect x="96.8746%" y="725" width="3.1254%" height="15" fill="rgb(250,61,18)"/><text x="97.1246%" y="735.50">all..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (996 samples, 2.85%)</title><rect x="97.1494%" y="709" width="2.8506%" height="15" fill="rgb(235,172,48)"/><text x="97.3994%" y="719.50">al..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (920 samples, 2.63%)</title><rect x="97.3669%" y="693" width="2.6331%" height="15" fill="rgb(249,201,17)"/><text x="97.6169%" y="703.50">al..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (784 samples, 2.24%)</title><rect x="97.7562%" y="677" width="2.2438%" height="15" fill="rgb(219,208,6)"/><text x="98.0062%" y="687.50">a..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (640 samples, 1.83%)</title><rect x="98.1683%" y="661" width="1.8317%" height="15" fill="rgb(248,31,23)"/><text x="98.4183%" y="671.50">a..</text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (536 samples, 1.53%)</title><rect x="98.4659%" y="645" width="1.5341%" height="15" fill="rgb(245,15,42)"/><text x="98.7159%" y="655.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (452 samples, 1.29%)</title><rect x="98.7064%" y="629" width="1.2936%" height="15" fill="rgb(222,217,39)"/><text x="98.9564%" y="639.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (372 samples, 1.06%)</title><rect x="98.9353%" y="613" width="1.0647%" height="15" fill="rgb(210,219,27)"/><text x="99.1853%" y="623.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (284 samples, 0.81%)</title><rect x="99.1872%" y="597" width="0.8128%" height="15" fill="rgb(252,166,36)"/><text x="99.4372%" y="607.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (200 samples, 0.57%)</title><rect x="99.4276%" y="581" width="0.5724%" height="15" fill="rgb(245,132,34)"/><text x="99.6776%" y="591.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (112 samples, 0.32%)</title><rect x="99.6795%" y="565" width="0.3205%" height="15" fill="rgb(236,54,3)"/><text x="99.9295%" y="575.50"></text></g><g><title>alloc_free::quick_sort::h63d3b38ac2082f8f (36 samples, 0.10%)</title><rect x="99.8970%" y="549" width="0.1030%" height="15" fill="rgb(241,173,43)"/><text x="100.1470%" y="559.50"></text></g></svg></svg>